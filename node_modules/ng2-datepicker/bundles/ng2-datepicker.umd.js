(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/forms'), require('ngx-slimscroll'), require('date-fns'), require('date-fns/locale/en-US'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('ng2-datepicker', ['exports', '@angular/core', '@angular/common', '@angular/forms', 'ngx-slimscroll', 'date-fns', 'date-fns/locale/en-US', 'rxjs', 'rxjs/operators'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global['ng2-datepicker'] = {}, global.ng.core, global.ng.common, global.ng.forms, global.slimscroll, global.dateFns, global.locale, global.rxjs, global.rxjs.operators));
}(this, (function (exports, core, common, forms, ngxSlimscroll, dateFns, locale, rxjs, operators) { 'use strict';

    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

    var locale__default = /*#__PURE__*/_interopDefaultLegacy(locale);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from) {
        for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
            to[j] = from[i];
        return to;
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    var DATEPICKER_OPTIONS = new core.InjectionToken('Datepicker config');
    function mergeDatepickerOptions(opts) {
        return Object.assign(Object.assign({}, defaultOptions), opts);
    }
    var defaultOptions = {
        minDate: null,
        maxDate: null,
        minYear: dateFns.getYear(new Date()) - 30,
        maxYear: dateFns.getYear(new Date()) + 30,
        placeholder: '',
        format: 'LLLL do yyyy',
        formatTitle: 'LLLL yyyy',
        formatDays: 'EEEEE',
        firstCalendarDay: 0,
        locale: locale__default['default'],
        position: 'bottom',
        inputClass: '',
        calendarClass: 'datepicker-default',
        scrollBarColor: '#dfe3e9',
        enableKeyboard: true
    };

    var DatepickerComponent = /** @class */ (function () {
        function DatepickerComponent(elementRef, ref, document) {
            this.elementRef = elementRef;
            this.ref = ref;
            this.options = Object.assign({}, defaultOptions);
            this.scrollOptions = new ngxSlimscroll.SlimScrollOptions(this.scrollBarOptions);
            this.isOpened = false;
            this.innerValue = new Date();
            this.displayValue = '';
            this.view = 'days';
            this.date = new Date();
            this.years = [];
            this.days = [];
            this.dayNames = [];
            this.scrollEvents = new core.EventEmitter();
            this.sub = new rxjs.Subscription();
            this.onTouchedCallback = function () { };
            this.onChangeCallback = function () { };
            this.doc = document;
        }
        Object.defineProperty(DatepickerComponent.prototype, "value", {
            get: function () {
                return this.innerValue;
            },
            set: function (val) {
                this.innerValue = val;
                this.displayValue = dateFns.format(this.innerValue, this.options.format, { locale: this.options.locale });
                this.onChangeCallback(this.innerValue);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatepickerComponent.prototype, "title", {
            get: function () {
                return dateFns.format(this.date, this.options.formatTitle);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DatepickerComponent.prototype, "scrollBarOptions", {
            get: function () {
                return {
                    barBackground: (this.options && this.options.scrollBarColor) || '#dfe3e9',
                    gridBackground: 'transparent',
                    barBorderRadius: '3',
                    gridBorderRadius: '3',
                    barWidth: '6',
                    gridWidth: '6',
                    barMargin: '0',
                    gridMargin: '0'
                };
            },
            enumerable: false,
            configurable: true
        });
        DatepickerComponent.prototype.ngOnInit = function () {
            this.view = 'days';
            this.date = new Date();
            this.init();
        };
        DatepickerComponent.prototype.ngOnChanges = function (changes) {
            var _this = this;
            if ('options' in changes) {
                this.options = mergeDatepickerOptions(this.options);
                this.scrollOptions = new ngxSlimscroll.SlimScrollOptions(this.scrollBarOptions);
                if (this.sub) {
                    this.sub.unsubscribe();
                }
                if (this.options.enableKeyboard) {
                    this.sub = rxjs.fromEvent(this.doc || document, 'keyup')
                        .pipe(operators.filter(function () { return _this.isOpened; }))
                        .subscribe(function (e) {
                        e.preventDefault();
                        e.stopPropagation();
                        switch (e.key) {
                            case 'Down':
                            case 'ArrowDown':
                                _this.prevYear();
                                break;
                            case 'Up':
                            case 'ArrowUp':
                                _this.nextYear();
                                break;
                            case 'Left':
                            case 'ArrowLeft':
                                _this.prevMonth();
                                break;
                            case 'Right':
                            case 'ArrowRight':
                                _this.nextMonth();
                                break;
                            case 'Esc':
                            case 'Escape':
                            case 'Enter':
                                _this.isOpened = false;
                                break;
                            default:
                                return;
                        }
                    });
                }
            }
        };
        DatepickerComponent.prototype.ngOnDestroy = function () {
            this.sub.unsubscribe();
        };
        DatepickerComponent.prototype.toggle = function () {
            this.isOpened = !this.isOpened;
            if (this.isOpened) {
                this.view = 'days';
                this.date = this.value;
                this.initDays();
            }
        };
        DatepickerComponent.prototype.toggleView = function () {
            this.view = this.view === 'days' ? 'years' : 'days';
            if (this.view === 'years') {
                this.ref.detectChanges();
                this.scrollToYear();
            }
        };
        DatepickerComponent.prototype.nextMonth = function () {
            this.date = dateFns.addMonths(this.date, 1);
            this.initDays();
        };
        DatepickerComponent.prototype.prevMonth = function () {
            this.date = dateFns.subMonths(this.date, 1);
            this.initDays();
        };
        DatepickerComponent.prototype.nextYear = function () {
            this.date = dateFns.addYears(this.date, 1);
            this.initDays();
        };
        DatepickerComponent.prototype.prevYear = function () {
            this.date = dateFns.subYears(this.date, 1);
            this.initDays();
        };
        DatepickerComponent.prototype.setDate = function (i) {
            this.date = this.days[i].date;
            this.value = this.date;
            this.initDays();
            this.isOpened = false;
        };
        DatepickerComponent.prototype.setYear = function (i) {
            this.date = dateFns.setYear(this.date, this.years[i].year);
            this.initDays();
            this.initYears();
            this.view = 'days';
        };
        DatepickerComponent.prototype.scrollToYear = function () {
            var parent = this.elementRef.nativeElement.querySelector('.main-calendar-years');
            var el = this.elementRef.nativeElement.querySelector('.year-unit.is-selected');
            var y = el.offsetTop - parent.clientHeight / 2 + el.clientHeight / 2;
            var event = new ngxSlimscroll.SlimScrollEvent({ type: 'scrollTo', y: y, duration: 100 });
            this.scrollEvents.emit(event);
        };
        DatepickerComponent.prototype.init = function () {
            this.initDayNames();
            this.initDays();
            this.initYears();
        };
        DatepickerComponent.prototype.initDays = function () {
            var _this = this;
            var date = this.date || new Date();
            var _a = __read([dateFns.startOfMonth(date), dateFns.endOfMonth(date)], 2), start = _a[0], end = _a[1];
            this.days = dateFns.eachDayOfInterval({ start: start, end: end }).map(function (d) { return _this.generateDay(d); });
            var tmp = dateFns.getDay(start) - this.options.firstCalendarDay;
            var prevDays = tmp < 0 ? 7 - this.options.firstCalendarDay : tmp;
            for (var i = 1; i <= prevDays; i++) {
                var d = dateFns.subDays(start, i);
                this.days.unshift(this.generateDay(d, false));
            }
        };
        DatepickerComponent.prototype.initYears = function () {
            var _this = this;
            var range = this.options.maxYear - this.options.minYear + 1;
            this.years = Array.from(new Array(range), function (_, i) { return i + _this.options.minYear; }).map(function (year) {
                return { year: year, isThisYear: year === dateFns.getYear(_this.date) };
            });
        };
        DatepickerComponent.prototype.initDayNames = function () {
            this.dayNames = [];
            var start = this.options.firstCalendarDay;
            for (var i = start; i <= 6 + start; i++) {
                var date = dateFns.setDay(new Date(), i);
                this.dayNames.push(dateFns.format(date, this.options.formatDays, { locale: this.options.locale }));
            }
        };
        DatepickerComponent.prototype.generateDay = function (date, inThisMonth) {
            if (inThisMonth === void 0) { inThisMonth = true; }
            return {
                date: date,
                day: dateFns.getDate(date),
                month: dateFns.getMonth(date),
                year: dateFns.getYear(date),
                inThisMonth: inThisMonth,
                isToday: dateFns.isToday(date),
                isSelected: dateFns.isSameDay(date, this.innerValue) && dateFns.isSameMonth(date, this.innerValue) && dateFns.isSameYear(date, this.innerValue),
                isSelectable: this.isDateSelectable(date)
            };
        };
        DatepickerComponent.prototype.isDateSelectable = function (date) {
            if (this.options.minDate && dateFns.isBefore(date, this.options.minDate)) {
                return false;
            }
            if (this.options.maxDate && dateFns.isAfter(date, this.options.maxDate)) {
                return false;
            }
            return true;
        };
        DatepickerComponent.prototype.writeValue = function (val) {
            if (!val) {
                return;
            }
            this.innerValue = val;
            this.displayValue = dateFns.format(this.innerValue, this.options.format, { locale: this.options.locale });
            this.init();
        };
        DatepickerComponent.prototype.registerOnChange = function (fn) {
            this.onChangeCallback = fn;
        };
        DatepickerComponent.prototype.registerOnTouched = function (fn) {
            this.onTouchedCallback = fn;
        };
        DatepickerComponent.prototype.onBlur = function (e) {
            if (!this.isOpened) {
                return;
            }
            var input = this.elementRef.nativeElement.querySelector('.datepicker-container > input');
            if (!input || e.target === input || input.contains(e.target)) {
                return;
            }
            var container = this.elementRef.nativeElement.querySelector('.datepicker-container > .calendar-container');
            if (container &&
                container !== e.target &&
                !container.contains(e.target) &&
                !e.target.classList.contains('year-unit')) {
                this.isOpened = false;
            }
        };
        return DatepickerComponent;
    }());
    DatepickerComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'ngx-datepicker',
                    template: "<div class=\"datepicker-container\" [class]=\"options.calendarClass\">\n  <input\n    type=\"text\"\n    [(ngModel)]=\"displayValue\"\n    [class]=\"options.inputClass\"\n    [placeholder]=\"options.placeholder\"\n    readonly\n    (click)=\"toggle()\"\n  />\n\n  <div class=\"calendar-container\" *ngIf=\"isOpened\">\n    <div class=\"top-container\">\n      <div class=\"month-year-container\">\n        <span class=\"month-year-text\">\n          <span (click)=\"toggleView()\">{{ title }}</span>\n        </span>\n      </div>\n      <div class=\"controls\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"control prev-month\"\n          width=\"8\"\n          height=\"13\"\n          (click)=\"prevMonth()\"\n          *ngIf=\"view === 'days'\"\n        >\n          <path\n            d=\"M7.575 1.131a1.063 1.063 0 00-1.502 0l-4.93 4.93c-.42.42-.42 1.099 0 1.518l4.93 4.93a1.063 1.063 0 001.503-1.503L3.388 6.82l4.186-4.186a1.063 1.063 0 000-1.503z\"\n          />\n        </svg>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"control next-month\"\n          width=\"8\"\n          height=\"13\"\n          (click)=\"nextMonth()\"\n          *ngIf=\"view === 'days'\"\n        >\n          <path\n            d=\"M1.14 1.131a1.063 1.063 0 011.502 0l4.93 4.93c.42.42.42 1.099 0 1.518l-4.93 4.93a1.063 1.063 0 01-1.503-1.503L5.327 6.82 1.14 2.634a1.063 1.063 0 010-1.503z\"\n          />\n        </svg>\n      </div>\n    </div>\n    <div class=\"main-calendar-container is-days\" *ngIf=\"view === 'days'\">\n      <div class=\"main-calendar-day-names\">\n        <span class=\"day-name-unit\" *ngFor=\"let day of dayNames\">{{ day }}</span>\n      </div>\n      <div class=\"main-calendar-days\">\n        <span\n          class=\"day-unit\"\n          *ngFor=\"let day of days; let i = index\"\n          [ngClass]=\"{\n            'is-prev-month': !day.inThisMonth,\n            'is-today': day.isToday,\n            'is-selected': day.isSelected,\n            'is-disabled': !day.isSelectable\n          }\"\n          (click)=\"day.isSelectable && setDate(i)\"\n          >{{ day.day }}</span\n        >\n      </div>\n    </div>\n    <div class=\"main-calendar-container is-years\" *ngIf=\"view === 'years'\">\n      <div class=\"main-calendar-years\" slimScroll [options]=\"scrollOptions\" [scrollEvents]=\"scrollEvents\">\n        <span\n          class=\"year-unit\"\n          *ngFor=\"let year of years; let i = index\"\n          [ngClass]=\"{ 'is-selected': year.isThisYear }\"\n          (click)=\"setYear(i)\"\n          >{{ year.year }}</span\n        >\n      </div>\n    </div>\n  </div>\n</div>\n",
                    providers: [{ provide: forms.NG_VALUE_ACCESSOR, useExisting: DatepickerComponent, multi: true }],
                    styles: [".datepicker-container{position:relative;display:inline-block;box-sizing:border-box}.datepicker-container *{box-sizing:inherit}.datepicker-container input{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer}.datepicker-container .is-hidden{display:none!important}.datepicker-container .calendar-container{position:absolute;width:320px;border-radius:4px;top:35px;left:0;z-index:10}.datepicker-container .calendar-container .top-container{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:100%;padding:20px;display:flex;justify-content:space-between;align-items:center}.datepicker-container .calendar-container .top-container .month-year-container{height:100%;display:flex;align-items:center;cursor:pointer;position:relative}.datepicker-container .calendar-container .top-container .month-year-container .month-year-text{font-size:16px;width:100%}.datepicker-container .calendar-container .top-container .controls{height:100%;display:flex;justify-content:flex-end;align-items:center}.datepicker-container .calendar-container .top-container .controls .control{cursor:pointer;margin-left:20px}.datepicker-container .calendar-container .main-calendar-container{width:100%;height:100%;font-size:12px;display:block}.datepicker-container .calendar-container .main-calendar-container .main-calendar-day-names{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:flex;align-items:center;height:35px;padding:0 10px}.datepicker-container .calendar-container .main-calendar-container .main-calendar-day-names .day-name-unit{width:calc(100% / 7);text-transform:uppercase;text-align:center}.datepicker-container .calendar-container .main-calendar-container .main-calendar-days,.datepicker-container .calendar-container .main-calendar-container .main-calendar-years{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;padding:10px;width:100%;overflow:hidden;text-align:left;display:inline-block}.datepicker-container .calendar-container .main-calendar-container .main-calendar-days.is-hidden,.datepicker-container .calendar-container .main-calendar-container .main-calendar-years.is-hidden{display:none}.datepicker-container .calendar-container .main-calendar-container .main-calendar-days .day-unit,.datepicker-container .calendar-container .main-calendar-container .main-calendar-days .year-unit,.datepicker-container .calendar-container .main-calendar-container .main-calendar-years .day-unit,.datepicker-container .calendar-container .main-calendar-container .main-calendar-years .year-unit{width:calc(100% / 7);display:inline-flex;align-items:center;justify-content:center;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-size:13px;border-radius:50%}.datepicker-container .calendar-container .main-calendar-container .main-calendar-days .day-unit:before,.datepicker-container .calendar-container .main-calendar-container .main-calendar-days .year-unit:before,.datepicker-container .calendar-container .main-calendar-container .main-calendar-years .day-unit:before,.datepicker-container .calendar-container .main-calendar-container .main-calendar-years .year-unit:before{content:\"\";float:left;padding-top:calc(100% - 5px)}.datepicker-container .calendar-container .main-calendar-container .main-calendar-days .day-unit.is-disabled,.datepicker-container .calendar-container .main-calendar-container .main-calendar-days .year-unit.is-disabled,.datepicker-container .calendar-container .main-calendar-container .main-calendar-years .day-unit.is-disabled,.datepicker-container .calendar-container .main-calendar-container .main-calendar-years .year-unit.is-disabled{cursor:not-allowed}.datepicker-container .calendar-container .main-calendar-container .main-calendar-days .day-unit.is-disabled:hover,.datepicker-container .calendar-container .main-calendar-container .main-calendar-days .year-unit.is-disabled:hover,.datepicker-container .calendar-container .main-calendar-container .main-calendar-years .day-unit.is-disabled:hover,.datepicker-container .calendar-container .main-calendar-container .main-calendar-years .year-unit.is-disabled:hover{background:transparent}.datepicker-container .calendar-container .main-calendar-container .main-calendar-years{display:block;padding:10px;height:275px}.datepicker-container .calendar-container .main-calendar-container .main-calendar-years .year-unit{width:calc(100% / 4);height:35px;border-radius:20px;margin:8px 0}.datepicker-container .calendar-container .main-calendar-container .main-calendar-years .year-unit:before{padding-top:0}.datepicker-default .calendar-container{background:#fff;border:1px solid #eaedf3;box-shadow:0 4px 12px rgba(0,0,0,.05);top:35px;left:0;font-weight:600}.datepicker-default .month-year-text{color:#010001}.datepicker-default .control path{fill:#aaa8ab}.datepicker-default .control:hover path{fill:#010001}.datepicker-default .main-calendar-day-names{border-bottom:1px solid #eaedf3}.datepicker-default .day-name-unit{color:#aaa8ab}.datepicker-default .day-unit,.datepicker-default .year-unit{color:#010001}.datepicker-default .day-unit.is-prev-month,.datepicker-default .year-unit.is-prev-month{color:#bbbabe}.datepicker-default .day-unit.is-today,.datepicker-default .year-unit.is-today{background:#edeef2}.datepicker-default .day-unit.is-selected,.datepicker-default .day-unit:hover,.datepicker-default .year-unit.is-selected,.datepicker-default .year-unit:hover{background:#010001;color:#fff}.datepicker-default .day-unit.is-disabled,.datepicker-default .year-unit.is-disabled{color:#aaa8ab}.datepicker-default .day-unit.is-disabled:hover,.datepicker-default .year-unit.is-disabled:hover{background:transparent}"]
                },] }
    ];
    DatepickerComponent.ctorParameters = function () { return [
        { type: core.ElementRef },
        { type: core.ChangeDetectorRef },
        { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] }
    ]; };
    DatepickerComponent.propDecorators = {
        options: [{ type: core.Input }],
        scrollOptions: [{ type: core.Input }],
        isOpened: [{ type: core.Input }],
        onBlur: [{ type: core.HostListener, args: ['document:click', ['$event'],] }]
    };

    var DatepickerModule = /** @class */ (function () {
        function DatepickerModule() {
        }
        DatepickerModule.forRoot = function (options) {
            return {
                ngModule: DatepickerModule,
                providers: [{ provide: DATEPICKER_OPTIONS, useValue: mergeDatepickerOptions(options) }]
            };
        };
        return DatepickerModule;
    }());
    DatepickerModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [common.CommonModule, forms.FormsModule, ngxSlimscroll.NgSlimScrollModule],
                    declarations: [DatepickerComponent],
                    exports: [DatepickerComponent, common.CommonModule, forms.FormsModule]
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.DATEPICKER_OPTIONS = DATEPICKER_OPTIONS;
    exports.DatepickerComponent = DatepickerComponent;
    exports.DatepickerModule = DatepickerModule;
    exports.defaultOptions = defaultOptions;
    exports.mergeDatepickerOptions = mergeDatepickerOptions;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ng2-datepicker.umd.js.map
