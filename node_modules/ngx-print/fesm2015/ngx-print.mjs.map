{"version":3,"file":"ngx-print.mjs","sources":["../../../src/lib/ngx-print.directive.ts","../../../src/lib/ngx-print.module.ts","../../../src/public_api.ts","../../../src/ngx-print.ts"],"sourcesContent":["import { Directive, HostListener, Input } from '@angular/core';\r\n@Directive({\r\n  selector: \"button[ngxPrint]\"\r\n})\r\nexport class NgxPrintDirective {\r\n\r\n  public _printStyle = [];\r\n\r\n  /**\r\n   * Prevents the print dialog from opening on the window\r\n   *\r\n   * @memberof NgxPrintDirective\r\n   */\r\n  @Input() previewOnly: boolean = false;\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @memberof NgxPrintDirective\r\n   */\r\n  @Input() printSectionId: string;\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @memberof NgxPrintDirective\r\n   */\r\n  @Input() printTitle: string;\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @memberof NgxPrintDirective\r\n   */\r\n  @Input() useExistingCss = false;\r\n\r\n  /**\r\n   * A delay in milliseconds to force the print dialog to wait before opened. Default: 0\r\n   *\r\n   * @memberof NgxPrintDirective\r\n   */\r\n  @Input() printDelay: number = 0;\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @memberof NgxPrintDirective\r\n   */\r\n  @Input()\r\n  set printStyle(values: { [key: string]: { [key: string]: string } }) {\r\n    for (let key in values) {\r\n      if (values.hasOwnProperty(key)) {\r\n      this._printStyle.push((key + JSON.stringify(values[key])).replace(/['\"]+/g, ''));\r\n      }\r\n    }\r\n    this.returnStyleValues();\r\n  }\r\n\r\n/**\r\n *\r\n *\r\n * @returns the string that create the stylesheet which will be injected\r\n * later within <style></style> tag.\r\n *\r\n * -join/replace to transform an array objects to css-styled string\r\n *\r\n * @memberof NgxPrintDirective\r\n */\r\npublic returnStyleValues() {\r\n  return `<style> ${this._printStyle.join(' ').replace(/,/g,';')} </style>`;\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @returns html for the given tag\r\n   *\r\n   * @memberof NgxPrintDirective\r\n   */\r\n  private _styleSheetFile = '';\r\n\r\n  /**\r\n   * @memberof NgxPrintDirective\r\n   * @param cssList\r\n   */\r\n  @Input()\r\n  set styleSheetFile(cssList: string) {\r\n    let linkTagFn = function(cssFileName) {\r\n      return `<link rel=\"stylesheet\" type=\"text/css\" href=\"${cssFileName}\">`;\r\n    }\r\n    if (cssList.indexOf(',') !== -1) {\r\n      const valueArr = cssList.split(',');\r\n      for (let val of valueArr) {\r\n        this._styleSheetFile = this._styleSheetFile + linkTagFn(val);\r\n      }\r\n    } else {\r\n      this._styleSheetFile = linkTagFn(cssList);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns string which contains the link tags containing the css which will\r\n   * be injected later within <head></head> tag.\r\n   *\r\n   */\r\n  private returnStyleSheetLinkTags() {\r\n    return this._styleSheetFile;\r\n  }\r\n  private getElementTag(tag: keyof HTMLElementTagNameMap): string {\r\n    const html: string[] = [];\r\n    const elements = document.getElementsByTagName(tag);\r\n    for (let index = 0; index < elements.length; index++) {\r\n      html.push(elements[index].outerHTML);\r\n    }\r\n    return html.join('\\r\\n');\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param data the html element collection to save defaults to\r\n   * \r\n   */\r\n  private getFormData(data: any) {\r\n    for (var i = 0; i < data.length; i++) {\r\n      data[i].defaultValue = data[i].value;\r\n      if(data[i].checked) {\r\n        data[i].defaultChecked = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns html section to be printed along with some associated inputs\r\n   * \r\n   */\r\n  private getHtmlContents() {\r\n    let printContents = document.getElementById(this.printSectionId);\r\n    let innards = printContents.getElementsByTagName('input');\r\n    this.getFormData(innards);\r\n\r\n    let txt = printContents.getElementsByTagName('textarea');\r\n    this.getFormData(txt);\r\n    \r\n    return printContents.innerHTML;\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @memberof NgxPrintDirective\r\n   */\r\n  @HostListener('click')\r\n  public print(): void {\r\n    let printContents, popupWin, styles = '', links = '';\r\n    const baseTag = this.getElementTag('base');\r\n\r\n    if(this.useExistingCss) {\r\n      styles = this.getElementTag('style');\r\n      links = this.getElementTag('link');\r\n    }\r\n\r\n    printContents = this.getHtmlContents();\r\n    popupWin = window.open(\"\", \"_blank\", \"top=0,left=0,height=auto,width=auto\");\r\n    popupWin.document.open();\r\n    popupWin.document.write(`\r\n      <html>\r\n        <head>\r\n          <title>${this.printTitle ? this.printTitle : \"\"}</title>\r\n          ${baseTag}\r\n          ${this.returnStyleValues()}\r\n          ${this.returnStyleSheetLinkTags()}\r\n          ${styles}\r\n          ${links}\r\n        </head>\r\n        <body>\r\n          ${printContents}\r\n          <script defer>\r\n            function triggerPrint(event) {\r\n              window.removeEventListener('load', triggerPrint, false);\r\n              ${this.previewOnly ? '' : `setTimeout(function() {\r\n                closeWindow(window.print());\r\n              }, ${this.printDelay});`}\r\n            }\r\n            function closeWindow(){\r\n                window.close();\r\n            }\r\n            window.addEventListener('load', triggerPrint, false);\r\n          </script>\r\n        </body>\r\n      </html>`);\r\n    popupWin.document.close();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NgxPrintDirective } from './ngx-print.directive';\r\n\r\n@NgModule({\r\n  declarations: [NgxPrintDirective],\r\n  imports: [\r\n  ],\r\n  exports: [NgxPrintDirective]\r\n})\r\nexport class NgxPrintModule { }\r\n","/*\r\n * Public API Surface of ngx-print\r\n */\r\n\r\nexport * from './lib/ngx-print.directive';\r\nexport * from './lib/ngx-print.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}