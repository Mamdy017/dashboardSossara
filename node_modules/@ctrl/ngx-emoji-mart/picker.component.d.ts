import { ChangeDetectorRef, EventEmitter, NgZone, OnDestroy, OnInit, QueryList, Renderer2 } from '@angular/core';
import { Emoji, EmojiCategory, EmojiData, EmojiEvent } from '@ctrl/ngx-emoji-mart/ngx-emoji';
import { CategoryComponent } from './category.component';
import { EmojiFrequentlyService } from './emoji-frequently.service';
import { PreviewComponent } from './preview.component';
import { SearchComponent } from './search.component';
import * as i0 from "@angular/core";
export declare class PickerComponent implements OnInit, OnDestroy {
    private ngZone;
    private renderer;
    private ref;
    private frequently;
    private platformId;
    perLine: number;
    totalFrequentLines: number;
    i18n: any;
    style: any;
    title: string;
    emoji: string;
    darkMode: boolean;
    color: string;
    hideObsolete: boolean;
    /** all categories shown */
    categories: EmojiCategory[];
    /** used to temporarily draw categories */
    activeCategories: EmojiCategory[];
    set: Emoji['set'];
    skin: Emoji['skin'];
    /** Renders the native unicode emoji */
    isNative: Emoji['isNative'];
    emojiSize: Emoji['size'];
    sheetSize: Emoji['sheetSize'];
    emojisToShowFilter?: (x: string) => boolean;
    showPreview: boolean;
    emojiTooltip: boolean;
    autoFocus: boolean;
    custom: any[];
    hideRecent: boolean;
    imageUrlFn: Emoji['imageUrlFn'];
    include?: string[];
    exclude?: string[];
    notFoundEmoji: string;
    categoriesIcons: {
        [key: string]: string;
    };
    searchIcons: {
        [key: string]: string;
    };
    useButton: boolean;
    enableFrequentEmojiSort: boolean;
    enableSearch: boolean;
    showSingleCategory: boolean;
    virtualize: boolean;
    virtualizeOffset: number;
    recent?: string[];
    emojiClick: EventEmitter<any>;
    emojiSelect: EventEmitter<any>;
    skinChange: EventEmitter<1 | 4 | 2 | 3 | 5 | 6>;
    private scrollRef;
    previewRef?: PreviewComponent;
    searchRef?: SearchComponent;
    categoryRefs: QueryList<CategoryComponent>;
    scrollHeight: number;
    clientHeight: number;
    clientWidth: number;
    selected?: string;
    nextScroll?: string;
    scrollTop?: number;
    firstRender: boolean;
    previewEmoji: any;
    animationFrameRequestId: number | null;
    NAMESPACE: string;
    measureScrollbar: number;
    RECENT_CATEGORY: EmojiCategory;
    SEARCH_CATEGORY: EmojiCategory;
    CUSTOM_CATEGORY: EmojiCategory;
    private scrollListener;
    backgroundImageFn: Emoji['backgroundImageFn'];
    constructor(ngZone: NgZone, renderer: Renderer2, ref: ChangeDetectorRef, frequently: EmojiFrequentlyService, platformId: string);
    ngOnInit(): void;
    ngOnDestroy(): void;
    setActiveCategories(categoriesToMakeActive: Array<EmojiCategory>): void;
    updateCategoriesSize(): void;
    handleAnchorClick($event: {
        category: EmojiCategory;
        index: number;
    }): void;
    categoryTrack(index: number, item: any): any;
    handleScroll(noSelectionChange?: boolean): void;
    handleSearch($emojis: any[] | null): void;
    handleEnterKey($event: Event, emoji?: EmojiData): void;
    handleEmojiOver($event: EmojiEvent): void;
    handleEmojiLeave(): void;
    handleEmojiClick($event: EmojiEvent): void;
    handleSkinChange(skin: Emoji['skin']): void;
    getWidth(): string;
    private cancelAnimationFrame;
    static ɵfac: i0.ɵɵFactoryDeclaration<PickerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PickerComponent, "emoji-mart", never, { "perLine": "perLine"; "totalFrequentLines": "totalFrequentLines"; "i18n": "i18n"; "style": "style"; "title": "title"; "emoji": "emoji"; "darkMode": "darkMode"; "color": "color"; "hideObsolete": "hideObsolete"; "categories": "categories"; "activeCategories": "activeCategories"; "set": "set"; "skin": "skin"; "isNative": "isNative"; "emojiSize": "emojiSize"; "sheetSize": "sheetSize"; "emojisToShowFilter": "emojisToShowFilter"; "showPreview": "showPreview"; "emojiTooltip": "emojiTooltip"; "autoFocus": "autoFocus"; "custom": "custom"; "hideRecent": "hideRecent"; "imageUrlFn": "imageUrlFn"; "include": "include"; "exclude": "exclude"; "notFoundEmoji": "notFoundEmoji"; "categoriesIcons": "categoriesIcons"; "searchIcons": "searchIcons"; "useButton": "useButton"; "enableFrequentEmojiSort": "enableFrequentEmojiSort"; "enableSearch": "enableSearch"; "showSingleCategory": "showSingleCategory"; "virtualize": "virtualize"; "virtualizeOffset": "virtualizeOffset"; "recent": "recent"; "backgroundImageFn": "backgroundImageFn"; }, { "emojiClick": "emojiClick"; "emojiSelect": "emojiSelect"; "skinChange": "skinChange"; }, never, never, false>;
}
