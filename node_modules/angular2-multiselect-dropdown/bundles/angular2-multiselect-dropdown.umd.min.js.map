{"version":3,"sources":["../../projects/angular2-multiselect-dropdown-lib/src/lib/multiselect.model.ts","../../projects/angular2-multiselect-dropdown-lib/src/lib/clickOutside.ts","../../projects/angular2-multiselect-dropdown-lib/src/lib/multiselect.service.ts","../../projects/angular2-multiselect-dropdown-lib/src/lib/list-filter.ts","../../projects/angular2-multiselect-dropdown-lib/src/lib/menu-item.ts","../../projects/angular2-multiselect-dropdown-lib/src/lib/virtual-scroll/virtual-scroll.ts","../../projects/angular2-multiselect-dropdown-lib/src/lib/multiselect.component.ts"],"names":["MyException","status","body","this","ClickOutsideDirective","_elementRef","clickOutside","EventEmitter","prototype","onClick","event","targetElement","nativeElement","contains","emit","Directive","args","selector","ElementRef","Output","HostListener","type","ScrollDirective","scroll","styleDirective","el","ngOnInit","style","top","styleVal","ngOnChanges","Input","setPosition","height","bottom","parseInt","DataService","filteredData","subject","Subject","setData","data","next","getData","asObservable","getFilteredData","length","Injectable","ListFilterPipe","ds","filteredList","transform","items","filter","searchBy","_this","item","applyFilter","found","grpTitle","t","toString","toLowerCase","indexOf","prop","Pipe","name","pure","Component","template","ContentChild","TemplateRef","static","TemplateRenderer","viewContainer","view","createEmbeddedView","$implicit","ngOnDestroy","destroy","ViewContainerRef","VIRTUAL_SCROLLER_DEFAULT_OPTIONS_FACTORY","scrollThrottlingTime","scrollDebounceTime","scrollAnimationTime","checkResizeInterval","resizeBypassRefreshThreshold","modifyOverflowStyleOfParentScroll","stripedTable","encapsulation","ViewEncapsulation","None","VirtualScrollerComponent","element","renderer","zone","changeDetectorRef","platformId","options","window","executeRefreshOutsideAngularZone","_enableUnequalChildrenSizes","useMarginInsteadOfTranslate","ssrViewportWidth","ssrViewportHeight","_bufferAmount","_items","compareItems","item1","item2","vsUpdate","vsChange","vsStart","vsEnd","calculatedScrollbarWidth","calculatedScrollbarHeight","padding","previousViewPort","cachedPageSize","previousScrollNumberElements","isAngularUniversalSSR","isPlatformServer","scrollbarWidth","scrollbarHeight","horizontal","resetWrapGroupDimensions","Object","defineProperty","pageInfo","startIndex","endIndex","scrollStartPosition","scrollEndPosition","maxScrollPosition","startIndexWithBuffer","endIndexWithBuffer","value","minMeasuredChildWidth","undefined","minMeasuredChildHeight","enableUnequalChildrenSizes","_scrollThrottlingTime","updateOnScrollFunction","_scrollDebounceTime","_this_1","onScroll","debounce","refresh_internal","throttleTrailing","_checkResizeInterval","addScrollEventHandlers","_horizontal","updateDirection","revertParentOverscroll","scrollElement","getScrollElement","oldParentScrollOverflow","y","x","_parentScroll","removeScrollEventHandlers","changes","indexLengthChanged","cachedItemsLength","firstRun","previousValue","ngDoCheck","viewPortItems","itemsArrayChanged","i","refresh","invalidateAllCachedMeasurements","wrapGroupDimensions","maxChildSizePerWrapGroup","numberOfKnownWrapGroupChildSizes","sumOfKnownWrapGroupChildWidths","sumOfKnownWrapGroupChildHeights","invalidateCachedMeasurementForItem","index","invalidateCachedMeasurementAtIndex","cachedMeasurement","childWidth","childHeight","scrollInto","alignToBeginning","additionalOffset","animationMilliseconds","animationCompletedCallback","scrollToIndex","maxRetries","retryIfNeeded","dimensions","calculateDimensions","desiredStartIndex","Math","min","max","itemCount","scrollToIndex_internal","calculatePadding","wrapGroupsPerPage","_childScrollDim","scrollToPosition","scrollPosition","getElementsOffset","animationRequest","currentTween","stop","setProperty","_scrollType","tweenConfigObj","newTween","tween","Tween","to","easing","Easing","Quadratic","Out","onUpdate","isNaN","onStop","cancelAnimationFrame","start","animate","time","update","runOutsideAngular","requestAnimationFrame","getElementSize","result","getBoundingClientRect","styles","getComputedStyle","marginTop","marginBottom","marginLeft","marginRight","left","right","width","checkScrollElementResized","sizeChanged","boundingRect","previousScrollBoundingRect","widthChange","abs","heightChange","_invisiblePaddingProperty","_offsetType","_pageOffsetType","_marginDir","_translateDir","func","wait","throttled","apply","arguments","timeout","_arguments","setTimeout","clearTimeout","itemsArrayModified","refreshCompletedCallback","maxRunTimes","oldViewPort_1","oldViewPortItems_1","oldRefreshCompletedCallback_1","scrollLengthDelta","scrollLength","oldStartItem_1","oldStartItemIndex","findIndex","itemOrderChanged","viewport","calculateViewport","startChanged","endChanged","scrollLengthChanged","paddingChanged","scrollPositionChanged","setStyle","invisiblePaddingElementRef","contentElementRef","headerElementRef","containerOffset","offset","clientHeight","changeEventArg","handleChanged","slice","markForCheck","run","parentScroll","Window","document","scrollingElement","documentElement","disposeScrollHandler","listen","disposeResizeHandler","checkScrollElementResizedTimer","setInterval","clearInterval","containerElementRef","elementClientRect","scrollClientRect","countItemsPerWrapGroup","round","ssrChildHeight","ssrChildWidth","propertyName","children","childrenLength","firstOffset","getScrollStartPosition","windowScrollValue","oldWrapGroupDimensions","itemsPerWrapGroup","wrapGroupIndex","oldWrapGroupDimension","itemsChanged","arrayStartIndex","offsetHeight","offsetWidth","clientWidth","defaultChildWidth","defaultChildHeight","viewportWidth","viewportHeight","content","itemsPerRow","ceil","itemsPerCol","scrollOffset","maxWidthForWrapGroup","maxHeightForWrapGroup","sumOfVisibleMaxWidths","sumOfVisibleMaxHeights","child","clientRect","oldValue","maxVisibleWidthForWrapGroup","scrollOffsetToRemove","maxVisibleHeightForWrapGroup","averageChildWidth","averageChildHeight","itemsPerPage","pageCount_fractional","numberOfWrapGroups","defaultScrollLengthPerWrapGroup","numUnknownChildSizes","childSize","viewportLength","arrayStartIndexWithBuffer","startingWrapGroupIndex","floor","calculatePageInfo","scrollPercentage","totalScrolledLength","startingArrayIndex_fractional","maxStart","bufferBoundary","arrayEndIndex","endIndexWithinWrapGroup","bufferSize","bufferAmount","newPadding","newScrollLength","exportAs","host","[class.horizontal]","[class.vertical]","[class.selfScroll]","Renderer2","NgZone","ChangeDetectorRef","decorators","Inject","PLATFORM_ID","Optional","ViewChild","read","NgModule","exports","declarations","imports","CommonModule","providers","provide","useFactory","DROPDOWN_CONTROL_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","useExisting","forwardRef","AngularMultiSelect","multi","DROPDOWN_CONTROL_VALIDATION","NG_VALIDATORS","noop","cdr","filterPipe","onSelect","onDeSelect","onSelectAll","onDeSelectAll","onOpen","onClose","onScrollToEnd","onFilterSelectAll","onFilterDeSelectAll","onAddFilterNewItem","onGroupSelect","onGroupDeSelect","virtualdata","searchTerm$","isActive","isSelectAll","isFilterSelectAll","isInfiniteFilterSelectAll","chunkIndex","cachedItems","groupCachedItems","itemHeight","filterLength","infiniteFilterLength","dropdownListYOffset","dropDownWidth","dropDownTop","dropDownBottom","dropDownLeft","id","random","substring","defaultSettings","singleSelection","text","enableCheckAll","selectAllText","unSelectAllText","filterSelectAllText","filterUnSelectAllText","enableSearchFilter","maxHeight","badgeShowLimit","classes","disabled","searchPlaceholderText","showCheckbox","noDataLabel","searchAutofocus","lazyLoading","labelKey","primaryKey","position","autoPosition","enableFilterSelectAll","selectGroup","addNewItemOnFilter","addNewButtonText","escapeToClose","clearAll","tagToBody","randomSize","virtualScroollInit","isDisabledItemPresent","onTouchedCallback","onChangeCallback","pipe","debounceTime","distinctUntilChanged","tap","term","subscribe","val","filterInfiniteList","onEscapeDown","settings","closeDropdown","assign","cloneArray","selectedListHeight","selectedListElem","calculateDropdownDirection","onKeyUp","evt","target","firstChange","groupBy","groupedData","transformData","selectedItems","loading","currentValue","ngAfterViewInit","ngAfterViewChecked","detectChanges","onItemClick","isSelected","limit","limitSelection","removeSelected","addSelected","updateGroupInfo","validate","c","writeValue","msg","e","console","error","registerOnChange","fn","registerOnTouched","trackByFn","clickedItem","forEach","push","splice","toggleDropdown","openDropdown","preventDefault","searchInput","searchTempl","focus","closeDropdownOnClickOut","clearSearch","toggleSelectAll","obj","selected","individualData","stopPropagation","filterGroupedList","arr","list","some","cat","toggleFilterSelectAll","removed_1","added_1","sele","hasOwnProperty","toggleInfiniteFilterSelectAll","onFilterChange","cnt","Array","isArray","JSON","parse","stringify","key","field","groupedObj","reduce","prev","cur","tempArr","keys","map","disabledChildrens","filteredElems","this_1","virtualScroller","resetInfiniteSearch","onScrollEnd","subscription","unsubscribe","addFilterNewItem","elem","cuppaDropdown","dropdownWidth","openTowardsTop","dropdownHeight","selectedListBounds","spaceOnTop","clearSelection","filteritems","len_1","[class]","Item","Badge","Search","FormsModule","VirtualScrollerModule","CIcon"],"mappings":"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","sourcesContent":["export class MyException {\n\tstatus : number;\n\tbody : any;\n\tconstructor(status : number, body : any) {\n\t\tthis.status = status;\n\t\tthis.body = body;\n\t}\n\t\n}","import { Directive, ElementRef, Output, EventEmitter, HostListener, Input, OnInit, OnChanges } from '@angular/core';\n\n@Directive({\n    selector: '[clickOutside]'\n})\nexport class ClickOutsideDirective {\n    constructor(private _elementRef: ElementRef) {\n    }\n\n    @Output()\n    public clickOutside = new EventEmitter<MouseEvent>();\n\n    @HostListener('document:click', ['$event', '$event.target'])\n    @HostListener('document:touchstart', ['$event', '$event.target'])\n    public onClick(event: MouseEvent, targetElement: HTMLElement): void {\n        if (!targetElement) {\n            return;\n        }\n\n        const clickedInside = this._elementRef.nativeElement.contains(targetElement);\n        if (!clickedInside) {\n            this.clickOutside.emit(event);\n        }\n    }\n}\n\n@Directive({\n    selector: '[scroll]'\n})\nexport class ScrollDirective {\n    constructor(private _elementRef: ElementRef) {\n    }\n\n    @Output()\n    public scroll = new EventEmitter<MouseEvent>();\n\n    @HostListener('scroll', ['$event'])\n    public onClick(event: MouseEvent, targetElement: HTMLElement): void {\n        this.scroll.emit(event);\n    }\n}\n@Directive({\n    selector: '[styleProp]'\n})\nexport class styleDirective {\n\n    constructor(private el: ElementRef) {\n\n    }\n\n    @Input('styleProp') styleVal: number;\n\n    ngOnInit() {\n\n        this.el.nativeElement.style.top = this.styleVal;\n    }\n    ngOnChanges(): void {\n        this.el.nativeElement.style.top = this.styleVal;\n    }\n}\n\n\n@Directive({\n    selector: '[setPosition]'\n})\nexport class setPosition implements OnInit, OnChanges {\n\n    @Input('setPosition') height: number;\n\n    constructor(public el: ElementRef) {\n\n    }\n    ngOnInit() {\n        if (this.height) {\n            this.el.nativeElement.style.bottom = parseInt(this.height + 15 + \"\") + 'px';\n        }\n    }\n    ngOnChanges(): void {\n        if (this.height) {\n            this.el.nativeElement.style.bottom = parseInt(this.height + 15 + \"\") + 'px';\n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n\n@Injectable()\nexport class DataService {\n\n  filteredData: any = [];\n  private subject = new Subject<any>();\n\n  setData(data: any) {\n\n    this.filteredData = data;\n    this.subject.next(data);\n  }\n  getData(): Observable<any> {\n    return this.subject.asObservable();\n  }\n  getFilteredData() {\n    if (this.filteredData && this.filteredData.length > 0) {\n      return this.filteredData;\n    }\n    else {\n      return [];\n    }\n  }\n\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { DataService } from './multiselect.service';\n\n\n@Pipe({\n    name: 'listFilter',\n    pure: true\n})\nexport class ListFilterPipe implements PipeTransform {\n\n    public filteredList: any = [];\n    constructor(private ds: DataService) {\n\n    }\n\n    transform(items: any[], filter: any, searchBy: any): any[] {\n        if (!items || !filter || filter == \"\") {\n            return items;\n        }\n        this.filteredList = items.filter((item: any) => this.applyFilter(item, filter, searchBy));\n        return this.filteredList;\n    }\n    applyFilter(item: any, filter: any, searchBy: any): boolean {\n        let found = false;\n        if (searchBy.length > 0) {\n            if (item.grpTitle) {\n                found = true;\n            }\n            else {\n                for (var t = 0; t < searchBy.length; t++) {\n                    if (filter && item[searchBy[t]] && item[searchBy[t]] != \"\") {\n                        if (item[searchBy[t]].toString().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n                            found = true;\n                        }\n                    }\n                }\n            }\n\n        } else {\n            if (item.grpTitle) {\n                found = true;\n            }\n            else {\n                for (var prop in item) {\n                    if (filter && item[prop]) {\n                        if (item[prop].toString().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n                            found = true;\n                        }\n                    }\n                }\n            }\n        }\n\n        return found;\n    }\n}","import { Component, OnInit, OnDestroy, NgModule, TemplateRef, AfterContentInit, ContentChild, EmbeddedViewRef, OnChanges, ViewContainerRef, ViewEncapsulation, Input, Output, EventEmitter, ElementRef, AfterViewInit, Pipe, PipeTransform, Directive } from '@angular/core';\nimport { SafeResourceUrl, DomSanitizer } from '@angular/platform-browser';\nimport { CommonModule }       from '@angular/common';\n\n@Component({\n  selector: 'c-item',\n  template: ``\n})\n\nexport class Item { \n\n    @ContentChild(TemplateRef, {static: true}) template: TemplateRef<any>\n    constructor() {   \n    }\n\n}\n\n@Component({\n  selector: 'c-badge',\n  template: ``\n})\n\nexport class Badge { \n\n    @ContentChild(TemplateRef, {static: true}) template: TemplateRef<any>\n    constructor() {   \n    }\n\n}\n\n@Component({\n  selector: 'c-search',\n  template: ``\n})\n\nexport class Search { \n\n    @ContentChild(TemplateRef, {static: true}) template: TemplateRef<any>\n    constructor() {   \n    }\n\n}\n@Component({\n  selector: 'c-templateRenderer',\n  template: ``\n})\n\nexport class TemplateRenderer implements OnInit, OnDestroy { \n\n    @Input() data: any\n    @Input() item: any\n    view: EmbeddedViewRef<any>;\n\n    constructor(public viewContainer: ViewContainerRef) {   \n    }\n    ngOnInit() {\n        this.view = this.viewContainer.createEmbeddedView(this.data.template, {\n            '\\$implicit': this.data,\n            'item':this.item\n        });\n    }\n\t\n    ngOnDestroy() {\n\t\tthis.view.destroy();\n\t}\n\n}\n\n@Component({\n  selector: 'c-icon',\n  template: `<svg *ngIf=\"name == 'remove'\" width=\"100%\" height=\"100%\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n                        viewBox=\"0 0 47.971 47.971\" style=\"enable-background:new 0 0 47.971 47.971;\" xml:space=\"preserve\">\n                        <g>\n                            <path d=\"M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88\n                                c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242\n                                C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879\n                                s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z\"/>\n                        </g>\n                    </svg>\n            <svg *ngIf=\"name == 'angle-down'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t width=\"100%\" height=\"100%\" viewBox=\"0 0 612 612\" style=\"enable-background:new 0 0 612 612;\" xml:space=\"preserve\">\n<g>\n\t<g id=\"_x31_0_34_\">\n\t\t<g>\n\t\t\t<path d=\"M604.501,134.782c-9.999-10.05-26.222-10.05-36.221,0L306.014,422.558L43.721,134.782\n\t\t\t\tc-9.999-10.05-26.223-10.05-36.222,0s-9.999,26.35,0,36.399l279.103,306.241c5.331,5.357,12.422,7.652,19.386,7.296\n\t\t\t\tc6.988,0.356,14.055-1.939,19.386-7.296l279.128-306.268C614.5,161.106,614.5,144.832,604.501,134.782z\"/>\n\t\t</g>\n\t</g>\n</g>\n</svg>\n<svg *ngIf=\"name == 'angle-up'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t width=\"100%\" height=\"100%\" viewBox=\"0 0 612 612\" style=\"enable-background:new 0 0 612 612;\" xml:space=\"preserve\">\n<g>\n\t<g id=\"_x39__30_\">\n\t\t<g>\n\t\t\t<path d=\"M604.501,440.509L325.398,134.956c-5.331-5.357-12.423-7.627-19.386-7.27c-6.989-0.357-14.056,1.913-19.387,7.27\n\t\t\t\tL7.499,440.509c-9.999,10.024-9.999,26.298,0,36.323s26.223,10.024,36.222,0l262.293-287.164L568.28,476.832\n\t\t\t\tc9.999,10.024,26.222,10.024,36.221,0C614.5,466.809,614.5,450.534,604.501,440.509z\"/>\n\t\t</g>\n\t</g>\n</g>\n\n</svg>\n<svg *ngIf=\"name == 'search'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t width=\"100%\" height=\"100%\" viewBox=\"0 0 615.52 615.52\" style=\"enable-background:new 0 0 615.52 615.52;\"\n\t xml:space=\"preserve\">\n<g>\n\t<g>\n\t\t<g id=\"Search__x28_and_thou_shall_find_x29_\">\n\t\t\t<g>\n\t\t\t\t<path d=\"M602.531,549.736l-184.31-185.368c26.679-37.72,42.528-83.729,42.528-133.548C460.75,103.35,357.997,0,231.258,0\n\t\t\t\t\tC104.518,0,1.765,103.35,1.765,230.82c0,127.47,102.753,230.82,229.493,230.82c49.53,0,95.271-15.944,132.78-42.777\n\t\t\t\t\tl184.31,185.366c7.482,7.521,17.292,11.291,27.102,11.291c9.812,0,19.62-3.77,27.083-11.291\n\t\t\t\t\tC617.496,589.188,617.496,564.777,602.531,549.736z M355.9,319.763l-15.042,21.273L319.7,356.174\n\t\t\t\t\tc-26.083,18.658-56.667,28.526-88.442,28.526c-84.365,0-152.995-69.035-152.995-153.88c0-84.846,68.63-153.88,152.995-153.88\n\t\t\t\t\ts152.996,69.034,152.996,153.88C384.271,262.769,374.462,293.526,355.9,319.763z\"/>\n\t\t\t</g>\n\t\t</g>\n\t</g>\n</g>\n\n</svg>\n<svg *ngIf=\"name == 'clear'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 51.976 51.976\" style=\"enable-background:new 0 0 51.976 51.976;\" xml:space=\"preserve\">\n<g>\n\t<path d=\"M44.373,7.603c-10.137-10.137-26.632-10.138-36.77,0c-10.138,10.138-10.137,26.632,0,36.77s26.632,10.138,36.77,0\n\t\tC54.51,34.235,54.51,17.74,44.373,7.603z M36.241,36.241c-0.781,0.781-2.047,0.781-2.828,0l-7.425-7.425l-7.778,7.778\n\t\tc-0.781,0.781-2.047,0.781-2.828,0c-0.781-0.781-0.781-2.047,0-2.828l7.778-7.778l-7.425-7.425c-0.781-0.781-0.781-2.048,0-2.828\n\t\tc0.781-0.781,2.047-0.781,2.828,0l7.425,7.425l7.071-7.071c0.781-0.781,2.047-0.781,2.828,0c0.781,0.781,0.781,2.047,0,2.828\n\t\tl-7.071,7.071l7.425,7.425C37.022,34.194,37.022,35.46,36.241,36.241z\"/>\n</g>\n</svg>`,\n  encapsulation: ViewEncapsulation.None,\n\n})\n\nexport class CIcon { \n\n    @Input() name:any;\n\n}","import {\n\tComponent,\n\tContentChild,\n\tElementRef,\n\tEventEmitter,\n\tInject,\n\tOptional,\n\tInput,\n\tNgModule,\n\tNgZone,\n\tOnChanges,\n\tOnDestroy,\n\tOnInit,\n\tOutput,\n\tRenderer2,\n\tViewChild,\n\tChangeDetectorRef,\n\tInjectionToken\n} from '@angular/core';\n\nimport { PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { CommonModule } from '@angular/common';\n\nimport * as tween from '@tweenjs/tween.js'\nimport { VirtualScrollerDefaultOptions } from './defaultoptions';\nimport { IPageInfo } from './ipageinfo';\nimport { IViewport } from './iviewport';\n\nimport { WrapGroupDimensions } from './wrapgroupdimensions';\nimport { WrapGroupDimension } from './wrapgroupdimension';\n\nimport { IDimensions } from './idimension';\n\n \n\n\n\nexport function VIRTUAL_SCROLLER_DEFAULT_OPTIONS_FACTORY(): VirtualScrollerDefaultOptions {\n\treturn {\n\t\tscrollThrottlingTime: 0,\n\t\tscrollDebounceTime: 0,\n\t\tscrollAnimationTime: 750,\n\t\tcheckResizeInterval: 1000,\n\t\tresizeBypassRefreshThreshold: 5,\n\t\tmodifyOverflowStyleOfParentScroll: true,\n\t\tstripedTable: false\n\t};\n}\n\n\n\n\n\n\n\n\n\n\n\n@Component({\n\tselector: 'virtual-scroller,[virtualScroller]',\n\texportAs: 'virtualScroller',\n\ttemplate: `\n    <div class=\"total-padding\" #invisiblePadding></div>\n    <div class=\"scrollable-content\" #content>\n      <ng-content></ng-content>\n    </div>\n  `,\n\thost: {\n\t\t'[class.horizontal]': \"horizontal\",\n\t\t'[class.vertical]': \"!horizontal\",\n\t\t'[class.selfScroll]': \"!parentScroll\"\n\t},\n\tstyles: [`\n    :host {\n      position: relative;\n\t  display: block;\n      -webkit-overflow-scrolling: touch;\n    }\n\t\n\t:host.horizontal.selfScroll {\n      overflow-y: visible;\n      overflow-x: auto;\n\t}\n\t:host.vertical.selfScroll {\n      overflow-y: auto;\n      overflow-x: visible;\n\t}\n\t\n    .scrollable-content {\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      max-width: 100vw;\n      max-height: 100vh;\n      position: absolute;\n    }\n\n\t.scrollable-content ::ng-deep > * {\n\t\tbox-sizing: border-box;\n\t}\n\t\n\t:host.horizontal {\n\t\twhite-space: nowrap;\n\t}\n\t\n\t:host.horizontal .scrollable-content {\n\t\tdisplay: flex;\n\t}\n\t\n\t:host.horizontal .scrollable-content ::ng-deep > * {\n\t\tflex-shrink: 0;\n\t\tflex-grow: 0;\n\t\twhite-space: initial;\n\t}\n\t\n    .total-padding {\n      width: 1px;\n      opacity: 0;\n    }\n    \n    :host.horizontal .total-padding {\n      height: 100%;\n    }\n  `]\n})\nexport class VirtualScrollerComponent implements OnInit, OnChanges, OnDestroy {\n\tpublic viewPortItems: any[];\n\tpublic window = window;\n\n\tpublic get viewPortInfo(): IPageInfo {\n\t\tlet pageInfo: IViewport = this.previousViewPort || <any>{};\n\t\treturn {\n\t\t\tstartIndex: pageInfo.startIndex || 0,\n\t\t\tendIndex: pageInfo.endIndex || 0,\n\t\t\tscrollStartPosition: pageInfo.scrollStartPosition || 0,\n\t\t\tscrollEndPosition: pageInfo.scrollEndPosition || 0,\n\t\t\tmaxScrollPosition: pageInfo.maxScrollPosition || 0,\n\t\t\tstartIndexWithBuffer: pageInfo.startIndexWithBuffer || 0,\n\t\t\tendIndexWithBuffer: pageInfo.endIndexWithBuffer || 0\n\t\t};\n\t}\n\n\t@Input()\n\tpublic executeRefreshOutsideAngularZone: boolean = false;\n\n\tprotected _enableUnequalChildrenSizes: boolean = false;\n\t@Input()\n\tpublic get enableUnequalChildrenSizes(): boolean {\n\t\treturn this._enableUnequalChildrenSizes;\n\t}\n\tpublic set enableUnequalChildrenSizes(value: boolean) {\n\t\tif (this._enableUnequalChildrenSizes === value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._enableUnequalChildrenSizes = value;\n\t\tthis.minMeasuredChildWidth = undefined;\n\t\tthis.minMeasuredChildHeight = undefined;\n\t}\n\n\t@Input()\n\tpublic useMarginInsteadOfTranslate: boolean = false;\n\n\t@Input()\n\tpublic modifyOverflowStyleOfParentScroll: boolean;\n\n\t@Input()\n\tpublic stripedTable: boolean;\n\n\t@Input()\n\tpublic scrollbarWidth: number;\n\n\t@Input()\n\tpublic scrollbarHeight: number;\n\n\t@Input()\n\tpublic childWidth: number;\n\n\t@Input()\n\tpublic childHeight: number;\n\n\t@Input()\n\tpublic ssrChildWidth: number;\n\n\t@Input()\n\tpublic ssrChildHeight: number;\n\n\t@Input()\n\tpublic ssrViewportWidth: number = 1920;\n\n\t@Input()\n\tpublic ssrViewportHeight: number = 1080;\n\n\tprotected _bufferAmount: number = 0;\n\t@Input()\n\tpublic get bufferAmount(): number {\n\t\tif (typeof (this._bufferAmount) === 'number' && this._bufferAmount >= 0) {\n\t\t\treturn this._bufferAmount;\n\t\t} else {\n\t\t\treturn this.enableUnequalChildrenSizes ? 5 : 0;\t\n\t\t}\n\t}\n\tpublic set bufferAmount(value: number) {\n\t\tthis._bufferAmount = value;\n\t}\n\n\t@Input()\n\tpublic scrollAnimationTime: number;\n\n\t@Input()\n\tpublic resizeBypassRefreshThreshold: number;\n\n\tprotected _scrollThrottlingTime: number;\n\t@Input()\n\tpublic get scrollThrottlingTime(): number {\n\t\treturn this._scrollThrottlingTime;\n\t}\n\tpublic set scrollThrottlingTime(value: number) {\n\t\tthis._scrollThrottlingTime = value;\n\t\tthis.updateOnScrollFunction();\n\t}\n\n\tprotected _scrollDebounceTime: number;\n\t@Input()\n\tpublic get scrollDebounceTime(): number {\n\t\treturn this._scrollDebounceTime;\n\t}\n\tpublic set scrollDebounceTime(value: number) {\n\t\tthis._scrollDebounceTime = value;\n\t\tthis.updateOnScrollFunction();\n\t}\n\n\tprotected onScroll: () => void;\n\tprotected updateOnScrollFunction(): void {\n\t\tif (this.scrollDebounceTime) {\n\t\t\tthis.onScroll = <any>this.debounce(() => {\n\t\t\t\tthis.refresh_internal(false);\n\t\t\t}, this.scrollDebounceTime);\n\t\t}\n\t\telse if (this.scrollThrottlingTime) {\n\t\t\tthis.onScroll = <any>this.throttleTrailing(() => {\n\t\t\t\tthis.refresh_internal(false);\n\t\t\t}, this.scrollThrottlingTime);\n\t\t}\n\t\telse {\n\t\t\tthis.onScroll = () => {\n\t\t\t\tthis.refresh_internal(false);\n\t\t\t};\n\t\t}\n\t}\n\n\tprotected checkScrollElementResizedTimer: number;\n\tprotected _checkResizeInterval: number;\n\t@Input()\n\tpublic get checkResizeInterval(): number {\n\t\treturn this._checkResizeInterval;\n\t}\n\tpublic set checkResizeInterval(value: number) {\n\t\tif (this._checkResizeInterval === value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._checkResizeInterval = value;\n\t\tthis.addScrollEventHandlers();\n\t}\n\n\tprotected _items: any[] = [];\n\t@Input()\n\tpublic get items(): any[] {\n\t\treturn this._items;\n\t}\n\tpublic set items(value: any[]) {\n\t\tif (value === this._items) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._items = value || [];\n\t\tthis.refresh_internal(true);\n\t}\n\n\t@Input()\n\tpublic compareItems: (item1: any, item2: any) => boolean = (item1: any, item2: any) => item1 === item2;\n\n\tprotected _horizontal: boolean;\n\t@Input()\n\tpublic get horizontal(): boolean {\n\t\treturn this._horizontal;\n\t}\n\tpublic set horizontal(value: boolean) {\n\t\tthis._horizontal = value;\n\t\tthis.updateDirection();\n\t}\n\n\tprotected revertParentOverscroll(): void {\n\t\tconst scrollElement = this.getScrollElement();\n\t\tif (scrollElement && this.oldParentScrollOverflow) {\n\t\t\tscrollElement.style['overflow-y'] = this.oldParentScrollOverflow.y;\n\t\t\tscrollElement.style['overflow-x'] = this.oldParentScrollOverflow.x;\n\t\t}\n\n\t\tthis.oldParentScrollOverflow = undefined;\n\t}\n\n\tprotected oldParentScrollOverflow: { x: string, y: string };\n\tprotected _parentScroll: Element | Window;\n\t@Input()\n\tpublic get parentScroll(): Element | Window {\n\t\treturn this._parentScroll;\n\t}\n\tpublic set parentScroll(value: Element | Window) {\n\t\tif (this._parentScroll === value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.revertParentOverscroll();\n\t\tthis._parentScroll = value;\n\t\tthis.addScrollEventHandlers();\n\n\t\tconst scrollElement = this.getScrollElement();\n\t\tif (this.modifyOverflowStyleOfParentScroll && scrollElement !== this.element.nativeElement) {\n\t\t\tthis.oldParentScrollOverflow = { x: scrollElement.style['overflow-x'], y: scrollElement.style['overflow-y'] };\n\t\t\tscrollElement.style['overflow-y'] = this.horizontal ? 'visible' : 'auto';\n\t\t\tscrollElement.style['overflow-x'] = this.horizontal ? 'auto' : 'visible';\n\t\t}\n\t}\n\n\t@Output()\n\tpublic vsUpdate: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n\t@Output()\n\tpublic vsChange: EventEmitter<IPageInfo> = new EventEmitter<IPageInfo>();\n\n\t@Output()\n\tpublic vsStart: EventEmitter<IPageInfo> = new EventEmitter<IPageInfo>();\n\n\t@Output()\n\tpublic vsEnd: EventEmitter<IPageInfo> = new EventEmitter<IPageInfo>();\n\n\t@ViewChild('content', { read: ElementRef, static: false })\n\tprotected contentElementRef: ElementRef;\n\n\t@ViewChild('invisiblePadding', { read: ElementRef, static: false })\n\tprotected invisiblePaddingElementRef: ElementRef;\n\n\t@ContentChild('header', { read: ElementRef, static: false })\n\tprotected headerElementRef: ElementRef;\n\n\t@ContentChild('container', { read: ElementRef, static: false })\n\tprotected containerElementRef: ElementRef;\n\n\tpublic ngOnInit(): void {\n\t\tthis.addScrollEventHandlers();\n\t}\n\n\tpublic ngOnDestroy(): void {\n\t\tthis.removeScrollEventHandlers();\n\t\tthis.revertParentOverscroll();\n\t}\n\n\tpublic ngOnChanges(changes: any): void {\n\t\tlet indexLengthChanged = this.cachedItemsLength !== this.items.length;\n\t\tthis.cachedItemsLength = this.items.length;\n\n\t\tconst firstRun: boolean = !changes.items || !changes.items.previousValue || changes.items.previousValue.length === 0;\n\t\tthis.refresh_internal(indexLengthChanged || firstRun);\n\t}\n\n\t\n\tpublic ngDoCheck(): void {\n\t\tif (this.cachedItemsLength !== this.items.length) {\n\t\t\tthis.cachedItemsLength = this.items.length;\n\t\t\tthis.refresh_internal(true);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (this.previousViewPort && this.viewPortItems && this.viewPortItems.length > 0) {\n\t\t\tlet itemsArrayChanged = false;\n\t\t\tfor (let i = 0; i < this.viewPortItems.length; ++i) {\n\t\t\t\tif (!this.compareItems(this.items[this.previousViewPort.startIndexWithBuffer + i], this.viewPortItems[i])) {\n\t\t\t\t\titemsArrayChanged = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (itemsArrayChanged) {\n\t\t\t\tthis.refresh_internal(true);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic refresh(): void {\n\t\tthis.refresh_internal(true);\n\t}\n\n\tpublic invalidateAllCachedMeasurements(): void {\n\t\tthis.wrapGroupDimensions = {\n\t\t\tmaxChildSizePerWrapGroup: [],\n\t\t\tnumberOfKnownWrapGroupChildSizes: 0,\n\t\t\tsumOfKnownWrapGroupChildWidths: 0,\n\t\t\tsumOfKnownWrapGroupChildHeights: 0\n\t\t};\n\n\t\tthis.minMeasuredChildWidth = undefined;\n\t\tthis.minMeasuredChildHeight = undefined;\n\n\t\tthis.refresh_internal(false);\n\t}\n\n\tpublic invalidateCachedMeasurementForItem(item: any): void {\n\t\tif (this.enableUnequalChildrenSizes) {\n\t\t\tlet index = this.items && this.items.indexOf(item);\n\t\t\tif (index >= 0) {\n\t\t\t\tthis.invalidateCachedMeasurementAtIndex(index);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.minMeasuredChildWidth = undefined;\n\t\t\tthis.minMeasuredChildHeight = undefined;\n\t\t}\n\n\t\tthis.refresh_internal(false);\n\t}\n\n\tpublic invalidateCachedMeasurementAtIndex(index: number): void {\n\t\tif (this.enableUnequalChildrenSizes) {\n\t\t\tlet cachedMeasurement = this.wrapGroupDimensions.maxChildSizePerWrapGroup[index];\n\t\t\tif (cachedMeasurement) {\n\t\t\t\tthis.wrapGroupDimensions.maxChildSizePerWrapGroup[index] = undefined;\n\t\t\t\t--this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths -= cachedMeasurement.childWidth || 0;\n\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights -= cachedMeasurement.childHeight || 0;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.minMeasuredChildWidth = undefined;\n\t\t\tthis.minMeasuredChildHeight = undefined;\n\t\t}\n\n\t\tthis.refresh_internal(false);\n\t}\n\n\tpublic scrollInto(item: any, alignToBeginning: boolean = true, additionalOffset: number = 0, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined): void {\n\t\tlet index: number = this.items.indexOf(item);\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.scrollToIndex(index, alignToBeginning, additionalOffset, animationMilliseconds, animationCompletedCallback);\n\t}\n\n\tpublic scrollToIndex(index: number, alignToBeginning: boolean = true, additionalOffset: number = 0, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined): void {\n\t\tlet maxRetries: number = 5;\n\n\t\tlet retryIfNeeded = () => {\n\t\t\t--maxRetries;\n\t\t\tif (maxRetries <= 0) {\n\t\t\t\tif (animationCompletedCallback) {\n\t\t\t\t\tanimationCompletedCallback();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet dimensions = this.calculateDimensions();\n\t\t\tlet desiredStartIndex = Math.min(Math.max(index, 0), dimensions.itemCount - 1);\n\t\t\tif (this.previousViewPort.startIndex === desiredStartIndex) {\n\t\t\t\tif (animationCompletedCallback) {\n\t\t\t\t\tanimationCompletedCallback();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.scrollToIndex_internal(index, alignToBeginning, additionalOffset, 0, retryIfNeeded);\n\t\t};\n\n\t\tthis.scrollToIndex_internal(index, alignToBeginning, additionalOffset, animationMilliseconds, retryIfNeeded);\n\t}\n\n\tprotected scrollToIndex_internal(index: number, alignToBeginning: boolean = true, additionalOffset: number = 0, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined): void {\n\t\tanimationMilliseconds = animationMilliseconds === undefined ? this.scrollAnimationTime : animationMilliseconds;\n\n\t\tlet dimensions = this.calculateDimensions();\n\t\tlet scroll = this.calculatePadding(index, dimensions) + additionalOffset;\n\t\tif (!alignToBeginning) {\n\t\t\tscroll -= dimensions.wrapGroupsPerPage * dimensions[this._childScrollDim];\n\t\t}\n\n\t\tthis.scrollToPosition(scroll, animationMilliseconds, animationCompletedCallback);\n\t}\n\n\tpublic scrollToPosition(scrollPosition: number, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined): void {\n\t\tscrollPosition += this.getElementsOffset();\n\n\t\tanimationMilliseconds = animationMilliseconds === undefined ? this.scrollAnimationTime : animationMilliseconds;\n\n\t\tlet scrollElement = this.getScrollElement();\n\n\t\tlet animationRequest: number;\n\n\t\tif (this.currentTween) {\n\t\t\tthis.currentTween.stop();\n\t\t\tthis.currentTween = undefined;\n\t\t}\n\n\t\tif (!animationMilliseconds) {\n\t\t\tthis.renderer.setProperty(scrollElement, this._scrollType, scrollPosition);\n\t\t\tthis.refresh_internal(false, animationCompletedCallback);\n\t\t\treturn;\n\t\t}\n\n\t\tconst tweenConfigObj = { scrollPosition: scrollElement[this._scrollType] };\n\n\t\tlet newTween = new tween.Tween(tweenConfigObj)\n\t\t\t.to({ scrollPosition }, animationMilliseconds)\n\t\t\t.easing(tween.Easing.Quadratic.Out)\n\t\t\t.onUpdate((data) => {\n\t\t\t\tif (isNaN(data.scrollPosition)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.renderer.setProperty(scrollElement, this._scrollType, data.scrollPosition);\n\t\t\t\tthis.refresh_internal(false);\n\t\t\t})\n\t\t\t.onStop(() => {\n\t\t\t\tcancelAnimationFrame(animationRequest);\n\t\t\t})\n\t\t\t.start();\n\n\t\tconst animate = (time?: number) => {\n\t\t\tif (!newTween[\"isPlaying\"]()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnewTween.update(time);\n\t\t\tif (tweenConfigObj.scrollPosition === scrollPosition) {\n\t\t\t\tthis.refresh_internal(false, animationCompletedCallback);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.zone.runOutsideAngular(() => {\n\t\t\t\tanimationRequest = requestAnimationFrame(animate);\n\t\t\t});\n\t\t};\n\n\t\tanimate();\n\t\tthis.currentTween = newTween;\n\t}\n\n\tprotected isAngularUniversalSSR: boolean;\n\n\tconstructor(protected readonly element: ElementRef,\n\t\tprotected readonly renderer: Renderer2,\n\t\tprotected readonly zone: NgZone,\n\t\tprotected changeDetectorRef: ChangeDetectorRef,\n\t\t@Inject(PLATFORM_ID) platformId: Object,\n\t\t@Optional() @Inject('virtual-scroller-default-options')\n\t\toptions: VirtualScrollerDefaultOptions) {\n\t\t\t\n\t\tthis.isAngularUniversalSSR = isPlatformServer(platformId);\n\n\t\tthis.scrollThrottlingTime = options.scrollThrottlingTime;\n\t\tthis.scrollDebounceTime = options.scrollDebounceTime;\n\t\tthis.scrollAnimationTime = options.scrollAnimationTime;\n\t\tthis.scrollbarWidth = options.scrollbarWidth;\n\t\tthis.scrollbarHeight = options.scrollbarHeight;\n\t\tthis.checkResizeInterval = options.checkResizeInterval;\n\t\tthis.resizeBypassRefreshThreshold = options.resizeBypassRefreshThreshold;\n\t\tthis.modifyOverflowStyleOfParentScroll = options.modifyOverflowStyleOfParentScroll;\n\t\tthis.stripedTable = options.stripedTable;\n\n\t\tthis.horizontal = false;\n\t\tthis.resetWrapGroupDimensions();\n\t}\n\t\n\tprotected getElementSize(element: HTMLElement) : ClientRect {\n\t\tlet result = element.getBoundingClientRect();\n\t\tlet styles = getComputedStyle(element);\n\t\tlet marginTop = parseInt(styles['margin-top'], 10) || 0;\n\t\tlet marginBottom = parseInt(styles['margin-bottom'], 10) || 0;\n\t\tlet marginLeft = parseInt(styles['margin-left'], 10) || 0;\n\t\tlet marginRight = parseInt(styles['margin-right'], 10) || 0;\n\t\t\n\t\treturn {\n\t\t\ttop: result.top + marginTop,\n\t\t\tbottom: result.bottom + marginBottom,\n\t\t\tleft: result.left + marginLeft,\n\t\t\tright: result.right + marginRight,\n\t\t\twidth: result.width + marginLeft + marginRight,\n\t\t\theight: result.height + marginTop + marginBottom\n\t\t};\n\t}\n\n\tprotected previousScrollBoundingRect: ClientRect;\n\tprotected checkScrollElementResized(): void {\n\t\tlet boundingRect = this.getElementSize(this.getScrollElement());\n\n\t\tlet sizeChanged: boolean;\n\t\tif (!this.previousScrollBoundingRect) {\n\t\t\tsizeChanged = true;\n\t\t} else {\n\t\t\tlet widthChange = Math.abs(boundingRect.width - this.previousScrollBoundingRect.width);\n\t\t\tlet heightChange = Math.abs(boundingRect.height - this.previousScrollBoundingRect.height);\n\t\t\tsizeChanged = widthChange > this.resizeBypassRefreshThreshold || heightChange > this.resizeBypassRefreshThreshold;\n\t\t}\n\n\t\tif (sizeChanged) {\n\t\t\tthis.previousScrollBoundingRect = boundingRect;\n\t\t\tif (boundingRect.width > 0 && boundingRect.height > 0) {\n\t\t\t\tthis.refresh_internal(false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _invisiblePaddingProperty;\n\tprotected _offsetType;\n\tprotected _scrollType;\n\tprotected _pageOffsetType;\n\tprotected _childScrollDim;\n\tprotected _translateDir;\n\tprotected _marginDir;\n\tprotected updateDirection(): void {\n\t\tif (this.horizontal) {\n\t\t\tthis._invisiblePaddingProperty = 'width';\n\t\t\tthis._offsetType = 'offsetLeft';\n\t\t\tthis._pageOffsetType = 'pageXOffset';\n\t\t\tthis._childScrollDim = 'childWidth';\n\t\t\tthis._marginDir = 'margin-left';\n\t\t\tthis._translateDir = 'translateX';\n\t\t\tthis._scrollType = 'scrollLeft';\n\t\t}\n\t\telse {\n\t\t\tthis._invisiblePaddingProperty = 'height';\n\t\t\tthis._offsetType = 'offsetTop';\n\t\t\tthis._pageOffsetType = 'pageYOffset';\n\t\t\tthis._childScrollDim = 'childHeight';\n\t\t\tthis._marginDir = 'margin-top';\n\t\t\tthis._translateDir = 'translateY';\n\t\t\tthis._scrollType = 'scrollTop';\n\t\t}\n\t}\n\n\tprotected debounce(func: Function, wait: number): Function {\n\t\tconst throttled = this.throttleTrailing(func, wait);\n\t\tconst result = function () {\n\t\t\tthrottled['cancel']();\n\t\t\tthrottled.apply(this, arguments);\n\t\t};\n\t\tresult['cancel'] = function () {\n\t\t\tthrottled['cancel']();\n\t\t};\n\n\t\treturn result;\n\t}\n\n\tprotected throttleTrailing(func: Function, wait: number): Function {\n\t\tlet timeout = undefined;\n\t\tlet _arguments = arguments;\n\t\tconst result = function () {\n\t\t\tconst _this = this;\n\t\t\t_arguments = arguments\n\n\t\t\tif (timeout) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (wait <= 0) {\n\t\t\t\tfunc.apply(_this, _arguments);\n\t\t\t} else {\n\t\t\t\ttimeout = setTimeout(function () {\n\t\t\t\t\ttimeout = undefined;\n\t\t\t\t\tfunc.apply(_this, _arguments);\n\t\t\t\t}, wait);\n\t\t\t}\n\t\t};\n\t\tresult['cancel'] = function () {\n\t\t\tif (timeout) {\n\t\t\t\tclearTimeout(timeout);\n\t\t\t\ttimeout = undefined;\n\t\t\t}\n\t\t};\n\n\t\treturn result;\n\t}\n\n\tprotected calculatedScrollbarWidth: number = 0;\n\tprotected calculatedScrollbarHeight: number = 0;\n\n\tprotected padding: number = 0;\n\tprotected previousViewPort: IViewport = <any>{};\n\tprotected currentTween: any;\n\tprotected cachedItemsLength: number;\n\n\tprotected disposeScrollHandler: () => void | undefined;\n\tprotected disposeResizeHandler: () => void | undefined;\n\n\tprotected refresh_internal(itemsArrayModified: boolean, refreshCompletedCallback: () => void = undefined, maxRunTimes: number = 2): void {\n\t\t//note: maxRunTimes is to force it to keep recalculating if the previous iteration caused a re-render (different sliced items in viewport or scrollPosition changed).\n\t\t//The default of 2x max will probably be accurate enough without causing too large a performance bottleneck\n\t\t//The code would typically quit out on the 2nd iteration anyways. The main time it'd think more than 2 runs would be necessary would be for vastly different sized child items or if this is the 1st time the items array was initialized.\n\t\t//Without maxRunTimes, If the user is actively scrolling this code would become an infinite loop until they stopped scrolling. This would be okay, except each scroll event would start an additional infinte loop. We want to short-circuit it to prevent this.\n\n\t\tif (itemsArrayModified && this.previousViewPort && this.previousViewPort.scrollStartPosition > 0) {\n\t\t//if items were prepended, scroll forward to keep same items visible\n\t\t\tlet oldViewPort = this.previousViewPort;\n\t\t\tlet oldViewPortItems = this.viewPortItems;\n\t\t\t\n\t\t\tlet oldRefreshCompletedCallback = refreshCompletedCallback;\n\t\t\trefreshCompletedCallback = () => {\n\t\t\t\tlet scrollLengthDelta = this.previousViewPort.scrollLength - oldViewPort.scrollLength;\n\t\t\t\tif (scrollLengthDelta > 0 && this.viewPortItems) {\n\t\t\t\t\tlet oldStartItem = oldViewPortItems[0];\n\t\t\t\t\tlet oldStartItemIndex = this.items.findIndex(x => this.compareItems(oldStartItem, x));\n\t\t\t\t\tif (oldStartItemIndex > this.previousViewPort.startIndexWithBuffer) {\n\t\t\t\t\t\tlet itemOrderChanged = false;\n\t\t\t\t\t\tfor (let i = 1; i < this.viewPortItems.length; ++i) {\n\t\t\t\t\t\t\tif (!this.compareItems(this.items[oldStartItemIndex + i], oldViewPortItems[i])) {\n\t\t\t\t\t\t\t\titemOrderChanged = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!itemOrderChanged) {\n\t\t\t\t\t\t\tthis.scrollToPosition(this.previousViewPort.scrollStartPosition + scrollLengthDelta , 0, oldRefreshCompletedCallback);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (oldRefreshCompletedCallback) {\n\t\t\t\t\toldRefreshCompletedCallback();\n\t\t\t\t}\n\t\t\t};\n\t\t}\t\t\t\n\n\t\tthis.zone.runOutsideAngular(() => {\n\t\t\trequestAnimationFrame(() => {\n\n\t\t\t\tif (itemsArrayModified) {\n\t\t\t\t\tthis.resetWrapGroupDimensions();\n\t\t\t\t}\n\t\t\t\tlet viewport = this.calculateViewport();\n\n\t\t\t\tlet startChanged = itemsArrayModified || viewport.startIndex !== this.previousViewPort.startIndex;\n\t\t\t\tlet endChanged = itemsArrayModified || viewport.endIndex !== this.previousViewPort.endIndex;\n\t\t\t\tlet scrollLengthChanged = viewport.scrollLength !== this.previousViewPort.scrollLength;\n\t\t\t\tlet paddingChanged = viewport.padding !== this.previousViewPort.padding;\n\t\t\t\tlet scrollPositionChanged = viewport.scrollStartPosition !== this.previousViewPort.scrollStartPosition || viewport.scrollEndPosition !== this.previousViewPort.scrollEndPosition || viewport.maxScrollPosition !== this.previousViewPort.maxScrollPosition;\n\n\t\t\t\tthis.previousViewPort = viewport;\n\n\t\t\t\tif (scrollLengthChanged) {\n\t\t\t\t\tthis.renderer.setStyle(this.invisiblePaddingElementRef.nativeElement, this._invisiblePaddingProperty, `${viewport.scrollLength}px`);\n\t\t\t\t}\n\n\t\t\t\tif (paddingChanged) {\n\t\t\t\t\tif (this.useMarginInsteadOfTranslate) {\n\t\t\t\t\t\tthis.renderer.setStyle(this.contentElementRef.nativeElement, this._marginDir, `${viewport.padding}px`);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.renderer.setStyle(this.contentElementRef.nativeElement, 'transform', `${this._translateDir}(${viewport.padding}px)`);\n\t\t\t\t\t\tthis.renderer.setStyle(this.contentElementRef.nativeElement, 'webkitTransform', `${this._translateDir}(${viewport.padding}px)`);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.headerElementRef) {\n\t\t\t\t\tlet scrollPosition = this.getScrollElement()[this._scrollType];\n\t\t\t\t\tlet containerOffset = this.getElementsOffset();\n\t\t\t\t\tlet offset = Math.max(scrollPosition - viewport.padding - containerOffset + this.headerElementRef.nativeElement.clientHeight, 0);\n\t\t\t\t\tthis.renderer.setStyle(this.headerElementRef.nativeElement, 'transform', `${this._translateDir}(${offset}px)`);\n\t\t\t\t\tthis.renderer.setStyle(this.headerElementRef.nativeElement, 'webkitTransform', `${this._translateDir}(${offset}px)`);\n\t\t\t\t}\n\n\t\t\t\tconst changeEventArg: IPageInfo = (startChanged || endChanged) ? {\n\t\t\t\t\tstartIndex: viewport.startIndex,\n\t\t\t\t\tendIndex: viewport.endIndex,\n\t\t\t\t\tscrollStartPosition: viewport.scrollStartPosition,\n\t\t\t\t\tscrollEndPosition: viewport.scrollEndPosition,\n\t\t\t\t\tstartIndexWithBuffer: viewport.startIndexWithBuffer,\n\t\t\t\t\tendIndexWithBuffer: viewport.endIndexWithBuffer,\n\t\t\t\t\tmaxScrollPosition: viewport.maxScrollPosition\n\t\t\t\t} : undefined;\n\n\n\t\t\t\tif (startChanged || endChanged || scrollPositionChanged) {\n\t\t\t\t\tconst handleChanged = () => {\n\t\t\t\t\t\t// update the scroll list to trigger re-render of components in viewport\n\t\t\t\t\t\tthis.viewPortItems = viewport.startIndexWithBuffer >= 0 && viewport.endIndexWithBuffer >= 0 ? this.items.slice(viewport.startIndexWithBuffer, viewport.endIndexWithBuffer + 1) : [];\n\t\t\t\t\t\tthis.vsUpdate.emit(this.viewPortItems);\n\n\t\t\t\t\t\tif (startChanged) {\n\t\t\t\t\t\t\tthis.vsStart.emit(changeEventArg);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endChanged) {\n\t\t\t\t\t\t\tthis.vsEnd.emit(changeEventArg);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (startChanged || endChanged) {\n\t\t\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t\t\t\tthis.vsChange.emit(changeEventArg);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (maxRunTimes > 0) {\n\t\t\t\t\t\t\tthis.refresh_internal(false, refreshCompletedCallback, maxRunTimes - 1);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (refreshCompletedCallback) {\n\t\t\t\t\t\t\trefreshCompletedCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\n\t\t\t\t\tif (this.executeRefreshOutsideAngularZone) {\n\t\t\t\t\t\thandleChanged();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.zone.run(handleChanged);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (maxRunTimes > 0 && (scrollLengthChanged || paddingChanged)) {\n\t\t\t\t\t\tthis.refresh_internal(false, refreshCompletedCallback, maxRunTimes - 1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (refreshCompletedCallback) {\n\t\t\t\t\t\trefreshCompletedCallback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprotected getScrollElement(): HTMLElement {\n\t\treturn this.parentScroll instanceof Window ? document.scrollingElement || document.documentElement || document.body : this.parentScroll || this.element.nativeElement;\n\t}\n\n\tprotected addScrollEventHandlers(): void {\n\t\tif (this.isAngularUniversalSSR) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet scrollElement = this.getScrollElement();\n\n\t\tthis.removeScrollEventHandlers();\n\n\t\tthis.zone.runOutsideAngular(() => {\n\t\t\tif (this.parentScroll instanceof Window) {\n\t\t\t\tthis.disposeScrollHandler = this.renderer.listen('window', 'scroll', this.onScroll);\n\t\t\t\tthis.disposeResizeHandler = this.renderer.listen('window', 'resize', this.onScroll);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.disposeScrollHandler = this.renderer.listen(scrollElement, 'scroll', this.onScroll);\n\t\t\t\tif (this._checkResizeInterval > 0) {\n\t\t\t\t\tthis.checkScrollElementResizedTimer = <any>setInterval(() => { this.checkScrollElementResized(); }, this._checkResizeInterval);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected removeScrollEventHandlers(): void {\n\t\tif (this.checkScrollElementResizedTimer) {\n\t\t\tclearInterval(this.checkScrollElementResizedTimer);\n\t\t}\n\n\t\tif (this.disposeScrollHandler) {\n\t\t\tthis.disposeScrollHandler();\n\t\t\tthis.disposeScrollHandler = undefined;\n\t\t}\n\n\t\tif (this.disposeResizeHandler) {\n\t\t\tthis.disposeResizeHandler();\n\t\t\tthis.disposeResizeHandler = undefined;\n\t\t}\n\t}\n\n\tprotected getElementsOffset(): number {\n\t\tif (this.isAngularUniversalSSR) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet offset = 0;\n\n\t\tif (this.containerElementRef && this.containerElementRef.nativeElement) {\n\t\t\toffset += this.containerElementRef.nativeElement[this._offsetType];\n\t\t}\n\n\t\tif (this.parentScroll) {\n\t\t\tlet scrollElement = this.getScrollElement();\n\t\t\tlet elementClientRect = this.getElementSize(this.element.nativeElement);\n\t\t\tlet scrollClientRect = this.getElementSize(scrollElement);\n\t\t\tif (this.horizontal) {\n\t\t\t\toffset += elementClientRect.left - scrollClientRect.left;\n\t\t\t}\n\t\t\telse {\n\t\t\t\toffset += elementClientRect.top - scrollClientRect.top;\n\t\t\t}\n\n\t\t\tif (!(this.parentScroll instanceof Window)) {\n\t\t\t\toffset += scrollElement[this._scrollType];\n\t\t\t}\n\t\t}\n\n\t\treturn offset;\n\t}\n\n\tprotected countItemsPerWrapGroup(): number {\n\t\tif (this.isAngularUniversalSSR) {\n\t\t\treturn Math.round(this.horizontal ? this.ssrViewportHeight / this.ssrChildHeight : this.ssrViewportWidth / this.ssrChildWidth);\n\t\t}\n\n\t\tlet propertyName = this.horizontal ? 'offsetLeft' : 'offsetTop';\n\t\tlet children = ((this.containerElementRef && this.containerElementRef.nativeElement) || this.contentElementRef.nativeElement).children;\n\n\t\tlet childrenLength = children ? children.length : 0;\n\t\tif (childrenLength === 0) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tlet firstOffset = children[0][propertyName];\n\t\tlet result = 1;\n\t\twhile (result < childrenLength && firstOffset === children[result][propertyName]) {\n\t\t\t++result;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprotected getScrollStartPosition(): number {\n\t\tlet windowScrollValue = undefined;\n\t\tif (this.parentScroll instanceof Window) {\n\t\t\twindowScrollValue = window[this._pageOffsetType];\n\t\t}\n\n\t\treturn windowScrollValue || this.getScrollElement()[this._scrollType] || 0;\n\t}\n\n\tprotected minMeasuredChildWidth: number;\n\tprotected minMeasuredChildHeight: number;\n\n\tprotected wrapGroupDimensions: WrapGroupDimensions;\n\n\tprotected resetWrapGroupDimensions(): void {\n\t\tconst oldWrapGroupDimensions = this.wrapGroupDimensions;\n\t\tthis.invalidateAllCachedMeasurements();\n\n\t\tif (!this.enableUnequalChildrenSizes || !oldWrapGroupDimensions || oldWrapGroupDimensions.numberOfKnownWrapGroupChildSizes === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsPerWrapGroup: number = this.countItemsPerWrapGroup();\n\t\tfor (let wrapGroupIndex = 0; wrapGroupIndex < oldWrapGroupDimensions.maxChildSizePerWrapGroup.length; ++wrapGroupIndex) {\n\t\t\tconst oldWrapGroupDimension: WrapGroupDimension = oldWrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex];\n\t\t\tif (!oldWrapGroupDimension || !oldWrapGroupDimension.items || !oldWrapGroupDimension.items.length) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (oldWrapGroupDimension.items.length !== itemsPerWrapGroup) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet itemsChanged = false;\n\t\t\tlet arrayStartIndex = itemsPerWrapGroup * wrapGroupIndex;\n\t\t\tfor (let i = 0; i < itemsPerWrapGroup; ++i) {\n\t\t\t\tif (!this.compareItems(oldWrapGroupDimension.items[i], this.items[arrayStartIndex + i])) {\n\t\t\t\t\titemsChanged = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!itemsChanged) {\n\t\t\t\t++this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths += oldWrapGroupDimension.childWidth || 0;\n\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights += oldWrapGroupDimension.childHeight || 0;\n\t\t\t\tthis.wrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex] = oldWrapGroupDimension;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected calculateDimensions(): IDimensions {\n\t\tlet scrollElement = this.getScrollElement();\n\n\t\tconst maxCalculatedScrollBarSize: number = 25; // Note: Formula to auto-calculate doesn't work for ParentScroll, so we default to this if not set by consuming application\n\t\tthis.calculatedScrollbarHeight = Math.max(Math.min(scrollElement.offsetHeight - scrollElement.clientHeight, maxCalculatedScrollBarSize), this.calculatedScrollbarHeight);\n\t\tthis.calculatedScrollbarWidth = Math.max(Math.min(scrollElement.offsetWidth - scrollElement.clientWidth, maxCalculatedScrollBarSize), this.calculatedScrollbarWidth);\n\n\t\tlet viewportWidth = scrollElement.offsetWidth - (this.scrollbarWidth || this.calculatedScrollbarWidth || (this.horizontal ? 0 : maxCalculatedScrollBarSize));\n\t\tlet viewportHeight = scrollElement.offsetHeight - (this.scrollbarHeight || this.calculatedScrollbarHeight || (this.horizontal ? maxCalculatedScrollBarSize : 0));\n\n\t\tlet content = (this.containerElementRef && this.containerElementRef.nativeElement) || this.contentElementRef.nativeElement;\n\n\t\tlet itemsPerWrapGroup = this.countItemsPerWrapGroup();\n\t\tlet wrapGroupsPerPage;\n\n\t\tlet defaultChildWidth;\n\t\tlet defaultChildHeight;\n\n\t\tif (this.isAngularUniversalSSR) {\n\t\t\tviewportWidth = this.ssrViewportWidth;\n\t\t\tviewportHeight = this.ssrViewportHeight;\n\t\t\tdefaultChildWidth = this.ssrChildWidth;\n\t\t\tdefaultChildHeight = this.ssrChildHeight;\n\t\t\tlet itemsPerRow = Math.max(Math.ceil(viewportWidth / defaultChildWidth), 1);\n\t\t\tlet itemsPerCol = Math.max(Math.ceil(viewportHeight / defaultChildHeight), 1);\n\t\t\twrapGroupsPerPage = this.horizontal ? itemsPerRow : itemsPerCol;\n\t\t}\n\t\telse if (!this.enableUnequalChildrenSizes) {\n\t\t\tif (content.children.length > 0) {\n\t\t\t\tif (!this.childWidth || !this.childHeight) {\n\t\t\t\t\tif (!this.minMeasuredChildWidth && viewportWidth > 0) {\n\t\t\t\t\t\tthis.minMeasuredChildWidth = viewportWidth;\n\t\t\t\t\t}\n\t\t\t\t\tif (!this.minMeasuredChildHeight && viewportHeight > 0) {\n\t\t\t\t\t\tthis.minMeasuredChildHeight = viewportHeight;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet child = content.children[0];\n\t\t\t\tlet clientRect = this.getElementSize(child);\n\t\t\t\tthis.minMeasuredChildWidth = Math.min(this.minMeasuredChildWidth, clientRect.width);\n\t\t\t\tthis.minMeasuredChildHeight = Math.min(this.minMeasuredChildHeight, clientRect.height);\n\t\t\t}\n\n\t\t\tdefaultChildWidth = this.childWidth || this.minMeasuredChildWidth || viewportWidth;\n\t\t\tdefaultChildHeight = this.childHeight || this.minMeasuredChildHeight || viewportHeight;\n\t\t\tlet itemsPerRow = Math.max(Math.ceil(viewportWidth / defaultChildWidth), 1);\n\t\t\tlet itemsPerCol = Math.max(Math.ceil(viewportHeight / defaultChildHeight), 1);\n\t\t\twrapGroupsPerPage = this.horizontal ? itemsPerRow : itemsPerCol;\n\t\t} else {\n\t\t\tlet scrollOffset = scrollElement[this._scrollType] - (this.previousViewPort ? this.previousViewPort.padding : 0);\n\n\t\t\tlet arrayStartIndex = this.previousViewPort.startIndexWithBuffer || 0;\n\t\t\tlet wrapGroupIndex = Math.ceil(arrayStartIndex / itemsPerWrapGroup);\n\n\t\t\tlet maxWidthForWrapGroup = 0;\n\t\t\tlet maxHeightForWrapGroup = 0;\n\t\t\tlet sumOfVisibleMaxWidths = 0;\n\t\t\tlet sumOfVisibleMaxHeights = 0;\n\t\t\twrapGroupsPerPage = 0;\n\n\t\t\tfor (let i = 0; i < content.children.length; ++i) {\n\t\t\t\t++arrayStartIndex;\n\t\t\t\tlet child = content.children[i];\n\t\t\t\tlet clientRect = this.getElementSize(child);\n\n\t\t\t\tmaxWidthForWrapGroup = Math.max(maxWidthForWrapGroup, clientRect.width);\n\t\t\t\tmaxHeightForWrapGroup = Math.max(maxHeightForWrapGroup, clientRect.height);\n\n\t\t\t\tif (arrayStartIndex % itemsPerWrapGroup === 0) {\n\t\t\t\t\tlet oldValue = this.wrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex];\n\t\t\t\t\tif (oldValue) {\n\t\t\t\t\t\t--this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n\t\t\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths -= oldValue.childWidth || 0;\n\t\t\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights -= oldValue.childHeight || 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t++this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n\t\t\t\t\tconst items = this.items.slice(arrayStartIndex - itemsPerWrapGroup, arrayStartIndex);\n\t\t\t\t\tthis.wrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex] = {\n\t\t\t\t\t\tchildWidth: maxWidthForWrapGroup,\n\t\t\t\t\t\tchildHeight: maxHeightForWrapGroup,\n\t\t\t\t\t\titems: items\n\t\t\t\t\t};\n\t\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths += maxWidthForWrapGroup;\n\t\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights += maxHeightForWrapGroup;\n\n\t\t\t\t\tif (this.horizontal) {\n\t\t\t\t\t\tlet maxVisibleWidthForWrapGroup = Math.min(maxWidthForWrapGroup, Math.max(viewportWidth - sumOfVisibleMaxWidths, 0));\n\t\t\t\t\t\tif (scrollOffset > 0) {\n\t\t\t\t\t\t\tlet scrollOffsetToRemove = Math.min(scrollOffset, maxVisibleWidthForWrapGroup);\n\t\t\t\t\t\t\tmaxVisibleWidthForWrapGroup -= scrollOffsetToRemove;\n\t\t\t\t\t\t\tscrollOffset -= scrollOffsetToRemove;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsumOfVisibleMaxWidths += maxVisibleWidthForWrapGroup;\n\t\t\t\t\t\tif (maxVisibleWidthForWrapGroup > 0 && viewportWidth >= sumOfVisibleMaxWidths) {\n\t\t\t\t\t\t\t++wrapGroupsPerPage;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet maxVisibleHeightForWrapGroup = Math.min(maxHeightForWrapGroup, Math.max(viewportHeight - sumOfVisibleMaxHeights, 0));\n\t\t\t\t\t\tif (scrollOffset > 0) {\n\t\t\t\t\t\t\tlet scrollOffsetToRemove = Math.min(scrollOffset, maxVisibleHeightForWrapGroup);\n\t\t\t\t\t\t\tmaxVisibleHeightForWrapGroup -= scrollOffsetToRemove;\n\t\t\t\t\t\t\tscrollOffset -= scrollOffsetToRemove;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsumOfVisibleMaxHeights += maxVisibleHeightForWrapGroup;\n\t\t\t\t\t\tif (maxVisibleHeightForWrapGroup > 0 && viewportHeight >= sumOfVisibleMaxHeights) {\n\t\t\t\t\t\t\t++wrapGroupsPerPage;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t++wrapGroupIndex;\n\n\t\t\t\t\tmaxWidthForWrapGroup = 0;\n\t\t\t\t\tmaxHeightForWrapGroup = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet averageChildWidth = this.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths / this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n\t\t\tlet averageChildHeight = this.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights / this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\n\t\t\tdefaultChildWidth = this.childWidth || averageChildWidth || viewportWidth;\n\t\t\tdefaultChildHeight = this.childHeight || averageChildHeight || viewportHeight;\n\n\t\t\tif (this.horizontal) {\n\t\t\t\tif (viewportWidth > sumOfVisibleMaxWidths) {\n\t\t\t\t\twrapGroupsPerPage += Math.ceil((viewportWidth - sumOfVisibleMaxWidths) / defaultChildWidth);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (viewportHeight > sumOfVisibleMaxHeights) {\n\t\t\t\t\twrapGroupsPerPage += Math.ceil((viewportHeight - sumOfVisibleMaxHeights) / defaultChildHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet itemCount = this.items.length;\n\t\tlet itemsPerPage = itemsPerWrapGroup * wrapGroupsPerPage;\n\t\tlet pageCount_fractional = itemCount / itemsPerPage;\n\t\tlet numberOfWrapGroups = Math.ceil(itemCount / itemsPerWrapGroup);\n\n\t\tlet scrollLength = 0;\n\n\t\tlet defaultScrollLengthPerWrapGroup = this.horizontal ? defaultChildWidth : defaultChildHeight;\n\t\tif (this.enableUnequalChildrenSizes) {\n\t\t\tlet numUnknownChildSizes = 0;\n\t\t\tfor (let i = 0; i < numberOfWrapGroups; ++i) {\n\t\t\t\tlet childSize = this.wrapGroupDimensions.maxChildSizePerWrapGroup[i] && this.wrapGroupDimensions.maxChildSizePerWrapGroup[i][this._childScrollDim];\n\t\t\t\tif (childSize) {\n\t\t\t\t\tscrollLength += childSize;\n\t\t\t\t} else {\n\t\t\t\t\t++numUnknownChildSizes;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tscrollLength += Math.round(numUnknownChildSizes * defaultScrollLengthPerWrapGroup);\n\t\t} else {\n\t\t\tscrollLength = numberOfWrapGroups * defaultScrollLengthPerWrapGroup;\n\t\t}\n\n\t\tif (this.headerElementRef) {\n\t\t\tscrollLength += this.headerElementRef.nativeElement.clientHeight;\n\t\t}\n\n\t\tlet viewportLength = this.horizontal ? viewportWidth : viewportHeight;\n\t\tlet maxScrollPosition = Math.max(scrollLength - viewportLength, 0);\n\n\t\treturn {\n\t\t\titemCount: itemCount,\n\t\t\titemsPerWrapGroup: itemsPerWrapGroup,\n\t\t\twrapGroupsPerPage: wrapGroupsPerPage,\n\t\t\titemsPerPage: itemsPerPage,\n\t\t\tpageCount_fractional: pageCount_fractional,\n\t\t\tchildWidth: defaultChildWidth,\n\t\t\tchildHeight: defaultChildHeight,\n\t\t\tscrollLength: scrollLength,\n\t\t\tviewportLength: viewportLength,\n\t\t\tmaxScrollPosition: maxScrollPosition\n\t\t};\n\t}\n\n\tprotected cachedPageSize: number = 0;\n\tprotected previousScrollNumberElements: number = 0;\n\n\tprotected calculatePadding(arrayStartIndexWithBuffer: number, dimensions: IDimensions): number {\n\t\tif (dimensions.itemCount === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet defaultScrollLengthPerWrapGroup = dimensions[this._childScrollDim];\n\t\tlet startingWrapGroupIndex = Math.floor(arrayStartIndexWithBuffer / dimensions.itemsPerWrapGroup) || 0;\n\n\t\tif (!this.enableUnequalChildrenSizes) {\n\t\t\treturn defaultScrollLengthPerWrapGroup * startingWrapGroupIndex;\n\t\t}\n\n\t\tlet numUnknownChildSizes = 0;\n\t\tlet result = 0;\n\t\tfor (let i = 0; i < startingWrapGroupIndex; ++i) {\n\t\t\tlet childSize = this.wrapGroupDimensions.maxChildSizePerWrapGroup[i] && this.wrapGroupDimensions.maxChildSizePerWrapGroup[i][this._childScrollDim];\n\t\t\tif (childSize) {\n\t\t\t\tresult += childSize;\n\t\t\t} else {\n\t\t\t\t++numUnknownChildSizes;\n\t\t\t}\n\t\t}\n\t\tresult += Math.round(numUnknownChildSizes * defaultScrollLengthPerWrapGroup);\n\n\t\treturn result;\n\t}\n\n\tprotected calculatePageInfo(scrollPosition: number, dimensions: IDimensions): IPageInfo {\n\t\tlet scrollPercentage = 0;\n\t\tif (this.enableUnequalChildrenSizes) {\n\t\t\tconst numberOfWrapGroups = Math.ceil(dimensions.itemCount / dimensions.itemsPerWrapGroup);\n\t\t\tlet totalScrolledLength = 0;\n\t\t\tlet defaultScrollLengthPerWrapGroup = dimensions[this._childScrollDim];\n\t\t\tfor (let i = 0; i < numberOfWrapGroups; ++i) {\n\t\t\t\tlet childSize = this.wrapGroupDimensions.maxChildSizePerWrapGroup[i] && this.wrapGroupDimensions.maxChildSizePerWrapGroup[i][this._childScrollDim];\n\t\t\t\tif (childSize) {\n\t\t\t\t\ttotalScrolledLength += childSize;\n\t\t\t\t} else {\n\t\t\t\t\ttotalScrolledLength += defaultScrollLengthPerWrapGroup;\n\t\t\t\t}\n\n\t\t\t\tif (scrollPosition < totalScrolledLength) {\n\t\t\t\t\tscrollPercentage = i / numberOfWrapGroups;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tscrollPercentage = scrollPosition / dimensions.scrollLength;\n\t\t}\n\n\t\tlet startingArrayIndex_fractional = Math.min(Math.max(scrollPercentage * dimensions.pageCount_fractional, 0), dimensions.pageCount_fractional) * dimensions.itemsPerPage;\n\n\t\tlet maxStart = dimensions.itemCount - dimensions.itemsPerPage - 1;\n\t\tlet arrayStartIndex = Math.min(Math.floor(startingArrayIndex_fractional), maxStart);\n\t\tarrayStartIndex -= arrayStartIndex % dimensions.itemsPerWrapGroup; // round down to start of wrapGroup\n\n\t\tif (this.stripedTable) {\n\t\t\tlet bufferBoundary = 2 * dimensions.itemsPerWrapGroup;\n\t\t\tif (arrayStartIndex % bufferBoundary !== 0) {\n\t\t\t\tarrayStartIndex = Math.max(arrayStartIndex - arrayStartIndex % bufferBoundary, 0);\n\t\t\t}\n\t\t}\n\n\t\tlet arrayEndIndex = Math.ceil(startingArrayIndex_fractional) + dimensions.itemsPerPage - 1;\n\t\tlet endIndexWithinWrapGroup = (arrayEndIndex + 1) % dimensions.itemsPerWrapGroup;\n\t\tif (endIndexWithinWrapGroup > 0) {\n\t\t\tarrayEndIndex += dimensions.itemsPerWrapGroup - endIndexWithinWrapGroup; // round up to end of wrapGroup\n\t\t}\n\n\t\tif (isNaN(arrayStartIndex)) {\n\t\t\tarrayStartIndex = 0;\n\t\t}\n\t\tif (isNaN(arrayEndIndex)) {\n\t\t\tarrayEndIndex = 0;\n\t\t}\n\n\t\tarrayStartIndex = Math.min(Math.max(arrayStartIndex, 0), dimensions.itemCount - 1);\n\t\tarrayEndIndex = Math.min(Math.max(arrayEndIndex, 0), dimensions.itemCount - 1);\n\n\t\tlet bufferSize = this.bufferAmount * dimensions.itemsPerWrapGroup;\n\t\tlet startIndexWithBuffer = Math.min(Math.max(arrayStartIndex - bufferSize, 0), dimensions.itemCount - 1);\n\t\tlet endIndexWithBuffer = Math.min(Math.max(arrayEndIndex + bufferSize, 0), dimensions.itemCount - 1);\n\n\t\treturn {\n\t\t\tstartIndex: arrayStartIndex,\n\t\t\tendIndex: arrayEndIndex,\n\t\t\tstartIndexWithBuffer: startIndexWithBuffer,\n\t\t\tendIndexWithBuffer: endIndexWithBuffer,\n\t\t\tscrollStartPosition: scrollPosition,\n\t\t\tscrollEndPosition: scrollPosition + dimensions.viewportLength,\n\t\t\tmaxScrollPosition: dimensions.maxScrollPosition\n\t\t};\n\t}\n\n\tprotected calculateViewport(): IViewport {\n\t\tlet dimensions = this.calculateDimensions();\n\t\tlet offset = this.getElementsOffset();\n\n\t\tlet scrollStartPosition = this.getScrollStartPosition();\n\t\tif (scrollStartPosition > (dimensions.scrollLength + offset) && !(this.parentScroll instanceof Window)) {\n\t\t\tscrollStartPosition = dimensions.scrollLength;\n\t\t} else {\n\t\t\tscrollStartPosition -= offset;\n\t\t}\n\t\tscrollStartPosition = Math.max(0, scrollStartPosition);\n\n\t\tlet pageInfo = this.calculatePageInfo(scrollStartPosition, dimensions);\n\t\tlet newPadding = this.calculatePadding(pageInfo.startIndexWithBuffer, dimensions);\n\t\tlet newScrollLength = dimensions.scrollLength;\n\n\t\treturn {\n\t\t\tstartIndex: pageInfo.startIndex,\n\t\t\tendIndex: pageInfo.endIndex,\n\t\t\tstartIndexWithBuffer: pageInfo.startIndexWithBuffer,\n\t\t\tendIndexWithBuffer: pageInfo.endIndexWithBuffer,\n\t\t\tpadding: Math.round(newPadding),\n\t\t\tscrollLength: Math.round(newScrollLength),\n\t\t\tscrollStartPosition: pageInfo.scrollStartPosition,\n\t\t\tscrollEndPosition: pageInfo.scrollEndPosition,\n\t\t\tmaxScrollPosition: pageInfo.maxScrollPosition\n\t\t};\n\t}\n}\n\n@NgModule({\n\texports: [VirtualScrollerComponent],\n\tdeclarations: [VirtualScrollerComponent],\n\timports: [CommonModule],\n\tproviders: [\n\t\t{\n\t\t\tprovide: 'virtual-scroller-default-options',\n\t\t\tuseFactory: VIRTUAL_SCROLLER_DEFAULT_OPTIONS_FACTORY\n\t\t}\n\t]\n})\nexport class VirtualScrollerModule { }","import { Component, OnInit, HostListener, ChangeDetectionStrategy, OnDestroy, NgModule, SimpleChanges, OnChanges, ChangeDetectorRef, AfterViewChecked, ViewEncapsulation, ContentChild, ViewChild, forwardRef, Input, Output, EventEmitter, ElementRef, AfterViewInit, Pipe, PipeTransform } from '@angular/core';\nimport { FormsModule, NG_VALUE_ACCESSOR, ControlValueAccessor, NG_VALIDATORS, Validator, FormControl } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MyException } from './multiselect.model';\nimport { DropdownSettings } from './multiselect.interface';\nimport { ClickOutsideDirective, ScrollDirective, styleDirective, setPosition } from './clickOutside';\nimport { ListFilterPipe } from './list-filter';\nimport { Item, Badge, Search, TemplateRenderer, CIcon } from './menu-item';\nimport { DataService } from './multiselect.service';\nimport { Subscription, Subject } from 'rxjs';\nimport { VirtualScrollerModule, VirtualScrollerComponent } from './virtual-scroll/virtual-scroll';\nimport { map, debounceTime, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport { ThrowStmt } from '@angular/compiler';\n\nexport const DROPDOWN_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AngularMultiSelect),\n    multi: true\n};\nexport const DROPDOWN_CONTROL_VALIDATION: any = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => AngularMultiSelect),\n    multi: true,\n}\nconst noop = () => {\n};\n\n@Component({\n    selector: 'angular2-multiselect',\n    templateUrl: './multiselect.component.html',\n    host: { '[class]': 'defaultSettings.classes' },\n    styleUrls: ['./multiselect.component.scss'],\n    providers: [DROPDOWN_CONTROL_VALUE_ACCESSOR, DROPDOWN_CONTROL_VALIDATION],\n    encapsulation: ViewEncapsulation.None,\n})\n\nexport class AngularMultiSelect implements OnInit, ControlValueAccessor, OnChanges, Validator, AfterViewChecked, OnDestroy {\n\n    @Input()\n    data: Array<any>;\n\n    @Input()\n    settings: DropdownSettings;\n\n    @Input()\n    loading: boolean;\n\n    @Output('onSelect')\n    onSelect: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output('onDeSelect')\n    onDeSelect: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output('onSelectAll')\n    onSelectAll: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\n\n    @Output('onDeSelectAll')\n    onDeSelectAll: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\n\n    @Output('onOpen')\n    onOpen: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output('onClose')\n    onClose: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output('onScrollToEnd')\n    onScrollToEnd: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output('onFilterSelectAll')\n    onFilterSelectAll: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\n\n    @Output('onFilterDeSelectAll')\n    onFilterDeSelectAll: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\n\n    @Output('onAddFilterNewItem')\n    onAddFilterNewItem: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output('onGroupSelect')\n    onGroupSelect: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output('onGroupDeSelect')\n    onGroupDeSelect: EventEmitter<any> = new EventEmitter<any>();\n\n    @ContentChild(Item, { static: false }) itemTempl: Item;\n    @ContentChild(Badge, { static: false }) badgeTempl: Badge;\n    @ContentChild(Search, { static: false }) searchTempl: Search;\n\n\n    @ViewChild('searchInput', { static: false }) searchInput: ElementRef;\n    @ViewChild('selectedList', { static: false }) selectedListElem: ElementRef;\n    @ViewChild('dropdownList', { static: false }) dropdownListElem: ElementRef;\n    @ViewChild('cuppaDropdown', { static: false }) cuppaDropdown: ElementRef;\n\n    @HostListener('document:keyup.escape', ['$event'])\n    onEscapeDown(event: KeyboardEvent) {\n        if (this.settings.escapeToClose) {\n            this.closeDropdown();\n        }\n    }\n\n    @HostListener('window:scroll', ['$event'])\n    onScroll(event: any) {\n        if (this.isActive && this.settings.tagToBody) {\n            this.closeDropdown();\n            /*             const elem = this.cuppaDropdown.nativeElement;\n                        if(this.settings.autoPosition){\n                            this.dropDownTop = elem.getBoundingClientRect().y + elem.clientHeight + 1;\n                        }\n                        this.dropDownLeft = elem.getBoundingClientRect().x; */\n        }\n    }\n\n    virtualdata: any = [];\n    searchTerm$ = new Subject<string>();\n\n    public selectedItems: Array<any>;\n    public isActive: boolean = false;\n    public isSelectAll: boolean = false;\n    public isFilterSelectAll: boolean = false;\n    public isInfiniteFilterSelectAll: boolean = false;\n    public groupedData: Array<any>;\n    filter: any;\n    public chunkArray: any[];\n    public scrollTop: any;\n    public chunkIndex: any[] = [];\n    public cachedItems: any[] = [];\n    public groupCachedItems: any[] = [];\n    public totalRows: any;\n    public itemHeight: any = 41.6;\n    public screenItemsLen: any;\n    public cachedItemsLen: any;\n    public totalHeight: any;\n    public scroller: any;\n    public maxBuffer: any;\n    public lastScrolled: any;\n    public lastRepaintY: any;\n    public selectedListHeight: any;\n    public filterLength: any = 0;\n    public infiniteFilterLength: any = 0;\n    public viewPortItems: any;\n    public item: any;\n    public dropdownListYOffset: number = 0;\n    subscription: Subscription;\n    public dropDownWidth: number = 0;\n    public dropDownTop: any = '';\n    public dropDownBottom: any = 'unset';\n    public dropDownLeft: number = 0;\n    public id: any = Math.random().toString(36).substring(2)\n    defaultSettings: DropdownSettings = {\n        singleSelection: false,\n        text: 'Select',\n        enableCheckAll: true,\n        selectAllText: 'Select All',\n        unSelectAllText: 'UnSelect All',\n        filterSelectAllText: 'Select all filtered results',\n        filterUnSelectAllText: 'UnSelect all filtered results',\n        enableSearchFilter: false,\n        searchBy: [],\n        maxHeight: 300,\n        badgeShowLimit: 999999999999,\n        classes: '',\n        disabled: false,\n        searchPlaceholderText: 'Search',\n        showCheckbox: true,\n        noDataLabel: 'No Data Available',\n        searchAutofocus: true,\n        lazyLoading: false,\n        labelKey: 'itemName',\n        primaryKey: 'id',\n        position: 'bottom',\n        autoPosition: true,\n        enableFilterSelectAll: true,\n        selectGroup: false,\n        addNewItemOnFilter: false,\n        addNewButtonText: \"Add\",\n        escapeToClose: true,\n        clearAll: true,\n        tagToBody: true\n    }\n    randomSize: boolean = true;\n    public parseError: boolean;\n    public filteredList: any = [];\n    virtualScroollInit: boolean = false;\n    @ViewChild(VirtualScrollerComponent, { static: false })\n    private virtualScroller: VirtualScrollerComponent;\n    public isDisabledItemPresent = false;\n\n    constructor(public _elementRef: ElementRef, private cdr: ChangeDetectorRef, private filterPipe: ListFilterPipe) {\n        this.searchTerm$.asObservable().pipe(\n            debounceTime(1000),\n            distinctUntilChanged(),\n            tap(term => term)\n        ).subscribe(val => {\n            this.filterInfiniteList(val);\n        });\n    }\n    ngOnInit() {\n        this.settings = Object.assign(this.defaultSettings, this.settings);\n\n        this.cachedItems = this.cloneArray(this.data);\n        if (this.settings.position == 'top') {\n            setTimeout(() => {\n                this.selectedListHeight = { val: 0 };\n                this.selectedListHeight.val = this.selectedListElem.nativeElement.clientHeight;\n            });\n        }\n        setTimeout(() => {\n            this.calculateDropdownDirection();\n        });\n        this.virtualScroollInit = false;\n    }\n    onKeyUp(evt: any){\n        this.searchTerm$.next((<HTMLInputElement>evt.target).value);\n    }\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.data && !changes.data.firstChange) {\n            if (this.settings.groupBy) {\n                this.groupedData = this.transformData(this.data, this.settings.groupBy);\n                if (this.data.length == 0) {\n                    this.selectedItems = [];\n                }\n                this.groupCachedItems = this.cloneArray(this.groupedData);\n            }\n            this.cachedItems = this.cloneArray(this.data);\n        }\n        if (changes.settings && !changes.settings.firstChange) {\n            this.settings = Object.assign(this.defaultSettings, this.settings);\n        }\n        if (changes.loading) {\n        }\n        if (this.settings.lazyLoading && this.virtualScroollInit && changes.data) {\n            this.virtualdata = changes.data.currentValue;\n        }\n    }\n    ngDoCheck() {\n        if (this.selectedItems) {\n            if (this.selectedItems.length == 0 || this.data.length == 0 || this.selectedItems.length < this.data.length) {\n                this.isSelectAll = false;\n            }\n        }\n    }\n    ngAfterViewInit() {\n        if (this.settings.lazyLoading) {\n            // this._elementRef.nativeElement.getElementsByClassName(\"lazyContainer\")[0].addEventListener('scroll', this.onScroll.bind(this));\n        }\n    }\n    ngAfterViewChecked() {\n        if (this.selectedListElem.nativeElement.clientHeight && this.settings.position == 'top' && this.selectedListHeight) {\n            this.selectedListHeight.val = this.selectedListElem.nativeElement.clientHeight;\n            this.cdr.detectChanges();\n        }\n        //this.calculateDropdownDirection();\n    }\n    onItemClick(item: any, index: number, evt: Event) {\n        if (item.disabled) {\n            return;\n        }\n\n        if (this.settings.disabled) {\n            return;\n        }\n\n        let found = this.isSelected(item);\n        let limit = this.selectedItems.length < this.settings.limitSelection ? true : false;\n\n        if (!found) {\n            if (this.settings.limitSelection) {\n                if (limit) {\n                    this.addSelected(item);\n                    this.onSelect.emit(item);\n                }\n            }\n            else {\n                this.addSelected(item);\n                this.onSelect.emit(item);\n            }\n\n        }\n        else {\n            this.removeSelected(item);\n            this.onDeSelect.emit(item);\n        }\n        if (this.isSelectAll || this.data.length > this.selectedItems.length) {\n            this.isSelectAll = false;\n        }\n\n        if (this.data.length == this.selectedItems.length) {\n            this.isSelectAll = true;\n        }\n        if (this.settings.groupBy) {\n            this.updateGroupInfo(item);\n        }\n\n\n    }\n    public validate(c: FormControl): any {\n        return null;\n    }\n    private onTouchedCallback: (_: any) => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n\n    writeValue(value: any) {\n        if (value !== undefined && value !== null && value !== '') {\n            if (this.settings.singleSelection) {\n                if (this.settings.groupBy) {\n                    this.groupedData = this.transformData(this.data, this.settings.groupBy);\n                    this.groupCachedItems = this.cloneArray(this.groupedData);\n                    this.selectedItems = [value[0]];\n                } else {\n                    try {\n\n                        if (value.length > 1) {\n                            this.selectedItems = [value[0]];\n                            throw new MyException(404, { \"msg\": \"Single Selection Mode, Selected Items cannot have more than one item.\" });\n                        }\n                        else {\n                            this.selectedItems = value;\n                        }\n                    }\n                    catch (e) {\n                        console.error(e.body.msg);\n                    }\n                }\n\n            }\n            else {\n                if (this.settings.limitSelection) {\n                    this.selectedItems = value.slice(0, this.settings.limitSelection);\n                }\n                else {\n                    this.selectedItems = value;\n                }\n                if (this.selectedItems.length === this.data.length && this.data.length > 0) {\n                    this.isSelectAll = true;\n                }\n                if (this.settings.groupBy) {\n                    this.groupedData = this.transformData(this.data, this.settings.groupBy);\n                    this.groupCachedItems = this.cloneArray(this.groupedData);\n                }\n            }\n        } else {\n            this.selectedItems = [];\n        }\n    }\n\n    //From ControlValueAccessor interface\n    registerOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n\n    //From ControlValueAccessor interface\n    registerOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\n    trackByFn(index: number, item: any) {\n        return item[this.settings.primaryKey];\n    }\n    isSelected(clickedItem: any) {\n        if (clickedItem.disabled) {\n            return false;\n        }\n        let found = false;\n        this.selectedItems && this.selectedItems.forEach(item => {\n            if (clickedItem[this.settings.primaryKey] === item[this.settings.primaryKey]) {\n                found = true;\n            }\n        });\n        return found;\n    }\n    addSelected(item: any) {\n        if (item.disabled) {\n            return;\n        }\n        if (this.settings.singleSelection) {\n            this.selectedItems = [];\n            this.selectedItems.push(item);\n            this.closeDropdown();\n        }\n        else\n            this.selectedItems.push(item);\n        this.onChangeCallback(this.selectedItems);\n        this.onTouchedCallback(this.selectedItems);\n    }\n    removeSelected(clickedItem: any) {\n        this.selectedItems && this.selectedItems.forEach(item => {\n            if (clickedItem[this.settings.primaryKey] === item[this.settings.primaryKey]) {\n                this.selectedItems.splice(this.selectedItems.indexOf(item), 1);\n            }\n        });\n        this.onChangeCallback(this.selectedItems);\n        this.onTouchedCallback(this.selectedItems);\n    }\n    toggleDropdown(evt: any) {\n        if (this.settings.disabled) {\n            return;\n        }\n        this.isActive = !this.isActive;\n        if (this.isActive) {\n            this.openDropdown()\n        }\n        else {\n            this.closeDropdown()\n        }\n        if (this.settings.lazyLoading) {\n            this.virtualdata = this.data;\n            this.virtualScroollInit = true;\n        }\n        evt.preventDefault();\n    }\n    public openDropdown() {\n        if (this.settings.disabled) {\n            return;\n        }\n        this.isActive = true;\n        this.calculateDropdownDirection();\n        if (this.settings.searchAutofocus && this.searchInput && this.settings.enableSearchFilter && !this.searchTempl) {\n            setTimeout(() => {\n                this.searchInput.nativeElement.focus();\n            }, 0);\n        }\n        this.onOpen.emit(true);\n    }\n    public closeDropdown() {\n        if (this.searchInput && this.settings.lazyLoading) {\n            this.searchInput.nativeElement.value = \"\";\n        }\n        if (this.searchInput) {\n            this.searchInput.nativeElement.value = \"\";\n        }\n        this.filter = \"\";\n        this.isActive = false;\n        this.searchTerm$.next('');\n        this.onClose.emit(false);\n    }\n    public closeDropdownOnClickOut() {\n        if (this.isActive) {\n            if (this.searchInput && this.settings.lazyLoading) {\n                this.searchInput.nativeElement.value = \"\";\n            }\n            if (this.searchInput) {\n                this.searchInput.nativeElement.value = \"\";\n            }\n            this.filter = \"\";\n            this.isActive = false;\n            this.clearSearch();\n            this.searchTerm$.next('');\n            this.onClose.emit(false);\n        }\n    }\n    toggleSelectAll(event) {\n        if (!this.isSelectAll) {\n            this.selectedItems = [];\n            if (this.settings.groupBy) {\n                this.groupedData.forEach((obj) => {\n                    obj.selected = !obj.disabled;\n                })\n                this.groupCachedItems.forEach((obj) => {\n                    obj.selected = !obj.disabled;\n                })\n            }\n            // this.selectedItems = this.data.slice();\n            this.selectedItems = this.data.filter((individualData) => !individualData.disabled);\n            this.isSelectAll = true;\n            this.onChangeCallback(this.selectedItems);\n            this.onTouchedCallback(this.selectedItems);\n\n            this.onSelectAll.emit(this.selectedItems);\n        }\n        else {\n            if (this.settings.groupBy) {\n                this.groupedData.forEach((obj) => {\n                    obj.selected = false;\n                });\n                this.groupCachedItems.forEach((obj) => {\n                    obj.selected = false;\n                })\n            }\n            this.selectedItems = [];\n            this.isSelectAll = false;\n            this.onChangeCallback(this.selectedItems);\n            this.onTouchedCallback(this.selectedItems);\n\n            this.onDeSelectAll.emit(this.selectedItems);\n        }\n        setTimeout(() => {\n            this.calculateDropdownDirection();\n        });\n        event.stopPropagation();\n    }\n    filterGroupedList() {\n        if (this.filter == \"\" || this.filter == null) {\n            this.clearSearch();\n            return;\n        }\n        this.groupedData = this.cloneArray(this.groupCachedItems);\n        this.groupedData = this.groupedData.filter(obj => {\n            let arr = [];\n            if (obj[this.settings.labelKey].toLowerCase().indexOf(this.filter.toLowerCase()) > -1) {\n                arr = obj.list;\n            }\n            else {\n                arr = obj.list.filter(t => {\n                    return t[this.settings.labelKey].toLowerCase().indexOf(this.filter.toLowerCase()) > -1;\n                });\n            }\n\n            obj.list = arr;\n            if (obj[this.settings.labelKey].toLowerCase().indexOf(this.filter.toLowerCase()) > -1) {\n                return arr;\n            }\n            else {\n                return arr.some(cat => {\n                    return cat[this.settings.labelKey].toLowerCase().indexOf(this.filter.toLowerCase()) > -1;\n                }\n                )\n            }\n\n        });\n    }\n    toggleFilterSelectAll() {\n        if (!this.isFilterSelectAll) {\n            let added = [];\n            if (this.settings.groupBy) {\n                this.groupedData.forEach((item: any) => {\n                    item.sele\n                    if (item.list) {\n                        item.list.forEach((el: any) => {\n                            if (!this.isSelected(el)) {\n                                this.addSelected(el);\n                                added.push(el);\n                            }\n                        });\n                    }\n                    this.updateGroupInfo(item);\n\n                });\n\n                this.filteredList.forEach((el: any) => {\n                    if (!this.isSelected(el) && !el.hasOwnProperty('grpTitle')) {\n                        this.addSelected(el);\n                        added.push(el);\n                    }\n                });\n\n            }\n            else {\n                this.filteredList.forEach((item: any) => {\n                    if (!this.isSelected(item)) {\n                        this.addSelected(item);\n                        added.push(item);\n                    }\n\n                });\n            }\n\n            this.isFilterSelectAll = true;\n            this.onFilterSelectAll.emit(added);\n        }\n        else {\n            let removed = [];\n            if (this.settings.groupBy) {\n                this.groupedData.forEach((item: any) => {\n                    if (item.list) {\n                        item.list.forEach((el: any) => {\n                            if (this.isSelected(el)) {\n                                this.removeSelected(el);\n                                removed.push(el);\n                            }\n                        });\n                    }\n                    this.updateGroupInfo(item);\n                });\n                this.filteredList.forEach((el: any) => {\n                    if (this.isSelected(el)) {\n                        this.removeSelected(el);\n                        removed.push(el);\n                    }\n                });\n            }\n            else {\n                this.filteredList.forEach((item: any) => {\n                    if (this.isSelected(item)) {\n                        this.removeSelected(item);\n                        removed.push(item);\n                    }\n\n                });\n            }\n            this.isFilterSelectAll = false;\n            this.onFilterDeSelectAll.emit(removed);\n        }\n    }\n    toggleInfiniteFilterSelectAll() {\n        if (!this.isInfiniteFilterSelectAll) {\n            this.virtualdata.forEach((item: any) => {\n                if (!this.isSelected(item)) {\n                    this.addSelected(item);\n                }\n            });\n            this.isInfiniteFilterSelectAll = true;\n        }\n        else {\n            this.virtualdata.forEach((item: any) => {\n                if (this.isSelected(item)) {\n                    this.removeSelected(item);\n                }\n\n            });\n            this.isInfiniteFilterSelectAll = false;\n        }\n    }\n    clearSearch() {\n        if (this.settings.groupBy) {\n            this.groupedData = [];\n            this.groupedData = this.cloneArray(this.groupCachedItems);\n        }\n        this.filter = \"\";\n        this.isFilterSelectAll = false;\n        this.searchTerm$.next('');\n        this.data = this.cachedItems;\n    }\n    onFilterChange(data: any) {\n        if (this.filter && this.filter == \"\" || data.length == 0) {\n            this.isFilterSelectAll = false;\n            this.data = this.cachedItems.slice();\n        }\n        let cnt = 0;\n        data.forEach((item: any) => {\n\n            if (!item.hasOwnProperty('grpTitle') && this.isSelected(item)) {\n                cnt++;\n            }\n        });\n\n        if (cnt > 0 && this.filterLength == cnt) {\n            this.isFilterSelectAll = true;\n        }\n        else if (cnt > 0 && this.filterLength != cnt) {\n            this.isFilterSelectAll = false;\n        }\n        this.data = data;\n    }\n    cloneArray(arr: any) {\n        let i, copy;\n\n        if (Array.isArray(arr)) {\n            return JSON.parse(JSON.stringify(arr));\n        } else if (typeof arr === 'object') {\n            throw 'Cannot clone array containing an object!';\n        } else {\n            return arr;\n        }\n    }\n    updateGroupInfo(item: any) {\n        if (item.disabled) {\n            return;\n        }\n        let key = this.settings.groupBy;\n        this.groupedData.forEach((obj: any) => {\n            let cnt = 0;\n            if (obj.grpTitle && (item[key] == obj[key])) {\n                if (obj.list) {\n                    obj.list.forEach((el: any) => {\n                        if (this.isSelected(el)) {\n                            cnt++;\n                        }\n                    });\n                }\n            }\n            if (obj.list && (cnt === obj.list.length) && (item[key] == obj[key])) {\n                obj.selected = true;\n            }\n            else if (obj.list && (cnt != obj.list.length) && (item[key] == obj[key])) {\n                obj.selected = false;\n            }\n        });\n        this.groupCachedItems.forEach((obj: any) => {\n            let cnt = 0;\n            if (obj.grpTitle && (item[key] == obj[key])) {\n                if (obj.list) {\n                    obj.list.forEach((el: any) => {\n                        if (this.isSelected(el)) {\n                            cnt++;\n                        }\n                    });\n                }\n            }\n            if (obj.list && (cnt === obj.list.length) && (item[key] == obj[key])) {\n                obj.selected = true;\n            }\n            else if (obj.list && (cnt != obj.list.length) && (item[key] == obj[key])) {\n                obj.selected = false;\n            }\n        });\n    }\n    transformData(arr: Array<any>, field: any): Array<any> {\n        const groupedObj: any = arr.reduce((prev: any, cur: any) => {\n            if (!prev[cur[field]]) {\n                prev[cur[field]] = [cur];\n            } else {\n                prev[cur[field]].push(cur);\n            }\n            return prev;\n        }, {});\n        const tempArr: any = [];\n        Object.keys(groupedObj).map((x: any) => {\n            let obj: any = {};\n            let disabledChildrens = [];\n            obj[\"grpTitle\"] = true;\n            obj[this.settings.labelKey] = x;\n            obj[this.settings.groupBy] = x;\n            obj['selected'] = false;\n            obj['list'] = [];\n            let cnt = 0;\n            groupedObj[x].forEach((item: any) => {\n                item['list'] = [];\n                if (item.disabled) {\n                    this.isDisabledItemPresent = true;\n                    disabledChildrens.push(item);\n                }\n                obj.list.push(item);\n                if (this.isSelected(item)) {\n                    cnt++;\n                }\n            });\n            if (cnt == obj.list.length) {\n                obj.selected = true;\n            }\n            else {\n                obj.selected = false;\n            }\n\n            // Check if current group item's all childrens are disabled or not\n            obj['disabled'] = disabledChildrens.length === groupedObj[x].length;\n            tempArr.push(obj);\n            // obj.list.forEach((item: any) => {\n            //     tempArr.push(item);\n            // });\n        });\n        return tempArr;\n    }\n    public filterInfiniteList(evt: any) {\n        let filteredElems: Array<any> = [];\n        if (this.settings.groupBy) {\n            this.groupedData = this.groupCachedItems.slice();\n        }\n        else {\n            this.data = this.cachedItems.slice();\n            this.virtualdata = this.cachedItems.slice();\n        }\n\n        if ((evt != null || evt != '') && !this.settings.groupBy) {\n            if (this.settings.searchBy.length > 0) {\n                for (let t = 0; t < this.settings.searchBy.length; t++) {\n\n                    this.virtualdata.filter((el: any) => {\n                        if (el[this.settings.searchBy[t].toString()].toString().toLowerCase().indexOf(evt.toString().toLowerCase()) >= 0) {\n                            filteredElems.push(el);\n                        }\n                    });\n                }\n\n            }\n            else {\n                this.virtualdata.filter(function (el: any) {\n                    for (let prop in el) {\n                        if (el[prop].toString().toLowerCase().indexOf(evt.toString().toLowerCase()) >= 0) {\n                            filteredElems.push(el);\n                            break;\n                        }\n                    }\n                });\n            }\n            this.virtualdata = [];\n            this.virtualdata = filteredElems;\n            this.infiniteFilterLength = this.virtualdata.length;\n        }\n        if (evt.toString() != '' && this.settings.groupBy) {\n            this.groupedData.filter(function (el: any) {\n                if (el.hasOwnProperty('grpTitle')) {\n                    filteredElems.push(el);\n                }\n                else {\n                    for (let prop in el) {\n                        if (el[prop].toString().toLowerCase().indexOf(evt.toString().toLowerCase()) >= 0) {\n                            filteredElems.push(el);\n                            break;\n                        }\n                    }\n                }\n            });\n            this.groupedData = [];\n            this.groupedData = filteredElems;\n            this.infiniteFilterLength = this.groupedData.length;\n        }\n        else if (evt.toString() == '' && this.cachedItems.length > 0) {\n            this.virtualdata = [];\n            this.virtualdata = this.cachedItems;\n            this.infiniteFilterLength = 0;\n        }\n        if(this.virtualScroller){\n            this.virtualScroller.refresh();\n        }\n    }\n    resetInfiniteSearch() {\n        this.filter = \"\";\n        this.isInfiniteFilterSelectAll = false;\n        this.virtualdata = [];\n        this.virtualdata = this.cachedItems;\n        this.groupedData = this.groupCachedItems;\n        this.searchTerm$.next('');\n        this.infiniteFilterLength = 0;\n    }\n    onScrollEnd(e: any) {\n        if (e.endIndex === this.data.length - 1 || e.startIndex === 0) {\n\n        }\n        this.onScrollToEnd.emit(e);\n\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n\n    }\n    selectGroup(item: any) {\n        if (item.disabled) {\n            return;\n        }\n        if (item.selected) {\n            item.selected = false;\n            item.list.forEach((obj: any) => {\n                this.removeSelected(obj);\n            });\n\n            this.onGroupDeSelect.emit(item);\n            this.updateGroupInfo(item);\n\n        }\n        else {\n            item.selected = true;\n            item.list.forEach((obj: any) => {\n                if (!this.isSelected(obj)) {\n                    this.addSelected(obj);\n                }\n\n            });\n            this.onGroupSelect.emit(item);\n            this.updateGroupInfo(item);\n\n        }\n\n\n    }\n    addFilterNewItem() {\n        this.onAddFilterNewItem.emit(this.filter);\n        this.filterPipe.transform(this.data, this.filter, this.settings.searchBy);\n    }\n    calculateDropdownDirection() {\n        let shouldOpenTowardsTop = this.settings.position == 'top';\n        const elem = this.cuppaDropdown.nativeElement;\n        const dropdownWidth = elem.clientWidth;\n        this.dropDownWidth = dropdownWidth;\n        this.dropDownLeft = this.settings.tagToBody ? elem.getBoundingClientRect().x : 'unset';\n        if (this.settings.position == 'top' && !this.settings.autoPosition) {\n            this.openTowardsTop(true);\n        }\n        else if (this.settings.position == 'bottom' && !this.settings.autoPosition) {\n            this.openTowardsTop(false);\n        }\n        if (this.settings.autoPosition) {\n            const dropdownHeight = this.defaultSettings.maxHeight;\n            const viewportHeight = document.documentElement.clientHeight;\n            const selectedListBounds = this.selectedListElem.nativeElement.getBoundingClientRect();\n\n            const spaceOnTop: number = selectedListBounds.top;\n            const spaceOnBottom: number = viewportHeight - selectedListBounds.top;\n            if (spaceOnBottom < spaceOnTop && dropdownHeight < spaceOnTop) {\n                this.openTowardsTop(true);\n            }\n            else {\n                this.openTowardsTop(false);\n            }\n            // Keep preference if there is not enough space on either the top or bottom\n            /* \t\t\tif (spaceOnTop || spaceOnBottom) {\n                            if (shouldOpenTowardsTop) {\n                                shouldOpenTowardsTop = spaceOnTop;\n                            } else {\n                                shouldOpenTowardsTop = !spaceOnBottom;\n                            }\n                        } */\n        }\n\n    }\n    openTowardsTop(value: boolean) {\n        const elem = this.cuppaDropdown.nativeElement;\n        if (value && this.selectedListElem.nativeElement.clientHeight) {\n            this.dropdownListYOffset = 15 - this.selectedListElem.nativeElement.clientHeight;\n            if(this.settings.tagToBody){\n                this.dropDownTop = (elem.getBoundingClientRect().y - this.selectedListElem.nativeElement.clientHeight*2 - 15 - this.defaultSettings.maxHeight)+'px';\n\n            }\n            else {\n                this.dropDownBottom = (this.selectedListElem.nativeElement.clientHeight + 15 )+'px';\n            }\n            this.settings.position = 'top'\n\n        } else {\n            if(this.settings.tagToBody){\n                this.dropDownTop = (elem.getBoundingClientRect().y + elem.clientHeight + 1)+'px';\n            }\n            else {\n                this.dropDownTop = 'unset';\n                this.dropDownBottom = 'unset';\n            }\n            this.dropdownListYOffset = 0;\n            this.settings.position = 'bottom'\n\n        }\n    }\n    clearSelection(e?: any) {\n        if (this.settings.groupBy) {\n            this.groupCachedItems.forEach((obj) => {\n                obj.selected = false;\n            })\n        }\n        this.clearSearch();\n        this.selectedItems = [];\n        this.isSelectAll = false;\n        this.onChangeCallback(this.selectedItems);\n        this.onTouchedCallback(this.selectedItems);\n        this.onDeSelectAll.emit(this.selectedItems);\n    }\n    filteritems(evt: any) {\n        this.filteredList = this.filterPipe.transform(this.cachedItems, evt.target.value, this.settings.searchBy);\n        if (this.filteredList) {\n            let len = 0;\n            this.filteredList.forEach((obj: any, i: any) => {\n                if (obj.disabled) {\n                    this.isDisabledItemPresent = true;\n                }\n                if (!obj.hasOwnProperty('grpTitle')) {\n                    len++;\n                }\n            });\n            this.filterLength = len;\n        }\n        this.onFilterChange(this.filteredList);\n    }\n}\n\n@NgModule({\n    imports: [CommonModule, FormsModule, VirtualScrollerModule],\n    declarations: [AngularMultiSelect, ClickOutsideDirective, ScrollDirective, styleDirective, ListFilterPipe, Item, TemplateRenderer, Badge, Search, setPosition, CIcon],\n    exports: [AngularMultiSelect, ClickOutsideDirective, ScrollDirective, styleDirective, ListFilterPipe, Item, TemplateRenderer, Badge, Search, setPosition, CIcon],\n    providers: [DataService, ListFilterPipe]\n})\nexport class AngularMultiSelectModule { }\n"]}