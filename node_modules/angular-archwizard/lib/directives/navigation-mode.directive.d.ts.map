{"version":3,"file":"navigation-mode.directive.d.ts","sources":["navigation-mode.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnChanges, SimpleChanges } from '@angular/core';\nimport { NavigationMode } from '../navigation/navigation-mode.interface';\nimport { WizardComponent } from '../components/wizard.component';\n/**\n * The [[awNavigationMode]] directive can be used to customize wizard'd navigation mode.\n *\n * There are several usage options:\n *\n * ### Option 1. Customize the default navigation mode with [[navigateBackward]] and/or [[navigateForward]] inputs.\n *\n * ```html\n * <aw-wizard [awNavigationMode] navigateBackward=\"deny\" navigateForward=\"allow\">...</aw-wizard>\n * ```\n *\n * ### Option 2. Pass in a custom navigation mode\n *\n * ```typescript\n * import { BaseNavigationMode } from 'angular-archwizard'\n *\n * class CustomNavigationMode extends BaseNavigationMode {\n *\n *   // ...\n * }\n * ```\n *\n * ```typescript\n * @Component({\n *   // ...\n * })\n * class MyComponent {\n *\n *   navigationMode = new CustomNavigationMode();\n * }\n * ```\n *\n * ```html\n * <aw-wizard [awNavigationMode]=\"navigationMode\">...</aw-wizard>\n * ```\n *\n * ### Additional Notes\n *\n * - Specifying a custom navigation mode takes priority over [[navigateBackward]] and [[navigateForward]] inputs\n *\n * - Omitting the [[awNavigationMode]] directive or, equally, specifying just [[awNavigationMode]] without\n *   any inputs or parameters causes the wizard to use the default \"strict\" navigation mode equivalent to\n *\n * ```html\n * <aw-wizard [awNavigationMode] navigateBackward=\"deny\" navigateForward=\"allow\">...</aw-wizard>\n * ````\n */\nexport declare class NavigationModeDirective implements OnChanges {\n    private wizard;\n    /**\n     * Custom navigation mode instance (optional).\n     */\n    awNavigationMode: NavigationMode | null;\n    /**\n     * A parameter for the default navigation mode.  Controls whether wizard steps before the current step are navigable:\n     *\n     * - `navigateBackward=\"deny\"` -- the steps are not navigable\n     * - `navigateBackward=\"allow\"` -- the steps are navigable\n     */\n    navigateBackward: 'allow' | 'deny' | null;\n    /**\n     * A parameter for the default navigation mode.  Controls whether wizard steps after the current step are navigable:\n     *\n     * - `navigateForward=\"deny\"` -- the steps are not navigable\n     * - `navigateForward=\"allow\"` -- the steps are navigable\n     * - `navigateForward=\"visited\"` -- a step is navigable iff it was already visited before\n     */\n    navigateForward: 'allow' | 'deny' | 'visited' | null;\n    constructor(wizard: WizardComponent);\n    ngOnChanges(changes: SimpleChanges): void;\n    private getNavigationMode;\n}\n"]}