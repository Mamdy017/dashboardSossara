{"version":3,"file":"ng-gallery.mjs","sources":["../../../projects/ng-gallery/src/lib/models/constants.ts","../../../projects/ng-gallery/src/lib/utils/gallery.default.ts","../../../projects/ng-gallery/src/lib/components/templates/items.model.ts","../../../projects/ng-gallery/src/lib/services/gallery-ref.ts","../../../projects/ng-gallery/src/lib/models/config.model.ts","../../../projects/ng-gallery/src/lib/services/gallery.service.ts","../../../projects/ng-gallery/src/lib/directives/tap-click.ts","../../../projects/ng-gallery/src/lib/components/gallery-nav.component.ts","../../../projects/ng-gallery/src/lib/components/gallery-dots.component.ts","../../../projects/ng-gallery/src/lib/directives/lazy-image.ts","../../../projects/ng-gallery/src/lib/components/templates/gallery-image.component.ts","../../../projects/ng-gallery/src/lib/components/templates/gallery-video.component.ts","../../../projects/ng-gallery/src/lib/components/templates/gallery-iframe.component.ts","../../../projects/ng-gallery/src/lib/components/gallery-item.component.ts","../../../projects/ng-gallery/src/lib/components/gallery-slider.component.ts","../../../projects/ng-gallery/src/lib/components/gallery-counter.component.ts","../../../projects/ng-gallery/src/lib/components/gallery-thumb.component.ts","../../../projects/ng-gallery/src/lib/components/gallery-thumbs.component.ts","../../../projects/ng-gallery/src/lib/components/gallery-core.component.ts","../../../projects/ng-gallery/src/lib/components/gallery.component.ts","../../../projects/ng-gallery/src/lib/gallery.module.ts","../../../projects/ng-gallery/src/ng-gallery.ts"],"sourcesContent":["export enum GalleryAction {\r\n  INITIALIZED = 'initialized',\r\n  ITEMS_CHANGED = 'itemsChanged',\r\n  INDEX_CHANGED = 'indexChanged',\r\n  PLAY = 'play',\r\n  STOP = 'stop'\r\n}\r\n\r\nexport enum ImageSize {\r\n  Cover = 'cover',\r\n  Contain = 'contain'\r\n}\r\n\r\nexport enum LoadingStrategy {\r\n  Preload = 'preload',\r\n  Lazy = 'lazy',\r\n  Default = 'default'\r\n}\r\n\r\nexport enum ThumbnailsPosition {\r\n  Top = 'top',\r\n  Left = 'left',\r\n  Right = 'right',\r\n  Bottom = 'bottom'\r\n}\r\n\r\nexport enum ImageLoaderMode {\r\n  Determinate= 'determinate',\r\n  Indeterminate= 'indeterminate'\r\n}\r\n\r\nexport enum DotsPosition {\r\n  Top = 'top',\r\n  Bottom = 'bottom'\r\n}\r\n\r\nexport enum CounterPosition {\r\n  Top = 'top',\r\n  Bottom = 'bottom'\r\n}\r\n\r\nexport enum ThumbnailsMode {\r\n  Free = 'free',\r\n  Strict = 'strict'\r\n}\r\n\r\nexport enum SlidingDirection {\r\n  Horizontal = 'horizontal',\r\n  Vertical = 'vertical'\r\n}\r\n\r\nexport enum GalleryItemType {\r\n  Image = 'image',\r\n  Video = 'video',\r\n  Youtube = 'youtube',\r\n  Iframe = 'iframe'\r\n}\r\n\r\nexport enum ThumbnailsView {\r\n  Default = 'default',\r\n  Contain = 'contain',\r\n}\r\n","import {\r\n  ImageSize,\r\n  GalleryAction,\r\n  ThumbnailsMode,\r\n  LoadingStrategy,\r\n  SlidingDirection,\r\n  ThumbnailsPosition,\r\n  ImageLoaderMode,\r\n  DotsPosition,\r\n  CounterPosition\r\n} from '../models/constants';\r\nimport { GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\n\r\n/** Initial state */\r\nexport const defaultState: GalleryState = {\r\n  action: GalleryAction.INITIALIZED,\r\n  isPlaying: false,\r\n  hasNext: false,\r\n  hasPrev: false,\r\n  currIndex: 0,\r\n  items: []\r\n};\r\n\r\nexport const defaultConfig: GalleryConfig = {\r\n  nav: true,\r\n  loop: true,\r\n  zoomOut: 0,\r\n  dots: false,\r\n  thumb: true,\r\n  dotsSize: 30,\r\n  counter: true,\r\n  gestures: true,\r\n  autoPlay: false,\r\n  thumbWidth: 120,\r\n  thumbHeight: 90,\r\n  panSensitivity: 25,\r\n  disableThumb: false,\r\n  playerInterval: 3000,\r\n  reserveGesturesAction: false,\r\n  imageSize: ImageSize.Contain,\r\n  thumbMode: ThumbnailsMode.Strict,\r\n  dotsPosition: DotsPosition.Bottom,\r\n  counterPosition: CounterPosition.Top,\r\n  thumbPosition: ThumbnailsPosition.Bottom,\r\n  loadingStrategy: LoadingStrategy.Default,\r\n  slidingDirection: SlidingDirection.Horizontal,\r\n  navIcon: `<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"512px\" height=\"512px\" enable-background=\"new 0 0 240.823 240.823\" version=\"1.1\" viewBox=\"0 0 240.823 240.823\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m183.19 111.82l-108.3-108.26c-4.752-4.74-12.451-4.74-17.215 0-4.752 4.74-4.752 12.439 0 17.179l99.707 99.671-99.695 99.671c-4.752 4.74-4.752 12.439 0 17.191 4.752 4.74 12.463 4.74 17.215 0l108.3-108.26c4.68-4.691 4.68-12.511-0.012-17.19z\" fill=\"#fff\"/></svg>`,\r\n  loadingIcon: `<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg stroke=\"#fff\" viewBox=\"0 0 44 44\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\" stroke-width=\"2\"><circle cx=\"22\" cy=\"22\" r=\"1\"><animate attributeName=\"r\" begin=\"0s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.165, 0.84, 0.44, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 20\"/><animate attributeName=\"stroke-opacity\" begin=\"0s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.3, 0.61, 0.355, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 0\"/></circle><circle cx=\"22\" cy=\"22\" r=\"1\"><animate attributeName=\"r\" begin=\"-0.9s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.165, 0.84, 0.44, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 20\"/><animate attributeName=\"stroke-opacity\" begin=\"-0.9s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.3, 0.61, 0.355, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 0\"/></circle></g></svg>`\r\n};\r\n","import { GalleryItem } from '../../models/gallery.model';\r\nimport { GalleryItemType } from '../../models/constants';\r\n\r\nexport class ImageItem implements GalleryItem {\r\n  readonly type: string;\r\n  readonly data: ImageItemData;\r\n\r\n  constructor(data: ImageItemData) {\r\n    this.data = data;\r\n    this.type = GalleryItemType.Image;\r\n  }\r\n}\r\n\r\nexport class VideoItem implements GalleryItem {\r\n  readonly type: string;\r\n  readonly data: VideoItemData;\r\n\r\n  constructor(data: VideoItemData) {\r\n    this.data = data;\r\n    this.type = GalleryItemType.Video;\r\n  }\r\n}\r\n\r\nexport class IframeItem implements GalleryItem {\r\n  readonly type: string;\r\n  readonly data: IframeItemData;\r\n\r\n  constructor(data: IframeItemData) {\r\n    this.data = data;\r\n    this.type = GalleryItemType.Iframe;\r\n  }\r\n}\r\n\r\nexport class YoutubeItem implements GalleryItem {\r\n  readonly type: string;\r\n  readonly data: YoutubeItemData;\r\n\r\n  constructor(data: YoutubeItemData) {\r\n    this.data = {\r\n      ...data,\r\n      ...{\r\n        src: `https://youtube.com/embed/${ data.src }`,\r\n        thumb: data.thumb ? data.thumb : `//img.youtube.com/vi/${ data.src }/default.jpg`\r\n      }\r\n    };\r\n    this.type = GalleryItemType.Youtube;\r\n  }\r\n}\r\n\r\ntype GalleryItemModel = {\r\n  type?: string;\r\n  src?: string;\r\n  thumb?: string;\r\n};\r\n\r\nexport type ImageItemData = GalleryItemModel & {\r\n  alt?: string;\r\n};\r\n\r\nexport type IframeItemData = GalleryItemModel & {\r\n  params?: any;\r\n};\r\n\r\nexport type YoutubeItemData = IframeItemData & {\r\n  autoplay?: boolean;\r\n};\r\n\r\nexport type VideoItemData = GalleryItemModel & {\r\n  src?: string | { url: string, type: string }[];\r\n  thumb?: string;\r\n  poster?: string;\r\n  controls?: boolean;\r\n  autoplay?: boolean;\r\n};\r\n\r\nexport type GalleryItemData = ImageItemData | VideoItemData | IframeItemData | YoutubeItemData;\r\n","import { BehaviorSubject, Subject, Observable, of, EMPTY } from 'rxjs';\r\nimport { delay, filter, switchMap, tap } from 'rxjs/operators';\r\nimport { defaultState } from '../utils/gallery.default';\r\nimport { GalleryError, GalleryItem, GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { GalleryAction } from '../models/constants';\r\nimport { IframeItem, ImageItem, VideoItem, YoutubeItem } from '../components/templates/items.model';\r\n\r\nconst filterActions = (actions: string[]) => {\r\n  return filter((state: GalleryState) => actions.indexOf(state.action) > -1);\r\n};\r\n\r\nexport class GalleryRef {\r\n\r\n  /** Stream that emits gallery state */\r\n  private readonly _state: BehaviorSubject<GalleryState>;\r\n\r\n  /** Stream that emits gallery config */\r\n  private readonly _config: BehaviorSubject<GalleryConfig>;\r\n\r\n  /** Stream that emits on item click */\r\n  readonly itemClick = new Subject<number>();\r\n\r\n  /** Stream that emits on thumbnail click */\r\n  readonly thumbClick = new Subject<number>();\r\n\r\n  /** Stream that emits on an error occurs */\r\n  readonly error = new Subject<GalleryError>();\r\n\r\n  /** Gallery Events */\r\n\r\n  /** Stream that emits gallery state */\r\n  readonly state: Observable<GalleryState>;\r\n\r\n  /** Stream that emits gallery config */\r\n  readonly config: Observable<GalleryConfig>;\r\n\r\n  get stateSnapshot(): GalleryState {\r\n    return this._state.value;\r\n  }\r\n\r\n  /** Stream that emits when gallery is initialized/reset */\r\n  get initialized(): Observable<GalleryState> {\r\n    return this.state.pipe(filterActions([GalleryAction.INITIALIZED]));\r\n  }\r\n\r\n  /** Stream that emits when items is changed (items loaded, item added, item removed) */\r\n  get itemsChanged(): Observable<GalleryState> {\r\n    return this.state.pipe(filterActions([GalleryAction.ITEMS_CHANGED]));\r\n  }\r\n\r\n  /** Stream that emits when current item is changed */\r\n  get indexChanged(): Observable<GalleryState> {\r\n    return this.state.pipe(filterActions([GalleryAction.INDEX_CHANGED]));\r\n  }\r\n\r\n  /** Stream that emits when the player should start or stop */\r\n  get playingChanged(): Observable<GalleryState> {\r\n    return this.state.pipe(filterActions([GalleryAction.PLAY, GalleryAction.STOP]));\r\n  }\r\n\r\n  /** Stream that emits when the player should start or stop */\r\n  private get playerActions(): Observable<GalleryState> {\r\n    return this.state.pipe(filterActions([GalleryAction.PLAY, GalleryAction.STOP, GalleryAction.INDEX_CHANGED]));\r\n  }\r\n\r\n  constructor(config: GalleryConfig, private deleteInstance: () => void) {\r\n    this._state = new BehaviorSubject<GalleryState>(defaultState);\r\n    this._config = new BehaviorSubject<GalleryConfig>(config);\r\n    this.state = this._state.asObservable();\r\n    this.config = this._config.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Activate player actions listener\r\n   */\r\n  activatePlayer(): Observable<GalleryState> {\r\n    return this.playerActions.pipe(\r\n      switchMap((e: GalleryState) =>\r\n        e.isPlaying ? of({}).pipe(\r\n          delay(this._config.value.playerInterval),\r\n          tap(() => this.next())\r\n        ) : EMPTY\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set gallery state\r\n   */\r\n  private setState(state: GalleryState) {\r\n    this._state.next({...this.stateSnapshot, ...state});\r\n  }\r\n\r\n  /**\r\n   * Set gallery config\r\n   */\r\n  setConfig(config: GalleryConfig) {\r\n    this._config.next({...this._config.value, ...config});\r\n  }\r\n\r\n  /**\r\n   * Add gallery item\r\n   */\r\n  add(item: GalleryItem, active?: boolean) {\r\n    const items: GalleryItem[] = [...this.stateSnapshot.items, item];\r\n    this.setState({\r\n      action: GalleryAction.ITEMS_CHANGED,\r\n      items,\r\n      hasNext: items.length > 1,\r\n      currIndex: active ? items.length - 1 : this.stateSnapshot.currIndex\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add image item\r\n   */\r\n  addImage(data: any, active?: boolean) {\r\n    this.add(new ImageItem(data), active);\r\n  }\r\n\r\n  /**\r\n   * Add video item\r\n   */\r\n  addVideo(data: any, active?: boolean) {\r\n    this.add(new VideoItem(data), active);\r\n  }\r\n\r\n  /**\r\n   * Add iframe item\r\n   */\r\n  addIframe(data: any, active?: boolean) {\r\n    this.add(new IframeItem(data), active);\r\n  }\r\n\r\n  /**\r\n   * Add youtube item\r\n   */\r\n  addYoutube(data: any, active?: boolean) {\r\n    this.add(new YoutubeItem(data), active);\r\n  }\r\n\r\n  /**\r\n   * Remove gallery item\r\n   */\r\n  remove(i: number) {\r\n    const state: GalleryState = this.stateSnapshot;\r\n    const items: GalleryItem[] = [\r\n      ...state.items.slice(0, i),\r\n      ...state.items.slice(i + 1, state.items.length)\r\n    ];\r\n    this.setState({\r\n      action: GalleryAction.ITEMS_CHANGED,\r\n      currIndex: i < 1 ? state.currIndex : i - 1,\r\n      items,\r\n      hasNext: items.length > 1,\r\n      hasPrev: i > 0\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Load items and reset the state\r\n   */\r\n  load(items: GalleryItem[]) {\r\n    if (items) {\r\n      this.setState({\r\n        action: GalleryAction.ITEMS_CHANGED,\r\n        items,\r\n        hasNext: items.length > 1,\r\n        hasPrev: false\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set active item\r\n   */\r\n  set(i: number) {\r\n    if (i !== this.stateSnapshot.currIndex) {\r\n      this.setState({\r\n        action: GalleryAction.INDEX_CHANGED,\r\n        currIndex: i,\r\n        hasNext: i < this.stateSnapshot.items.length - 1,\r\n        hasPrev: i > 0\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Next item\r\n   */\r\n  next() {\r\n    if (this.stateSnapshot.hasNext) {\r\n      this.set(this.stateSnapshot.currIndex + 1);\r\n    } else if (this._config.value.loop) {\r\n      this.set(0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Prev item\r\n   */\r\n  prev() {\r\n    if (this.stateSnapshot.hasPrev) {\r\n      this.set(this.stateSnapshot.currIndex - 1);\r\n    } else if (this._config.value.loop) {\r\n      this.set(this.stateSnapshot.items.length - 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start gallery player\r\n   */\r\n  play(interval?: number) {\r\n    if (interval) {\r\n      this.setConfig({playerInterval: interval});\r\n    }\r\n    this.setState({action: GalleryAction.PLAY, isPlaying: true});\r\n  }\r\n\r\n  /**\r\n   * Stop gallery player\r\n   */\r\n  stop() {\r\n    this.setState({action: GalleryAction.STOP, isPlaying: false});\r\n  }\r\n\r\n  /**\r\n   * Reset gallery to initial state\r\n   */\r\n  reset() {\r\n    this.setState(defaultState);\r\n  }\r\n\r\n  /**\r\n   * Destroy gallery\r\n   */\r\n  destroy() {\r\n    this._state.complete();\r\n    this._config.complete();\r\n    this.itemClick.complete();\r\n    this.thumbClick.complete();\r\n    this.deleteInstance();\r\n  }\r\n\r\n}\r\n","import { InjectionToken, TemplateRef } from '@angular/core';\r\n\r\nexport const GALLERY_CONFIG = new InjectionToken<GalleryConfig>('GALLERY_CONFIG');\r\n\r\nexport interface GalleryConfig {\r\n  nav?: boolean;\r\n  dots?: boolean;\r\n  loop?: boolean;\r\n  thumb?: boolean;\r\n  zoomOut?: number;\r\n  navIcon?: string;\r\n  counter?: boolean;\r\n  dotsSize?: number;\r\n  gestures?: boolean;\r\n  autoPlay?: boolean;\r\n  thumbWidth?: number;\r\n  thumbHeight?: number;\r\n  loadingIcon?: string;\r\n  loadingError?: string;\r\n  thumbLoadingIcon?: string;\r\n  thumbLoadingError?: string;\r\n  disableThumb?: boolean;\r\n  panSensitivity?: number;\r\n  playerInterval?: number;\r\n  reserveGesturesAction?: boolean;\r\n  itemTemplate?: TemplateRef<any>;\r\n  thumbTemplate?: TemplateRef<any>;\r\n  thumbMode?: 'strict' | 'free';\r\n  imageSize?: 'cover' | 'contain';\r\n  dotsPosition?: 'top' | 'bottom';\r\n  counterPosition?: 'top' | 'bottom';\r\n  slidingDirection?: 'horizontal' | 'vertical';\r\n  loadingStrategy?: 'preload' | 'lazy' | 'default';\r\n  thumbPosition?: 'top' | 'left' | 'right' | 'bottom';\r\n  thumbView?: 'default' | 'contain';\r\n}\r\n","import { Inject, Injectable, Optional } from '@angular/core';\r\n\r\nimport { GalleryRef } from './gallery-ref';\r\nimport { GalleryConfig, GALLERY_CONFIG } from '../models/config.model';\r\nimport { defaultConfig } from '../utils/gallery.default';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Gallery {\r\n\r\n  /** Store gallery instances */\r\n  private readonly _instances = new Map<string, GalleryRef>();\r\n\r\n  /** Global config */\r\n  config: GalleryConfig;\r\n\r\n  constructor(@Optional() @Inject(GALLERY_CONFIG) config: GalleryConfig) {\r\n    this.config = config ? {...defaultConfig, ...config} : defaultConfig;\r\n  }\r\n\r\n  /**\r\n   * Get or create gallery by ID\r\n   * @param id\r\n   * @param config\r\n   */\r\n  ref(id = 'root', config?: GalleryConfig): GalleryRef {\r\n    if (this._instances.has(id)) {\r\n      const galleryRef = this._instances.get(id);\r\n      if (config) {\r\n        galleryRef.setConfig({...this.config, ...config});\r\n      }\r\n      return galleryRef;\r\n    } else {\r\n      return this._instances.set(id, new GalleryRef({...this.config, ...config}, this.deleteInstance(id))).get(id);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroy all gallery instances\r\n   */\r\n  destroyAll() {\r\n    this._instances.forEach((ref: GalleryRef) => ref.destroy());\r\n  }\r\n\r\n  /**\r\n   * Reset all gallery instances\r\n   */\r\n  resetAll() {\r\n    this._instances.forEach((ref: GalleryRef) => ref.reset());\r\n  }\r\n\r\n  /**\r\n   * A destroyer function for each gallery instance\r\n   */\r\n  private deleteInstance(id: string) {\r\n    return () => {\r\n      if (this._instances.has(id)) {\r\n        this._instances.delete(id);\r\n      }\r\n    };\r\n  }\r\n\r\n}\r\n","import { Directive, Input, OnDestroy, OnInit, Output, ElementRef, EventEmitter } from '@angular/core';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { filter, tap } from 'rxjs/operators';\r\n\r\ndeclare const Hammer: any;\r\n\r\n/**\r\n * This directive uses tap event if HammerJS is loaded, otherwise it falls back to normal click event\r\n */\r\n@Directive({\r\n  selector: '[tapClick]'\r\n})\r\nexport class TapClick implements OnInit, OnDestroy {\r\n\r\n  private _hammer: any;\r\n  clickListener = Subscription.EMPTY;\r\n  @Input() tapClickDisabled: boolean;\r\n  @Output() tapClick = new EventEmitter();\r\n\r\n  constructor(private _el: ElementRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activateClickEvent();\r\n  }\r\n\r\n  activateClickEvent() {\r\n    if (typeof Hammer !== 'undefined') {\r\n      // Use Hammer.js tap event\r\n      this._hammer = new Hammer(this._el.nativeElement);\r\n      this._hammer.on('tap', () => {\r\n        if (!this.tapClickDisabled) {\r\n          this.tapClick.emit(null);\r\n        }\r\n      });\r\n    } else {\r\n      // Use normal click event\r\n      this.clickListener = fromEvent(this._el.nativeElement, 'click').pipe(\r\n        filter(() => !this.tapClickDisabled),\r\n        tap(() => this.tapClick.emit(null))\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._hammer) {\r\n      this._hammer.destroy();\r\n    }\r\n    this.clickListener.unsubscribe();\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\n\r\n@Component({\r\n  selector: 'gallery-nav',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <i *ngIf=\"config.loop || state.hasPrev\"\r\n       class=\"g-nav-prev\"\r\n       aria-label=\"Previous\"\r\n       role=\"button\"\r\n       (tapClick)=\"action.emit('prev')\"\r\n       [innerHtml]=\"navIcon\"></i>\r\n\r\n    <i *ngIf=\"config.loop || state.hasNext\"\r\n       class=\"g-nav-next\"\r\n       aria-label=\"Next\"\r\n       role=\"button\"\r\n       (tapClick)=\"action.emit('next')\"\r\n       [innerHtml]=\"navIcon\"></i>\r\n  `\r\n})\r\nexport class GalleryNavComponent implements OnInit {\r\n\r\n  navIcon: SafeHtml;\r\n  @Input() state: GalleryState;\r\n  @Input() config: GalleryConfig;\r\n  @Output() action = new EventEmitter<string>();\r\n\r\n  constructor(private _sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.navIcon = this._sanitizer.bypassSecurityTrustHtml(this.config.navIcon);\r\n  }\r\n}\r\n","import { Component, Input, Output, ChangeDetectionStrategy, EventEmitter } from '@angular/core';\r\nimport { GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\n\r\n@Component({\r\n  selector: 'gallery-dots',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <div class=\"g-dot\"\r\n         *ngFor=\"let item of state.items; let i = index\"\r\n         [class.g-dot-active]=\"i === state.currIndex\"\r\n         [style.width.px]=\"config?.dotsSize\"\r\n         [style.height.px]=\"config?.dotsSize\"\r\n         (tapClick)=\"action.emit(i)\">\r\n      <div class=\"g-dot-inner\"></div>\r\n    </div>\r\n  `\r\n})\r\nexport class GalleryDotsComponent {\r\n  @Input() state: GalleryState;\r\n  @Input() config: GalleryConfig;\r\n  @Output() action = new EventEmitter<number>();\r\n}\r\n","import { Directive, Input, Output, OnDestroy, SimpleChanges, OnChanges, EventEmitter, Inject } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Subject, Observable, Subscription, zip, fromEvent } from 'rxjs';\r\nimport { tap, switchMap } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[lazyImage]'\r\n})\r\nexport class LazyImage implements OnChanges, OnDestroy {\r\n\r\n  private _imageLoader$ = new Subject<string>();\r\n  private _loaderSub$ = Subscription.EMPTY;\r\n\r\n  @Input('lazyImage') src: string;\r\n\r\n  @Output() loaded = new EventEmitter<string>();\r\n  @Output() error = new EventEmitter<Error>();\r\n\r\n  constructor(@Inject(DOCUMENT) private document: any) {\r\n    this._loaderSub$ = this._imageLoader$.pipe(\r\n      switchMap((imageSrc: string) => this.nativeLoader(imageSrc))\r\n    ).subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['src'] && changes['src'].previousValue !== changes['src'].currentValue) {\r\n      this.loadImage(this.src);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._loaderSub$.unsubscribe();\r\n    this._imageLoader$.complete();\r\n  }\r\n\r\n  loadImage(imagePath: string) {\r\n    this._imageLoader$.next(imagePath);\r\n  }\r\n\r\n  /**\r\n   * Native image loader, does not emit progress\r\n   * @param url\r\n   */\r\n  nativeLoader(url: string): Observable<any> {\r\n    const img = this.document.createElement('img');\r\n    // Stop previously loading\r\n    img.src = url;\r\n    // Image load success\r\n    const loadSuccess = fromEvent(img, 'load').pipe(\r\n      tap(() => this.loaded.emit(url))\r\n    );\r\n    // Image load failed\r\n    const loadError = fromEvent(img, 'error').pipe(\r\n      tap(() => this.error.emit(new Error(`[lazyImage]: The image ${url} did not load`)))\r\n    );\r\n    return zip(loadSuccess, loadError);\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  HostBinding,\r\n  EventEmitter,\r\n  OnInit,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { DomSanitizer, SafeHtml, SafeUrl } from '@angular/platform-browser';\r\nimport { animate, style, transition, trigger } from '@angular/animations';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'gallery-image',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('fadeIn', [\r\n      transition(':enter', [\r\n        style({ opacity: 0 }),\r\n        animate('300ms ease-in', style({ opacity: 1 }))\r\n      ])\r\n    ])\r\n  ],\r\n  template: `\r\n    <ng-container [lazyImage]=\"src\"\r\n                  (progress)=\"onProgress($event)\"\r\n                  (loaded)=\"onLoaded($event)\"\r\n                  (error)=\"onError($event)\"\r\n                  [ngSwitch]=\"state | async\">\r\n\r\n      <img *ngSwitchCase=\"'success'\"\r\n           @fadeIn\r\n           [src]=\"imageUrl\"\r\n           [attr.alt]=\"alt\"\r\n           class=\"g-image-item\"/>\r\n\r\n      <div *ngSwitchCase=\"'failed'\"\r\n           class=\"g-image-error-message\">\r\n        <div *ngIf=\"errorTemplate; else defaultError\"\r\n             [innerHTML]=\"errorTemplate\"></div>\r\n        <ng-template #defaultError>\r\n          <ng-container *ngIf=\"isThumbnail; else isLarge\">\r\n            <h4>⚠</h4>\r\n          </ng-container>\r\n          <ng-template #isLarge>\r\n            <h2>⚠</h2>\r\n            <p>Unable to load the image!</p>\r\n          </ng-template>\r\n        </ng-template>\r\n      </div>\r\n\r\n      <ng-container *ngSwitchCase=\"'loading'\">\r\n        <div *ngIf=\"loaderTemplate; else defaultLoader\"\r\n             class=\"g-loading\"\r\n             [innerHTML]=\"loaderTemplate\">\r\n        </div>\r\n        <ng-template #defaultLoader>\r\n          <div *ngIf=\"isThumbnail\" class=\"g-thumb-loading\"></div>\r\n        </ng-template>\r\n      </ng-container>\r\n    </ng-container>\r\n  `\r\n})\r\n\r\nexport class GalleryImageComponent implements OnInit, OnDestroy {\r\n\r\n  /** Stream that emits the state */\r\n  private readonly _state = new BehaviorSubject<'loading' | 'success' | 'failed'>('loading');\r\n  readonly state = this._state.asObservable();\r\n\r\n  /** Progress value */\r\n  progress = 0;\r\n\r\n  /** Is thumbnail */\r\n  @Input() isThumbnail: boolean;\r\n\r\n  /** Image alt */\r\n  @Input() alt: string;\r\n\r\n  /** Image source URL */\r\n  @Input() src: string;\r\n  /** Loaded image URL */\r\n  imageUrl: SafeUrl;\r\n\r\n  /** Custom loader template */\r\n  @Input() loadingIcon: string;\r\n  /** Custom loader safe template */\r\n  loaderTemplate: SafeHtml;\r\n\r\n  /** Custom error template */\r\n  @Input() loadingError: string;\r\n  /** Custom error safe template */\r\n  errorTemplate: SafeHtml;\r\n\r\n  /** Stream that emits when an error occurs */\r\n  @Output() error = new EventEmitter<Error>();\r\n  /** loading error */\r\n  loadError: Error;\r\n\r\n  @HostBinding('class.g-image-loaded') get imageLoadSuccess(): boolean {\r\n    return !!this.imageUrl;\r\n  }\r\n\r\n  @HostBinding('class.g-image-error') get imageLoadFailed(): boolean {\r\n    return !!this.loadError;\r\n  }\r\n\r\n  constructor(private _sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.loadingIcon) {\r\n      this.loaderTemplate = this._sanitizer.bypassSecurityTrustHtml(this.loadingIcon);\r\n    }\r\n    if (this.loadingError) {\r\n      this.errorTemplate = this._sanitizer.bypassSecurityTrustHtml(this.loadingError);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._state.complete();\r\n  }\r\n\r\n  onProgress({ loaded, total }: { loaded: number, total: number }) {\r\n    this.progress = loaded * 100 / total;\r\n  }\r\n\r\n  onLoaded(blobUrl: string) {\r\n    this.imageUrl = this._sanitizer.bypassSecurityTrustUrl(blobUrl);\r\n    this._state.next('success');\r\n  }\r\n\r\n  onError(err: Error) {\r\n    this.loadError = err;\r\n    this._state.next('failed');\r\n    this.error.emit(err);\r\n  }\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnInit, ViewChild, ElementRef, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gallery-video',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <video #video [controls]=\"controls\" [poster]=\"poster\" (error)=\"error.emit($event)\">\r\n      <source *ngFor=\"let src of videoSources\" [src]=\"src?.url\" [type]=\"src?.type\"/>\r\n    </video>\r\n  `\r\n})\r\nexport class GalleryVideoComponent implements OnInit {\r\n\r\n  videoSources: { url: string, type?: string }[];\r\n  controls: boolean;\r\n\r\n  @Input() src: string | { url: string, type?: string }[];\r\n  @Input() poster: string;\r\n  @Input('controls') controlsEnabled: boolean;\r\n\r\n  @Input('pause') set pauseVideo(shouldPause: boolean) {\r\n    if (this.video.nativeElement) {\r\n      const video: HTMLVideoElement = this.video.nativeElement;\r\n      if (shouldPause && !video.paused) {\r\n        video.pause();\r\n      }\r\n    }\r\n  }\r\n\r\n  @Input('play') set playVideo(shouldPlay: boolean) {\r\n    if (this.video.nativeElement) {\r\n      const video: HTMLVideoElement = this.video.nativeElement;\r\n      if (shouldPlay) {\r\n        video.play();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Stream that emits when an error occurs */\r\n  @Output() error = new EventEmitter<Error>();\r\n\r\n  @ViewChild('video', { static: true }) video: ElementRef;\r\n\r\n  ngOnInit() {\r\n    if (this.src instanceof Array) {\r\n      // If video has multiple sources\r\n      this.videoSources = [...this.src];\r\n    } else {\r\n      this.videoSources = [{ url: this.src }];\r\n    }\r\n    this.controls = typeof this.controlsEnabled === 'boolean' ? this.controlsEnabled : true;\r\n  }\r\n}\r\n","import { Component, Input, ViewChild, ElementRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'gallery-iframe',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <iframe #iframe\r\n            frameborder=\"0\"\r\n            allowfullscreen\r\n            [attr.allow]=\"autoplay ? 'autoplay' : ''\"\r\n            [src]=\"iframeSrc\">\r\n    </iframe>\r\n  `\r\n})\r\nexport class GalleryIframeComponent {\r\n\r\n  iframeSrc: SafeResourceUrl;\r\n  videoSrc: string;\r\n\r\n  @Input('src') set src(src: string) {\r\n    this.videoSrc = src;\r\n    this.iframeSrc = this._sanitizer.bypassSecurityTrustResourceUrl(src);\r\n  }\r\n\r\n  @Input('pause') set pauseVideo(shouldPause: boolean) {\r\n    if (this.iframe.nativeElement) {\r\n      if (shouldPause) {\r\n        const iframe: HTMLIFrameElement = this.iframe.nativeElement;\r\n        iframe.src = null;\r\n\r\n        if (!this.autoplay && this.videoSrc) {\r\n          this.iframeSrc = this._sanitizer.bypassSecurityTrustResourceUrl(this.videoSrc);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @Input() autoplay: boolean;\r\n\r\n  @ViewChild('iframe', { static: true }) iframe: ElementRef;\r\n\r\n  constructor(private _sanitizer: DomSanitizer) {\r\n  }\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy, HostBinding, Output, EventEmitter } from '@angular/core';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { LoadingStrategy, GalleryItemType } from '../models/constants';\r\n\r\n@Component({\r\n  selector: 'gallery-item',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <ng-container *ngIf=\"load\" [ngSwitch]=\"type\">\r\n\r\n      <ng-container *ngSwitchCase=\"Types.Image\">\r\n\r\n        <gallery-image [src]=\"data.src\"\r\n                       [alt]=\"data.alt\"\r\n                       [loadingIcon]=\"config.loadingIcon\"\r\n                       [loadingError]=\"config.loadingError\"\r\n                       (error)=\"error.emit($event)\"></gallery-image>\r\n\r\n        <div class=\"g-template g-item-template\">\r\n          <ng-container *ngTemplateOutlet=\"config.itemTemplate;\r\n          context: { index: this.index, currIndex: this.currIndex, type: this.type, data: this.data }\">\r\n          </ng-container>\r\n        </div>\r\n\r\n      </ng-container>\r\n\r\n      <gallery-video *ngSwitchCase=\"Types.Video\"\r\n                     [src]=\"data.src\"\r\n                     [poster]=\"data.poster\"\r\n                     [controls]=\"data.controls\"\r\n                     [play]=\"isAutoPlay\"\r\n                     [pause]=\"currIndex !== index\"\r\n                     (error)=\"error.emit($event)\"></gallery-video>\r\n\r\n      <gallery-iframe *ngSwitchCase=\"Types.Youtube\"\r\n                      [src]=\"youtubeSrc\"\r\n                      [autoplay]=\"isAutoPlay\"\r\n                      [pause]=\"currIndex !== index\"></gallery-iframe>\r\n\r\n      <gallery-iframe *ngSwitchCase=\"Types.Iframe\"\r\n                      [src]=\"data.src\"></gallery-iframe>\r\n\r\n      <ng-container *ngSwitchDefault>\r\n\r\n        <div class=\"g-template g-item-template\">\r\n          <ng-container *ngTemplateOutlet=\"config.itemTemplate;\r\n          context: { index: this.index, currIndex: this.currIndex, type: this.type, data: this.data }\">\r\n          </ng-container>\r\n        </div>\r\n\r\n      </ng-container>\r\n\r\n    </ng-container>\r\n  `\r\n})\r\nexport class GalleryItemComponent {\r\n\r\n  readonly Types = GalleryItemType;\r\n\r\n  /** Gallery config */\r\n  @Input() config: GalleryConfig;\r\n\r\n  /** Item's index in the gallery */\r\n  @Input() index: number;\r\n\r\n  /** Gallery current index */\r\n  @Input() currIndex: number;\r\n\r\n  /** Item's type 'image', 'video', 'youtube', 'iframe' */\r\n  @Input() type: string;\r\n\r\n  /** Item's data, this object contains the data required to display the content (e.g. src path) */\r\n  @Input() data: any;\r\n\r\n  /** Stream that emits when an error occurs */\r\n  @Output() error = new EventEmitter<Error>();\r\n\r\n  @HostBinding('class.g-active-item') get isActive() {\r\n    return this.index === this.currIndex;\r\n  }\r\n\r\n  get isAutoPlay() {\r\n    if (this.isActive) {\r\n      if (this.type === GalleryItemType.Video || this.type === GalleryItemType.Youtube) {\r\n        return this.data.autoplay;\r\n      }\r\n    }\r\n  }\r\n\r\n  get youtubeSrc() {\r\n    let autoplay: 1 | 0 = 0;\r\n    if (this.isActive && this.type === GalleryItemType.Youtube && this.data.autoplay) {\r\n      autoplay = 1;\r\n    }\r\n    const url = new URL(this.data.src);\r\n    url.search = new URLSearchParams({\r\n      wmode: 'transparent',\r\n      ...this.data.params,\r\n      autoplay\r\n    }).toString();\r\n    return url.href;\r\n  }\r\n\r\n  get load() {\r\n    switch (this.config.loadingStrategy) {\r\n      case LoadingStrategy.Preload:\r\n        return true;\r\n      case LoadingStrategy.Lazy:\r\n        return this.currIndex === this.index;\r\n      default:\r\n        return this.currIndex === this.index || this.currIndex === this.index - 1 || this.currIndex === this.index + 1;\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  OnDestroy,\r\n  OnInit,\r\n  OnChanges,\r\n  ViewChild,\r\n  SimpleChanges,\r\n  Inject,\r\n  NgZone,\r\n  ElementRef,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  PLATFORM_ID\r\n} from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { BehaviorSubject, Observable, Subscription, fromEvent } from 'rxjs';\r\nimport { map, tap, debounceTime } from 'rxjs/operators';\r\nimport { GalleryState, GalleryError } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { SlidingDirection } from '../models/constants';\r\nimport { SliderState, WorkerState } from '../models/slider.model';\r\n\r\ndeclare const Hammer: any;\r\n\r\n@Component({\r\n  selector: 'gallery-slider',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <div #container class=\"g-items-container\">\r\n      <div #slider class=\"g-slider\">\r\n        <gallery-item *ngFor=\"let item of state.items; let i = index\"\r\n                      [type]=\"item.type\"\r\n                      [config]=\"config\"\r\n                      [data]=\"item.data\"\r\n                      [currIndex]=\"state.currIndex\"\r\n                      [index]=\"i\"\r\n                      (tapClick)=\"itemClick.emit(i)\"\r\n                      (error)=\"error.emit({itemIndex: i, error: $event})\">\r\n        </gallery-item>\r\n      </div>\r\n    </div>\r\n    <ng-content></ng-content>\r\n  `\r\n})\r\nexport class GallerySliderComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  /** Sliding worker */\r\n  private readonly _slidingWorker$ = new BehaviorSubject<WorkerState>({ value: 0, instant: true });\r\n\r\n  /** HammerJS instance */\r\n  private _hammer: any;\r\n\r\n  /** Subscription reference to window resize stream */\r\n  private _resizeSub$: Subscription;\r\n\r\n  /** Subscription reference to slider state stream */\r\n  private _sliderStateSub$: Subscription;\r\n\r\n  /** Stream that emits sliding state */\r\n  sliderState$: Observable<SliderState>;\r\n\r\n  /** Gallery state */\r\n  @Input() state: GalleryState;\r\n\r\n  /** Gallery config */\r\n  @Input() config: GalleryConfig;\r\n\r\n  /** Stream that emits when the active item should change */\r\n  @Output() action = new EventEmitter<string | number>();\r\n\r\n  /** Stream that emits when item is clicked */\r\n  @Output() itemClick = new EventEmitter<number>();\r\n\r\n  /** Stream that emits when an error occurs */\r\n  @Output() error = new EventEmitter<GalleryError>();\r\n\r\n  @ViewChild('container', { static: true }) containerEl: ElementRef;\r\n\r\n  @ViewChild('slider', { static: true }) sliderEl: ElementRef;\r\n\r\n  get container(): HTMLElement {\r\n    return this.containerEl.nativeElement;\r\n  }\r\n\r\n  get slider(): HTMLElement {\r\n    return this.sliderEl.nativeElement;\r\n  }\r\n\r\n  /** Item zoom */\r\n  get zoom() {\r\n    return { transform: `perspective(50px) translate3d(0, 0, ${ -this.config.zoomOut }px)` };\r\n  }\r\n\r\n  constructor(private _el: ElementRef, private _zone: NgZone, @Inject(PLATFORM_ID) private _platform: Object) {\r\n\r\n    // Activate sliding worker\r\n    this.sliderState$ = this._slidingWorker$.pipe(map((state: WorkerState) => ({\r\n      style: this.getSliderStyles(state),\r\n      instant: state.instant\r\n    })));\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // Refresh the slider\r\n    if (changes.state) {\r\n      this.updateSlider({ value: 0, instant: changes.state.firstChange });\r\n    }\r\n\r\n    // Enable/Disable gestures on changes\r\n    if (changes.config && changes.config.currentValue?.gestures !== changes.config.previousValue?.gestures) {\r\n      if (this.config.gestures) {\r\n        this.activateGestures();\r\n      } else {\r\n        this.deactivateGestures();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._zone.runOutsideAngular(() => {\r\n      // Set styles manually avoid triggering change detection on dragging\r\n      this._sliderStateSub$ = this.sliderState$.pipe(\r\n        tap((state: SliderState) => {\r\n          this.slider.style.transform = state.style.transform;\r\n          this.slider.style.height = state.style.height;\r\n          this.slider.style.width = state.style.width;\r\n          this.slider.classList.toggle('g-no-transition', state.instant);\r\n          this.container.style.transform = this.zoom.transform;\r\n        })\r\n      ).subscribe();\r\n    });\r\n\r\n    // Rearrange slider on window resize\r\n    if (isPlatformBrowser(this._platform)) {\r\n      this._resizeSub$ = fromEvent(window, 'resize').pipe(\r\n        debounceTime(200),\r\n        tap(() => this.updateSlider({ value: 0, instant: true }))\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.deactivateGestures();\r\n    this._resizeSub$?.unsubscribe();\r\n    this._sliderStateSub$?.unsubscribe();\r\n    this._slidingWorker$.complete();\r\n  }\r\n\r\n  private activateGestures() {\r\n    if (typeof Hammer !== 'undefined') {\r\n      let direction: number;\r\n      let touchAction: 'pan-x' | 'pan-y' | 'compute' = 'compute';\r\n\r\n      if (this.config.slidingDirection === SlidingDirection.Horizontal) {\r\n        direction = Hammer.DIRECTION_HORIZONTAL;\r\n        if (this.config.reserveGesturesAction) {\r\n          touchAction = 'pan-x';\r\n        }\r\n      } else {\r\n        direction = Hammer.DIRECTION_VERTICAL;\r\n        if (this.config.reserveGesturesAction) {\r\n          touchAction = 'pan-y';\r\n        }\r\n      }\r\n\r\n      // Activate gestures\r\n      this._hammer = new Hammer(this._el.nativeElement, { touchAction });\r\n      this._hammer.get('pan').set({ direction });\r\n\r\n      this._zone.runOutsideAngular(() => {\r\n        this._hammer.on('pan', (e) => {\r\n          switch (this.config.slidingDirection) {\r\n            case SlidingDirection.Horizontal:\r\n              if (e.isFinal) {\r\n                this.updateSlider({ value: 0, instant: false });\r\n                this.horizontalPan(e);\r\n              } else {\r\n                this.updateSlider({ value: e.deltaX, instant: true });\r\n              }\r\n              break;\r\n            case SlidingDirection.Vertical:\r\n              if (e.isFinal) {\r\n                this.updateSlider({ value: 0, instant: false });\r\n                this.verticalPan(e);\r\n              } else {\r\n                this.updateSlider({ value: e.deltaY, instant: true });\r\n              }\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  private deactivateGestures() {\r\n    this._hammer?.destroy();\r\n  }\r\n\r\n  /**\r\n   * Convert sliding state to styles\r\n   */\r\n  private getSliderStyles(state: WorkerState): any {\r\n    switch (this.config.slidingDirection) {\r\n      case SlidingDirection.Horizontal:\r\n        return {\r\n          transform: `translate3d(${ -(this.state.currIndex * this._el.nativeElement.offsetWidth) + state.value }px, 0, 0)`,\r\n          width: `calc(100% * ${ this.state.items.length })`,\r\n          height: '100%'\r\n        };\r\n      case SlidingDirection.Vertical:\r\n        return {\r\n          transform: `translate3d(0, ${ -(this.state.currIndex * this._el.nativeElement.offsetHeight) + state.value }px, 0)`,\r\n          width: '100%',\r\n          height: `calc(100% * ${ this.state.items.length })`,\r\n        };\r\n    }\r\n  }\r\n\r\n  private verticalPan(e) {\r\n    if (!(e.direction & Hammer.DIRECTION_UP && e.offsetDirection & Hammer.DIRECTION_VERTICAL)) {\r\n      return;\r\n    }\r\n    if (e.velocityY > 0.3) {\r\n      this.prev();\r\n    } else if (e.velocityY < -0.3) {\r\n      this.next();\r\n    } else {\r\n      if (e.deltaY / 2 <= -this._el.nativeElement.offsetHeight * this.state.items.length / this.config.panSensitivity) {\r\n        this.next();\r\n      } else if (e.deltaY / 2 >= this._el.nativeElement.offsetHeight * this.state.items.length / this.config.panSensitivity) {\r\n        this.prev();\r\n      } else {\r\n        this.action.emit(this.state.currIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  private horizontalPan(e) {\r\n    if (!(e.direction & Hammer.DIRECTION_HORIZONTAL && e.offsetDirection & Hammer.DIRECTION_HORIZONTAL)) {\r\n      return;\r\n    }\r\n    if (e.velocityX > 0.3) {\r\n      this.prev();\r\n    } else if (e.velocityX < -0.3) {\r\n      this.next();\r\n    } else {\r\n      if (e.deltaX / 2 <= -this._el.nativeElement.offsetWidth * this.state.items.length / this.config.panSensitivity) {\r\n        this.next();\r\n      } else if (e.deltaX / 2 >= this._el.nativeElement.offsetWidth * this.state.items.length / this.config.panSensitivity) {\r\n        this.prev();\r\n      } else {\r\n        this.action.emit(this.state.currIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  private next() {\r\n    this.action.emit('next');\r\n  }\r\n\r\n  private prev() {\r\n    this.action.emit('prev');\r\n  }\r\n\r\n  private updateSlider(state: WorkerState) {\r\n    const newState: WorkerState = { ...this._slidingWorker$.value, ...state };\r\n    this._slidingWorker$.next(newState);\r\n  }\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { GalleryState } from '../models/gallery.model';\r\n\r\n@Component({\r\n  selector: 'gallery-counter',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <div class=\"g-counter\">{{(state.currIndex + 1) + '/' + state.items.length}}</div>\r\n  `\r\n})\r\nexport class GalleryCounterComponent {\r\n  @Input() state: GalleryState;\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy, HostBinding, Output, EventEmitter } from '@angular/core';\r\nimport { GalleryConfig } from '../models/config.model';\r\n\r\n@Component({\r\n  selector: 'gallery-thumb',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <gallery-image [src]=\"data.thumb\"\r\n                   [alt]=\"data.alt + '-thumbnail'\"\r\n                   [isThumbnail]=\"true\"\r\n                   [loadingIcon]=\"config.thumbLoadingIcon\"\r\n                   [loadingError]=\"config.thumbLoadingError\"\r\n                   (error)=\"error.emit($event)\"></gallery-image>\r\n\r\n    <div *ngIf=\"config.thumbTemplate\" class=\"g-template g-thumb-template\">\r\n      <ng-container\r\n        *ngTemplateOutlet=\"config.thumbTemplate; context: { index: this.index, type: this.type, data: this.data }\">\r\n      </ng-container>\r\n    </div>\r\n  `\r\n})\r\nexport class GalleryThumbComponent {\r\n\r\n  @Input() config: GalleryConfig;\r\n\r\n  /** Item's index in the gallery */\r\n  @Input() index: number;\r\n\r\n  /** Gallery current index */\r\n  @Input() currIndex: number;\r\n\r\n  /** Item's type 'image', 'video', 'youtube', 'iframe' */\r\n  @Input() type: string;\r\n\r\n  /** Item's data, this object contains the data required to display the content (e.g. src path) */\r\n  @Input() data: any;\r\n\r\n  @Output() error = new EventEmitter<Error>();\r\n\r\n  @HostBinding('class.g-active-thumb') get isActive() {\r\n    return this.index === this.currIndex;\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  OnDestroy,\r\n  OnInit,\r\n  OnChanges,\r\n  ViewChild,\r\n  SimpleChanges,\r\n  HostBinding,\r\n  NgZone,\r\n  ElementRef,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { GalleryState, GalleryError } from '../models/gallery.model';\r\nimport { ThumbnailsPosition, ThumbnailsMode, ThumbnailsView } from '../models/constants';\r\nimport { SliderState, WorkerState } from '../models/slider.model';\r\n\r\ndeclare const Hammer: any;\r\n\r\n@Component({\r\n  selector: 'gallery-thumbs',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <div class=\"g-thumbs-container\">\r\n      <div #slider\r\n           class=\"g-slider\"\r\n           [class.g-contain]=\"config.thumbView === thumbnailsView.Contain\"\r\n           [class.g-contain-small-content]=\"thumbnailsLessThanSlider\">\r\n\r\n        <gallery-thumb *ngFor=\"let item of state.items;let i = index\"\r\n                       [type]=\"item.type\"\r\n                       [config]=\"config\"\r\n                       [data]=\"item.data\"\r\n                       [currIndex]=\"state.currIndex\"\r\n                       [index]=\"i\"\r\n                       [tapClickDisabled]=\"config.disableThumb\"\r\n                       (tapClick)=\"thumbClick.emit(i)\"\r\n                       (error)=\"error.emit({itemIndex: i, error: $event})\"></gallery-thumb>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class GalleryThumbsComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  /** Sliding worker */\r\n  private readonly _slidingWorker$ = new BehaviorSubject<WorkerState>({ value: 0, instant: true });\r\n\r\n  /** HammerJS instance */\r\n  private _hammer: any;\r\n\r\n  /** Current slider position in free sliding mode */\r\n  private _freeModeCurrentOffset = 0;\r\n\r\n  /** Subscription reference to slider state stream */\r\n  private _sliderStateSub$: Subscription;\r\n\r\n  /** Thumbnails view enum */\r\n  thumbnailsView = ThumbnailsView;\r\n\r\n  /** Thumbnails size is less than slider size (for contain thumbnails view) */\r\n  thumbnailsLessThanSlider: boolean;\r\n\r\n  /** Stream that emits sliding state */\r\n  sliderState$: Observable<SliderState>;\r\n\r\n  /** Gallery state */\r\n  @Input() state: GalleryState;\r\n\r\n  /** Gallery config */\r\n  @Input() config: GalleryConfig;\r\n\r\n  /** Stream that emits when the active item should change */\r\n  @Output() action = new EventEmitter<string | number>();\r\n\r\n  /** Stream that emits when thumb is clicked */\r\n  @Output() thumbClick = new EventEmitter<number>();\r\n\r\n  /** Stream that emits when an error occurs */\r\n  @Output() error = new EventEmitter<GalleryError>();\r\n\r\n  /** Host height */\r\n  @HostBinding('style.height') height: string;\r\n\r\n  /** Host width */\r\n  @HostBinding('style.width') width: string;\r\n\r\n  @ViewChild('slider', { static: true }) sliderEl: ElementRef;\r\n\r\n  get slider(): HTMLElement {\r\n    return this.sliderEl.nativeElement;\r\n  }\r\n\r\n  constructor(private _el: ElementRef, private _zone: NgZone) {\r\n\r\n    // Activate sliding worker\r\n    this.sliderState$ = this._slidingWorker$.pipe(map((state: WorkerState) => ({\r\n      style: this.getSliderStyles(state),\r\n      instant: state.instant\r\n    })));\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // Refresh the slider\r\n    if (changes.state) {\r\n      this.updateSlider({ value: 0, instant: changes.state.firstChange });\r\n    } else {\r\n      this.updateSlider({ value: 0, instant: true });\r\n    }\r\n\r\n    // Enable/Disable gestures on changes\r\n    if (changes.config && changes.config.currentValue?.gestures !== changes.config.previousValue?.gestures) {\r\n      if (this.config.gestures) {\r\n        this.activateGestures();\r\n      } else {\r\n        this.deactivateGestures();\r\n      }\r\n    }\r\n\r\n    this._freeModeCurrentOffset = 0;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._zone.runOutsideAngular(() => {\r\n      // Set styles manually avoid triggering change detection on dragging\r\n      this._sliderStateSub$ = this.sliderState$.pipe(\r\n        tap((state: SliderState) => {\r\n          this.slider.style.transform = state.style.transform;\r\n          this.slider.style.height = state.style.height;\r\n          this.slider.style.width = state.style.width;\r\n          this.slider.classList.toggle('g-no-transition', state.instant);\r\n        })\r\n      ).subscribe();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._hammer?.destroy();\r\n    this._sliderStateSub$?.unsubscribe();\r\n    this._slidingWorker$.complete();\r\n  }\r\n\r\n  private activateGestures() {\r\n    if (!this.config.disableThumb && typeof Hammer !== 'undefined') {\r\n\r\n      let direction: number;\r\n      let touchAction: 'pan-x' | 'pan-y' | 'compute' = 'compute';\r\n\r\n      switch (this.config.thumbPosition) {\r\n        case ThumbnailsPosition.Right:\r\n        case ThumbnailsPosition.Left:\r\n          direction = Hammer.DIRECTION_VERTICAL;\r\n          if (this.config.reserveGesturesAction) {\r\n            touchAction = 'pan-y';\r\n          }\r\n          break;\r\n        case ThumbnailsPosition.Top:\r\n        case ThumbnailsPosition.Bottom:\r\n          direction = Hammer.DIRECTION_HORIZONTAL;\r\n          if (this.config.reserveGesturesAction) {\r\n            touchAction = 'pan-x';\r\n          }\r\n          break;\r\n      }\r\n\r\n      // Activate gestures\r\n      this._hammer = new Hammer(this._el.nativeElement);\r\n      this._hammer.get('pan').set({ direction });\r\n\r\n      this._zone.runOutsideAngular(() => {\r\n        // Move the slider\r\n        switch (this.config.thumbMode) {\r\n          case ThumbnailsMode.Strict:\r\n            this._hammer.on('pan', (e) => this.strictMode(e));\r\n            break;\r\n          case ThumbnailsMode.Free:\r\n            this._hammer.on('pan', (e) => this.freeMode(e));\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private deactivateGestures() {\r\n    this._hammer?.destroy();\r\n  }\r\n\r\n  /**\r\n   * Sliding strict mode\r\n   */\r\n  private strictMode(e) {\r\n    switch (this.config.thumbPosition) {\r\n      case ThumbnailsPosition.Right:\r\n      case ThumbnailsPosition.Left:\r\n        if (e.isFinal) {\r\n          this.updateSlider({ value: 0, instant: false });\r\n          this.verticalPan(e);\r\n        } else {\r\n          this.updateSlider({ value: e.deltaY, instant: true });\r\n        }\r\n        break;\r\n      case ThumbnailsPosition.Top:\r\n      case ThumbnailsPosition.Bottom:\r\n        if (e.isFinal) {\r\n          this.updateSlider({ value: 0, instant: false });\r\n          this.horizontalPan(e);\r\n        } else {\r\n          this.updateSlider({ value: e.deltaX, instant: true });\r\n        }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sliding free mode\r\n   */\r\n  private freeMode(e) {\r\n    switch (this.config.thumbPosition) {\r\n      case ThumbnailsPosition.Right:\r\n      case ThumbnailsPosition.Left:\r\n        this.updateSlider({ value: this._freeModeCurrentOffset + e.deltaY, instant: true });\r\n        if (e.isFinal) {\r\n          if (this.minFreeScrollExceeded(e.deltaY, this.config.thumbWidth, this.config.thumbHeight)) {\r\n            this._freeModeCurrentOffset = -(this.state.items.length - 1 - this.state.currIndex) * this.config.thumbHeight;\r\n          } else if (this.maxFreeScrollExceeded(e.deltaY, this.config.thumbHeight, this.config.thumbWidth)) {\r\n            this._freeModeCurrentOffset = this.state.currIndex * this.config.thumbHeight;\r\n          } else {\r\n            this._freeModeCurrentOffset += e.deltaY;\r\n          }\r\n          this.updateSlider({ value: this._freeModeCurrentOffset, instant: false });\r\n        }\r\n        break;\r\n      case ThumbnailsPosition.Top:\r\n      case ThumbnailsPosition.Bottom:\r\n        this.updateSlider({ value: this._freeModeCurrentOffset + e.deltaX, instant: true });\r\n        if (e.isFinal) {\r\n          if (this.minFreeScrollExceeded(e.deltaX, this.config.thumbHeight, this.config.thumbWidth)) {\r\n            this._freeModeCurrentOffset = -(this.state.items.length - 1 - this.state.currIndex) * this.config.thumbWidth;\r\n          } else if (this.maxFreeScrollExceeded(e.deltaX, this.config.thumbWidth, this.config.thumbHeight)) {\r\n            this._freeModeCurrentOffset = this.state.currIndex * this.config.thumbWidth;\r\n          } else {\r\n            this._freeModeCurrentOffset += e.deltaX;\r\n          }\r\n          this.updateSlider({ value: this._freeModeCurrentOffset, instant: false });\r\n        }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if the minimum free scroll is exceeded (used in Bottom, Left directions)\r\n   */\r\n  private minFreeScrollExceeded(delta: number, width: number, height: number): boolean {\r\n    return -(this._freeModeCurrentOffset + delta - width / 2) > (this.state.items.length - this.state.currIndex) * height;\r\n  }\r\n\r\n  /**\r\n   * Check if the maximum free scroll is exceeded (used in Top, Right directions)\r\n   */\r\n  private maxFreeScrollExceeded(delta: number, width: number, height: number): boolean {\r\n    return this._freeModeCurrentOffset + delta > (this.state.currIndex * width) + (height / 2);\r\n  }\r\n\r\n  /**\r\n   * Convert sliding state to styles\r\n   */\r\n  private getSliderStyles(state: WorkerState): any {\r\n    const currIndex: number = this.state.currIndex;\r\n    const itemsLength: number = this.state.items.length;\r\n    const { thumbWidth, thumbHeight } = this.config;\r\n\r\n    let value: number;\r\n    switch (this.config.thumbPosition) {\r\n      case ThumbnailsPosition.Top:\r\n      case ThumbnailsPosition.Bottom:\r\n        this.width = '100%';\r\n        this.height = this.config.thumbHeight + 'px';\r\n        switch (this.config.thumbView) {\r\n          case 'contain':\r\n            const containerWidth: number = this._el.nativeElement.clientWidth;\r\n            const minHorizontalShift: number = itemsLength * thumbWidth - containerWidth;\r\n            // If slider size is larger than thumbnails size\r\n            if (containerWidth > (itemsLength * thumbWidth)) {\r\n              this.thumbnailsLessThanSlider = true;\r\n            } else {\r\n              // If slider size is smaller than thumbnails size\r\n              this.thumbnailsLessThanSlider = false;\r\n              if ((currIndex * thumbWidth + thumbWidth / 2) > containerWidth / 2) {\r\n                value = -(Math.min((currIndex * thumbWidth + thumbWidth / 2) - (containerWidth / 2), minHorizontalShift));\r\n              } else {\r\n                value = 0;\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            value = -(currIndex * thumbWidth) - (thumbWidth / 2 - state.value);\r\n        }\r\n        return {\r\n          transform: `translate3d(${ value }px, 0, 0)`,\r\n          width: itemsLength * thumbWidth + 'px',\r\n          height: '100%'\r\n        };\r\n      case ThumbnailsPosition.Left:\r\n      case ThumbnailsPosition.Right:\r\n        this.width = this.config.thumbWidth + 'px';\r\n        this.height = '100%';\r\n        switch (this.config.thumbView) {\r\n          case 'contain':\r\n            const containerHeight: number = this._el.nativeElement.clientHeight;\r\n            const minVerticalShift: number = itemsLength * thumbHeight - containerHeight;\r\n            // If slider size is larger than thumbnails size\r\n            if (containerHeight > (itemsLength * thumbHeight)) {\r\n              this.thumbnailsLessThanSlider = true;\r\n            } else {\r\n              // If slider size is smaller than thumbnails size\r\n              this.thumbnailsLessThanSlider = false;\r\n              if ((currIndex * thumbHeight + thumbHeight / 2) > containerHeight / 2) {\r\n                value = -(Math.min((currIndex * thumbHeight + thumbHeight / 2) - (containerHeight / 2), minVerticalShift));\r\n              } else {\r\n                value = 0;\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            value = -(currIndex * thumbHeight) - (thumbHeight / 2 - state.value);\r\n        }\r\n        return {\r\n          transform: `translate3d(0, ${ value }px, 0)`,\r\n          width: '100%',\r\n          height: itemsLength * thumbHeight + 'px'\r\n        };\r\n    }\r\n  }\r\n\r\n  private verticalPan(e: any) {\r\n    if (!(e.direction & Hammer.DIRECTION_VERTICAL && e.offsetDirection & Hammer.DIRECTION_VERTICAL)) {\r\n      return;\r\n    }\r\n    if (e.velocityY > 0.3) {\r\n      this.prev();\r\n    } else if (e.velocityY < -0.3) {\r\n      this.next();\r\n    } else {\r\n      if (e.deltaY / 2 <= -this.config.thumbHeight * this.state.items.length / this.config.panSensitivity) {\r\n        this.next();\r\n      } else if (e.deltaY / 2 >= this.config.thumbHeight * this.state.items.length / this.config.panSensitivity) {\r\n        this.prev();\r\n      } else {\r\n        this.action.emit(this.state.currIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  private horizontalPan(e: any) {\r\n    if (!(e.direction & Hammer.DIRECTION_HORIZONTAL && e.offsetDirection & Hammer.DIRECTION_HORIZONTAL)) {\r\n      return;\r\n    }\r\n    if (e.velocityX > 0.3) {\r\n      this.prev();\r\n    } else if (e.velocityX < -0.3) {\r\n      this.next();\r\n    } else {\r\n      if (e.deltaX / 2 <= -this.config.thumbWidth * this.state.items.length / this.config.panSensitivity) {\r\n        this.next();\r\n      } else if (e.deltaX / 2 >= this.config.thumbWidth * this.state.items.length / this.config.panSensitivity) {\r\n        this.prev();\r\n      } else {\r\n        this.action.emit(this.state.currIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  private next() {\r\n    this.action.emit('next');\r\n  }\r\n\r\n  private prev() {\r\n    this.action.emit('prev');\r\n  }\r\n\r\n  private updateSlider(state: WorkerState) {\r\n    const newState: WorkerState = { ...this._slidingWorker$.value, ...state };\r\n    this._slidingWorker$.next(newState);\r\n  }\r\n}\r\n","import { Component, Input, Output, HostBinding, ChangeDetectionStrategy, EventEmitter } from '@angular/core';\r\nimport { GalleryError, GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\n\r\n@Component({\r\n  selector: 'gallery-core',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <gallery-thumbs *ngIf=\"config.thumb\"\r\n                    [state]=\"state\"\r\n                    [config]=\"config\"\r\n                    (action)=\"action.emit($event)\"\r\n                    (thumbClick)=\"thumbClick.emit($event)\">\r\n    </gallery-thumbs>\r\n    <div class=\"g-box\">\r\n      <gallery-slider [state]=\"state\"\r\n                      [config]=\"config\"\r\n                      (action)=\"action.emit($event)\"\r\n                      (itemClick)=\"itemClick.emit($event)\"\r\n                      (error)=\"error.emit($event)\">\r\n\r\n        <gallery-nav *ngIf=\"config.nav && state.items.length > 1\"\r\n                     [state]=\"state\"\r\n                     [config]=\"config\"\r\n                     (action)=\"action.emit($event)\">\r\n        </gallery-nav>\r\n\r\n      </gallery-slider>\r\n\r\n      <gallery-dots *ngIf=\"config.dots\"\r\n                    [state]=\"state\"\r\n                    [config]=\"config\"\r\n                    (action)=\"action.emit($event)\">\r\n      </gallery-dots>\r\n\r\n      <gallery-counter *ngIf=\"config.counter\"\r\n                       [state]=\"state\">\r\n      </gallery-counter>\r\n    </div>\r\n  `\r\n})\r\nexport class GalleryCoreComponent {\r\n\r\n  @Input() state: GalleryState;\r\n  @Input() config: GalleryConfig;\r\n  @Output() action = new EventEmitter<string | number>();\r\n  @Output() itemClick = new EventEmitter<number>();\r\n  @Output() thumbClick = new EventEmitter<number>();\r\n  @Output() error = new EventEmitter<GalleryError>();\r\n\r\n  /** Set thumbnails position */\r\n  @HostBinding('attr.thumbPosition') get thumbPosition(): 'top' | 'left' | 'right' | 'bottom' {\r\n    return this.config.thumbPosition;\r\n  }\r\n\r\n  /** Set sliding direction */\r\n  @HostBinding('attr.slidingDirection') get slidingDirection(): 'horizontal' | 'vertical' {\r\n    return this.config.slidingDirection;\r\n  }\r\n\r\n  /** Disable thumbnails clicks */\r\n  @HostBinding('attr.disableThumb') get disableThumb(): boolean {\r\n    return this.config.disableThumb;\r\n  }\r\n\r\n  /** Set gallery image size */\r\n  @HostBinding('attr.imageSize') get imageSize(): 'cover' | 'contain' {\r\n    return this.config.imageSize;\r\n  }\r\n\r\n  /** Set gallery dots position */\r\n  @HostBinding('attr.dotsPosition') get dotsPosition(): 'top' | 'bottom' {\r\n    return this.config.dotsPosition;\r\n  }\r\n\r\n  /** Set gallery counter position */\r\n  @HostBinding('attr.counterPosition') get counterPosition(): 'top' | 'bottom' {\r\n    return this.config.counterPosition;\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  OnInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { Subscription, SubscriptionLike } from 'rxjs';\r\nimport { Gallery } from '../services/gallery.service';\r\nimport { GalleryRef } from '../services/gallery-ref';\r\nimport { GalleryError, GalleryItem, GalleryState } from '../models/gallery.model';\r\nimport {\r\n  IframeItem,\r\n  IframeItemData,\r\n  ImageItem,\r\n  ImageItemData,\r\n  VideoItem,\r\n  VideoItemData,\r\n  YoutubeItem,\r\n  YoutubeItemData\r\n} from './templates/items.model';\r\n\r\n@Component({\r\n  selector: 'gallery',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['../styles/gallery.scss'],\r\n  template: `\r\n    <gallery-core [state]=\"galleryRef.state | async\"\r\n                  [config]=\"galleryRef.config | async\"\r\n                  (action)=\"onAction($event)\"\r\n                  (itemClick)=\"onItemClick($event)\"\r\n                  (thumbClick)=\"onThumbClick($event)\"\r\n                  (error)=\"onError($event)\"></gallery-core>\r\n    <ng-content></ng-content>\r\n  `\r\n})\r\nexport class GalleryComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  galleryRef: GalleryRef;\r\n  @Input() id: string;\r\n  @Input() items: GalleryItem [];\r\n  @Input() nav: boolean = this._gallery.config.nav;\r\n  @Input() dots: boolean = this._gallery.config.dots;\r\n  @Input() loop: boolean = this._gallery.config.loop;\r\n  @Input() thumb: boolean = this._gallery.config.thumb;\r\n  @Input() zoomOut: number = this._gallery.config.zoomOut;\r\n  @Input() counter: boolean = this._gallery.config.counter;\r\n  @Input() dotsSize: number = this._gallery.config.dotsSize;\r\n  @Input() autoPlay: boolean = this._gallery.config.autoPlay;\r\n  @Input() gestures: boolean = this._gallery.config.gestures;\r\n  @Input() thumbWidth: number = this._gallery.config.thumbWidth;\r\n  @Input() thumbHeight: number = this._gallery.config.thumbHeight;\r\n  @Input() disableThumb: boolean = this._gallery.config.disableThumb;\r\n  @Input() panSensitivity: number = this._gallery.config.panSensitivity;\r\n  @Input() playerInterval: number = this._gallery.config.playerInterval;\r\n  @Input() reserveGesturesAction: boolean = this._gallery.config.reserveGesturesAction;\r\n  @Input() itemTemplate: TemplateRef<any> = this._gallery.config.itemTemplate;\r\n  @Input() thumbTemplate: TemplateRef<any> = this._gallery.config.thumbTemplate;\r\n  @Input() thumbMode: 'strict' | 'free' = this._gallery.config.thumbMode;\r\n  @Input() imageSize: 'cover' | 'contain' = this._gallery.config.imageSize;\r\n  @Input() dotsPosition: 'top' | 'bottom' = this._gallery.config.dotsPosition;\r\n  @Input() counterPosition: 'top' | 'bottom' = this._gallery.config.counterPosition;\r\n  @Input() slidingDirection: 'horizontal' | 'vertical' = this._gallery.config.slidingDirection;\r\n  @Input() loadingStrategy: 'preload' | 'lazy' | 'default' = this._gallery.config.loadingStrategy;\r\n  @Input() thumbPosition: 'top' | 'left' | 'right' | 'bottom' = this._gallery.config.thumbPosition;\r\n  @Input() thumbView: 'default' | 'contain' = this._gallery.config.thumbView;\r\n\r\n  // Inputs used by the lightbox\r\n\r\n  /** Destroy gallery ref on component destroy event */\r\n  @Input() destroyRef = true;\r\n\r\n  /** Skip initializing the config with components inputs (Lightbox mode) */\r\n  @Input() skipInitConfig = false;\r\n\r\n  @Output() itemClick = new EventEmitter<number>();\r\n  @Output() thumbClick = new EventEmitter<number>();\r\n  @Output() playingChange = new EventEmitter<GalleryState>();\r\n  @Output() indexChange = new EventEmitter<GalleryState>();\r\n  @Output() itemsChange = new EventEmitter<GalleryState>();\r\n  @Output() error = new EventEmitter<GalleryError>();\r\n\r\n  private _itemClick$: SubscriptionLike = Subscription.EMPTY;\r\n  private _thumbClick$: SubscriptionLike = Subscription.EMPTY;\r\n  private _itemChange$: SubscriptionLike = Subscription.EMPTY;\r\n  private _indexChange$: SubscriptionLike = Subscription.EMPTY;\r\n  private _playingChange$: SubscriptionLike = Subscription.EMPTY;\r\n  private _playerListener$: SubscriptionLike = Subscription.EMPTY;\r\n\r\n  constructor(private _gallery: Gallery) {\r\n  }\r\n\r\n  private getConfig() {\r\n    return {\r\n      nav: this.nav,\r\n      dots: this.dots,\r\n      loop: this.loop,\r\n      thumb: this.thumb,\r\n      zoomOut: this.zoomOut,\r\n      counter: this.counter,\r\n      autoPlay: this.autoPlay,\r\n      gestures: this.gestures,\r\n      dotsSize: this.dotsSize,\r\n      imageSize: this.imageSize,\r\n      thumbMode: this.thumbMode,\r\n      thumbView: this.thumbView,\r\n      thumbWidth: this.thumbWidth,\r\n      thumbHeight: this.thumbHeight,\r\n      disableThumb: this.disableThumb,\r\n      dotsPosition: this.dotsPosition,\r\n      itemTemplate: this.itemTemplate,\r\n      thumbTemplate: this.thumbTemplate,\r\n      thumbPosition: this.thumbPosition,\r\n      panSensitivity: this.panSensitivity,\r\n      playerInterval: this.playerInterval,\r\n      counterPosition: this.counterPosition,\r\n      loadingStrategy: this.loadingStrategy,\r\n      slidingDirection: this.slidingDirection,\r\n      reserveGesturesAction: this.reserveGesturesAction\r\n    };\r\n  }\r\n\r\n  onAction(i: string | number) {\r\n    switch (i) {\r\n      case 'next':\r\n        this.galleryRef.next();\r\n        break;\r\n      case 'prev':\r\n        this.galleryRef.prev();\r\n        break;\r\n      default:\r\n        this.galleryRef.set(i as number);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.galleryRef) {\r\n      this.galleryRef.setConfig(this.getConfig());\r\n\r\n      if (changes.items && changes.items.currentValue !== changes.items.previousValue) {\r\n        this.load(this.items);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Get gallery instance by id\r\n    if (this.skipInitConfig) {\r\n      this.galleryRef = this._gallery.ref(this.id);\r\n    } else {\r\n      this.galleryRef = this._gallery.ref(this.id, this.getConfig());\r\n    }\r\n\r\n    // Load gallery items\r\n    this.load(this.items);\r\n\r\n    // Activate player listener\r\n    this._playerListener$ = this.galleryRef.activatePlayer().subscribe();\r\n\r\n    // Subscribes to events on demand\r\n    if (this.indexChange.observed) {\r\n      this._indexChange$ = this.galleryRef.indexChanged.subscribe((state: GalleryState) => this.indexChange.emit(state));\r\n    }\r\n    if (this.itemsChange.observed) {\r\n      this._itemChange$ = this.galleryRef.itemsChanged.subscribe((state: GalleryState) => this.itemsChange.emit(state));\r\n    }\r\n    if (this.playingChange.observed) {\r\n      this._playingChange$ = this.galleryRef.playingChanged.subscribe((state: GalleryState) => this.playingChange.emit(state));\r\n    }\r\n\r\n    // Start playing if autoplay is set to true\r\n    if (this.autoPlay) {\r\n      this.play();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._itemClick$.unsubscribe();\r\n    this._thumbClick$.unsubscribe();\r\n    this._itemChange$.unsubscribe();\r\n    this._indexChange$.unsubscribe();\r\n    this._playingChange$.unsubscribe();\r\n    this._playerListener$.unsubscribe();\r\n    if (this.destroyRef) {\r\n      this.galleryRef.destroy();\r\n    }\r\n  }\r\n\r\n  onItemClick(i: number) {\r\n    this.itemClick.emit(i);\r\n    this.galleryRef.itemClick.next(i);\r\n  }\r\n\r\n  onThumbClick(i: number) {\r\n    this.galleryRef.set(i);\r\n    this.thumbClick.emit(i);\r\n    this.galleryRef.thumbClick.next(i);\r\n  }\r\n\r\n  onError(err: GalleryError) {\r\n    this.error.emit(err);\r\n    this.galleryRef.error.next(err);\r\n  }\r\n\r\n  load(items: GalleryItem[]) {\r\n    this.galleryRef.load(items);\r\n  }\r\n\r\n  add(item: GalleryItem, active?: boolean) {\r\n    this.galleryRef.add(item, active);\r\n  }\r\n\r\n  addImage(data: ImageItemData, active?: boolean) {\r\n    this.add(new ImageItem(data), active);\r\n  }\r\n\r\n  addVideo(data: VideoItemData, active?: boolean) {\r\n    this.add(new VideoItem(data), active);\r\n  }\r\n\r\n  addIframe(data: IframeItemData, active?: boolean) {\r\n    this.add(new IframeItem(data), active);\r\n  }\r\n\r\n  addYoutube(data: YoutubeItemData, active?: boolean) {\r\n    this.add(new YoutubeItem(data), active);\r\n  }\r\n\r\n  remove(i: number) {\r\n    this.galleryRef.remove(i);\r\n  }\r\n\r\n  next() {\r\n    this.galleryRef.next();\r\n  }\r\n\r\n  prev() {\r\n    this.galleryRef.prev();\r\n  }\r\n\r\n  set(i: number) {\r\n    this.galleryRef.set(i);\r\n  }\r\n\r\n  reset() {\r\n    this.galleryRef.reset();\r\n  }\r\n\r\n  play(interval?: number) {\r\n    this.galleryRef.play(interval);\r\n  }\r\n\r\n  stop() {\r\n    this.galleryRef.stop();\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { GalleryConfig, GALLERY_CONFIG } from './models/config.model';\r\n\r\nimport { GalleryComponent } from './components/gallery.component';\r\nimport { GalleryNavComponent } from './components/gallery-nav.component';\r\nimport { GalleryCoreComponent } from './components/gallery-core.component';\r\nimport { GalleryDotsComponent } from './components/gallery-dots.component';\r\nimport { GalleryThumbsComponent } from './components/gallery-thumbs.component';\r\nimport { GallerySliderComponent } from './components/gallery-slider.component';\r\nimport { GalleryCounterComponent } from './components/gallery-counter.component';\r\n\r\nimport { GalleryItemComponent } from './components/gallery-item.component';\r\nimport { GalleryThumbComponent } from './components/gallery-thumb.component';\r\nimport { GalleryImageComponent } from './components/templates/gallery-image.component';\r\nimport { GalleryVideoComponent } from './components/templates/gallery-video.component';\r\nimport { GalleryIframeComponent } from './components/templates/gallery-iframe.component';\r\n\r\nimport { LazyImage } from './directives/lazy-image';\r\nimport { TapClick } from './directives/tap-click';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    GalleryComponent,\r\n    GalleryNavComponent,\r\n    GalleryDotsComponent,\r\n    GalleryCoreComponent,\r\n    GallerySliderComponent,\r\n    GalleryCounterComponent,\r\n    GalleryThumbsComponent,\r\n    GalleryThumbComponent,\r\n    GalleryItemComponent,\r\n    GalleryImageComponent,\r\n    GalleryVideoComponent,\r\n    GalleryIframeComponent,\r\n    LazyImage,\r\n    TapClick\r\n  ],\r\n  exports: [\r\n    GalleryComponent,\r\n    LazyImage,\r\n    TapClick\r\n  ]\r\n})\r\nexport class GalleryModule {\r\n  static withConfig(config: GalleryConfig): ModuleWithProviders<GalleryModule> {\r\n\r\n    return {\r\n      ngModule: GalleryModule,\r\n      providers: [\r\n        {\r\n          provide: GALLERY_CONFIG,\r\n          useValue: config\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2","i3.TapClick","i1","i2.TapClick","i3.LazyImage","i2.GalleryImageComponent","i3.GalleryVideoComponent","i4.GalleryIframeComponent","i2.GalleryItemComponent","i2.GalleryThumbComponent","i2.GalleryNavComponent","i3.GalleryDotsComponent","i4.GallerySliderComponent","i5.GalleryCounterComponent","i6.GalleryThumbsComponent","i1.Gallery","i2.GalleryCoreComponent","i3"],"mappings":"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"}