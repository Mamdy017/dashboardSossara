{"version":3,"sources":["ngx-tabset.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","ngxTabset","core","common","this","TabComponent","active","disabled","bypassDOM","customPaneClass","decorators","type","Component","args","selector","template","ctorParameters","propDecorators","tabTitle","Input","tabSubTitle","ContentChild","TemplateRef","TabsetComponent","disableStyle","customNavClass","customTabsClass","onSelect","EventEmitter","prototype","ngAfterContentInit","tabs","filter","tab","length","selectTab","first","tabToSelect","toArray","forEach","emit","indexOf","ContentChildren","Output","TabsModule","forRoot","ngModule","providers","forChild","NgModule","declarations","imports","CommonModule","Object","defineProperty","value"],"mappings":"CAAC,SAAUA,OAAQC,SACC,iBAAZC,SAA0C,oBAAXC,OAAyBF,QAAQC,QAASE,QAAQ,iBAAkBA,QAAQ,oBAChG,mBAAXC,QAAyBA,OAAOC,IAAMD,QAAQ,UAAW,gBAAiB,mBAAoBJ,SACpGA,SAASD,OAAOO,GAAKP,OAAOO,OAAUP,OAAOO,GAAGC,cAAgBR,OAAOO,GAAGE,KAAKT,OAAOO,GAAGG,QAH3F,CAIEC,KAAM,SAAWT,QAAQO,KAAKC,QAAU;;;;AAW1C,IAAIE,aAAgB,WAChB,SAASA,eACLD,KAAKE,QAAS,EACdF,KAAKG,UAAW,EAChBH,KAAKI,WAAY,EACjBJ,KAAKK,gBAAkB,GAmB3B,OAjBAJ,aAAaK,aACPC,KAAMT,KAAKU,UAAWC,OACZC,SAAU,UACVC,SAAU,iTAI1BV,aAAaW,eAAiB,WAAc,UAC5CX,aAAaY,gBACTC,WAAeP,KAAMT,KAAKiB,QAC1BC,cAAkBT,KAAMT,KAAKiB,QAC7Bb,SAAaK,KAAMT,KAAKiB,QACxBZ,WAAeI,KAAMT,KAAKiB,QAC1BX,YAAgBG,KAAMT,KAAKiB,QAC3BV,kBAAsBE,KAAMT,KAAKiB,QACjCJ,WAAeJ,KAAMT,KAAKmB,aAAcR,MAAOX,KAAKoB,gBAEjDjB,aAxBQ,GA+BfkB,gBAAmB,WACnB,SAASA,kBACLnB,KAAKoB,cAAe,EACpBpB,KAAKqB,eAAiB,GACtBrB,KAAKsB,gBAAkB,GACvBtB,KAAKuB,SAAW,IAAIzB,KAAK0B,aAiD7B,OA5CAL,gBAAgBM,UAAUC,mBAG1B,WAI8B,IAFQ1B,KAAK2B,KAAKC,OAAO,SAAUC,KAAO,OAAOA,IAAI3B,SAEhE4B,QACX9B,KAAK+B,UAAU/B,KAAK2B,KAAKK,QAOjCb,gBAAgBM,UAAUM,UAI1B,SAAUE,cACuB,IAAzBA,YAAY9B,WAA4C,IAAvB8B,YAAY/B,SAIjDF,KAAK2B,KAAKO,UAAUC,QAAQ,SAAUN,KAAO,OAAOA,IAAI3B,QAAS,IAEjE+B,YAAY/B,QAAS,EACrBF,KAAKuB,SAASa,KAAKpC,KAAK2B,KAAKO,UAAUG,QAAQJ,gBAEnDd,gBAAgBb,aACVC,KAAMT,KAAKU,UAAWC,OACZC,SAAU,aACVC,SAAU,ikBAI1BQ,gBAAgBP,eAAiB,WAAc,UAC/CO,gBAAgBN,gBACZc,OAAWpB,KAAMT,KAAKwC,gBAAiB7B,MAAOR,gBAC9CmB,eAAmBb,KAAMT,KAAKiB,QAC9BM,iBAAqBd,KAAMT,KAAKiB,QAChCO,kBAAsBf,KAAMT,KAAKiB,QACjCQ,WAAehB,KAAMT,KAAKyC,UAEvBpB,gBAtDW,GA6DlBqB,WAAc,WACd,SAASA,cA6CT,OAvCAA,WAAWC,QAIX,WACI,OACIC,SAAUF,WACVG,eAORH,WAAWI,SAIX,WACI,OACIF,SAAUF,WACVG,eAGRH,WAAWlC,aACLC,KAAMT,KAAK+C,SAAUpC,OACXqC,cACI7C,aACAkB,iBAEJ5B,SACIU,aACAkB,iBAEJ4B,SAAUhD,OAAOiD,kBAIjCR,WAAW5B,eAAiB,WAAc,UACnC4B,WA9CM,GAiDjBjD,QAAQ4B,gBAAkBA,gBAC1B5B,QAAQU,aAAeA,aACvBV,QAAQiD,WAAaA,WAErBS,OAAOC,eAAe3D,QAAS,cAAgB4D,OAAO","file":"ngx-tabset.umd.min.js.map","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.ngxTabset = {}),global.ng.core,global.ng.common));\n}(this, (function (exports,core,common) { 'use strict';\n\n/**\n * @license ngx-tabset\n * MIT license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar TabComponent = (function () {\n    function TabComponent() {\n        this.active = false;\n        this.disabled = false;\n        this.bypassDOM = false;\n        this.customPaneClass = '';\n    }\n    TabComponent.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'ngx-tab',\n                    template: \"\\n    <div *ngIf=\\\"active\\\"\\n         class=\\\"pane\\\"\\n         [ngClass]=\\\"customPaneClass\\\">\\n      <div *ngIf=\\\"bypassDOM\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"template\\\"></ng-container>\\n      </div>\\n      <div *ngIf=\\\"!bypassDOM\\\">\\n        <ng-content></ng-content>\\n      </div>\\n    </div>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    TabComponent.ctorParameters = function () { return []; };\n    TabComponent.propDecorators = {\n        \"tabTitle\": [{ type: core.Input },],\n        \"tabSubTitle\": [{ type: core.Input },],\n        \"active\": [{ type: core.Input },],\n        \"disabled\": [{ type: core.Input },],\n        \"bypassDOM\": [{ type: core.Input },],\n        \"customPaneClass\": [{ type: core.Input },],\n        \"template\": [{ type: core.ContentChild, args: [core.TemplateRef,] },],\n    };\n    return TabComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar TabsetComponent = (function () {\n    function TabsetComponent() {\n        this.disableStyle = false;\n        this.customNavClass = '';\n        this.customTabsClass = '';\n        this.onSelect = new core.EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    TabsetComponent.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        // get all active tabs\n        var /** @type {?} */ activeTabs = this.tabs.filter(function (tab) { return tab.active; });\n        // if there is no active tab set, activate the first\n        if (activeTabs.length === 0) {\n            this.selectTab(this.tabs.first);\n        }\n    };\n    /**\n     * @param {?} tabToSelect\n     * @return {?}\n     */\n    TabsetComponent.prototype.selectTab = /**\n     * @param {?} tabToSelect\n     * @return {?}\n     */\n    function (tabToSelect) {\n        if (tabToSelect.disabled === true || tabToSelect.active === true) {\n            return;\n        }\n        // deactivate all tabs\n        this.tabs.toArray().forEach(function (tab) { return tab.active = false; });\n        // activate the tab the user has clicked on.\n        tabToSelect.active = true;\n        this.onSelect.emit(this.tabs.toArray().indexOf(tabToSelect));\n    };\n    TabsetComponent.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'ngx-tabset',\n                    template: \"\\n    <ul class=\\\"nav-tabset\\\"\\n        [class.disable-style]=\\\"disableStyle\\\"\\n        [ngClass]=\\\"customNavClass\\\">\\n      <li *ngFor=\\\"let tab of tabs\\\"\\n          (click)=\\\"selectTab(tab)\\\"\\n          class=\\\"nav-tab\\\"\\n          [class.active]=\\\"tab.active\\\"\\n          [class.disabled]=\\\"tab.disabled\\\">\\n        <span>{{ tab.tabTitle }}</span>\\n        <span *ngIf=\\\"!!tab.tabSubTitle\\\" class=\\\"tab-subtitle\\\">{{ tab.tabSubTitle }}</span>\\n      </li>\\n    </ul>\\n    <div class=\\\"tabs-container\\\"\\n         [ngClass]=\\\"customTabsClass\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    TabsetComponent.ctorParameters = function () { return []; };\n    TabsetComponent.propDecorators = {\n        \"tabs\": [{ type: core.ContentChildren, args: [TabComponent,] },],\n        \"disableStyle\": [{ type: core.Input },],\n        \"customNavClass\": [{ type: core.Input },],\n        \"customTabsClass\": [{ type: core.Input },],\n        \"onSelect\": [{ type: core.Output },],\n    };\n    return TabsetComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar TabsModule = (function () {\n    function TabsModule() {\n    }\n    /**\n     * Use in AppModule: new instance of NgxTabset.\n     * @return {?}\n     */\n    TabsModule.forRoot = /**\n     * Use in AppModule: new instance of NgxTabset.\n     * @return {?}\n     */\n    function () {\n        return {\n            ngModule: TabsModule,\n            providers: []\n        };\n    };\n    /**\n     * Use in features modules with lazy loading: new instance of NgxTabset.\n     * @return {?}\n     */\n    TabsModule.forChild = /**\n     * Use in features modules with lazy loading: new instance of NgxTabset.\n     * @return {?}\n     */\n    function () {\n        return {\n            ngModule: TabsModule,\n            providers: []\n        };\n    };\n    TabsModule.decorators = [\n        { type: core.NgModule, args: [{\n                    declarations: [\n                        TabComponent,\n                        TabsetComponent,\n                    ],\n                    exports: [\n                        TabComponent,\n                        TabsetComponent,\n                    ],\n                    imports: [common.CommonModule]\n                },] },\n    ];\n    /** @nocollapse */\n    TabsModule.ctorParameters = function () { return []; };\n    return TabsModule;\n}());\n\nexports.TabsetComponent = TabsetComponent;\nexports.TabComponent = TabComponent;\nexports.TabsModule = TabsModule;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=ngx-tabset.umd.js.map\n"]}