{"version":3,"file":"ngx-tabset.js","sources":["../../src/components/tab.ts","../../src/components/tab-set.ts","../../src/modules/ngx-tabset.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'ngx-tab',\n  template: `\n    <div *ngIf=\"active\"\n         class=\"pane\"\n         [ngClass]=\"customPaneClass\">\n      <div *ngIf=\"bypassDOM\">\n        <ng-container [ngTemplateOutlet]=\"template\"></ng-container>\n      </div>\n      <div *ngIf=\"!bypassDOM\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `\n})\nexport class TabComponent {\n  @Input() public tabTitle: string;\n  @Input() public tabSubTitle: string;\n  @Input() public active = false;\n  @Input() public disabled = false;\n  @Input() public bypassDOM = false;\n  @Input() public customPaneClass: string = '';\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\n}\n","import { Component, ContentChildren, QueryList, AfterContentInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { TabComponent } from './tab';\n\n@Component({\n  selector: 'ngx-tabset',\n  template: `\n    <ul class=\"nav-tabset\"\n        [class.disable-style]=\"disableStyle\"\n        [ngClass]=\"customNavClass\">\n      <li *ngFor=\"let tab of tabs\"\n          (click)=\"selectTab(tab)\"\n          class=\"nav-tab\"\n          [class.active]=\"tab.active\"\n          [class.disabled]=\"tab.disabled\">\n        <span>{{ tab.tabTitle }}</span>\n        <span *ngIf=\"!!tab.tabSubTitle\" class=\"tab-subtitle\">{{ tab.tabSubTitle }}</span>\n      </li>\n    </ul>\n    <div class=\"tabs-container\"\n         [ngClass]=\"customTabsClass\">\n      <ng-content></ng-content>\n    </div>\n  `\n})\nexport class TabsetComponent implements AfterContentInit {\n\n  @ContentChildren(TabComponent) public tabs: QueryList<TabComponent>;\n\n  @Input() public disableStyle = false;\n  @Input() public customNavClass: string = '';\n  @Input() public customTabsClass: string = '';\n\n  @Output() public onSelect = new EventEmitter();\n\n  // contentChildren are set\n  public ngAfterContentInit() {\n    // get all active tabs\n    const activeTabs = this.tabs.filter((tab: TabComponent) => tab.active);\n\n    // if there is no active tab set, activate the first\n    if (activeTabs.length === 0) {\n      this.selectTab(this.tabs.first);\n    }\n  }\n\n  public selectTab(tabToSelect: TabComponent): void {\n    if (tabToSelect.disabled === true || tabToSelect.active === true) {\n      return;\n    }\n\n    // deactivate all tabs\n    this.tabs.toArray().forEach((tab: TabComponent) => tab.active = false);\n\n    // activate the tab the user has clicked on.\n    tabToSelect.active = true;\n    this.onSelect.emit(this.tabs.toArray().indexOf(tabToSelect));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { TabsetComponent } from '../components/tab-set';\nimport { TabComponent } from '../components/tab';\n\n@NgModule({\n  declarations: [\n    TabComponent,\n    TabsetComponent,\n  ],\n  exports: [\n    TabComponent,\n    TabsetComponent,\n  ],\n  imports: [CommonModule]\n})\nexport class TabsModule {\n\n  /**\n   * Use in AppModule: new instance of NgxTabset.\n   */\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TabsModule,\n      providers: []\n    };\n  }\n\n  /**\n   * Use in features modules with lazy loading: new instance of NgxTabset.\n   */\n  public static forChild(): ModuleWithProviders {\n    return {\n      ngModule: TabsModule,\n      providers: []\n    };\n  }\n\n}\n"]}