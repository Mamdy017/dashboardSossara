{"version":3,"file":"ngx-tabset.js","sources":["../../src/components/tab.ts","../../src/components/tab-set.ts","../../src/modules/ngx-tabset.module.ts"],"sourcesContent":["import { Component, Input, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'ngx-tab',\n  template: `\n    <div *ngIf=\"active\"\n         class=\"pane\"\n         [ngClass]=\"customPaneClass\">\n      <div *ngIf=\"bypassDOM\">\n        <ng-container [ngTemplateOutlet]=\"template\"></ng-container>\n      </div>\n      <div *ngIf=\"!bypassDOM\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `\n})\nexport class TabComponent {\n  @Input() public tabTitle: string;\n  @Input() public tabSubTitle: string;\n  @Input() public active = false;\n  @Input() public disabled = false;\n  @Input() public bypassDOM = false;\n  @Input() public customPaneClass: string = '';\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\n}\n","import { Component, ContentChildren, QueryList, AfterContentInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { TabComponent } from './tab';\n\n@Component({\n  selector: 'ngx-tabset',\n  template: `\n    <ul class=\"nav-tabset\"\n        [class.disable-style]=\"disableStyle\"\n        [ngClass]=\"customNavClass\">\n      <li *ngFor=\"let tab of tabs\"\n          (click)=\"selectTab(tab)\"\n          class=\"nav-tab\"\n          [class.active]=\"tab.active\"\n          [class.disabled]=\"tab.disabled\">\n        <span>{{ tab.tabTitle }}</span>\n        <span *ngIf=\"!!tab.tabSubTitle\" class=\"tab-subtitle\">{{ tab.tabSubTitle }}</span>\n      </li>\n    </ul>\n    <div class=\"tabs-container\"\n         [ngClass]=\"customTabsClass\">\n      <ng-content></ng-content>\n    </div>\n  `\n})\nexport class TabsetComponent implements AfterContentInit {\n\n  @ContentChildren(TabComponent) public tabs: QueryList<TabComponent>;\n\n  @Input() public disableStyle = false;\n  @Input() public customNavClass: string = '';\n  @Input() public customTabsClass: string = '';\n\n  @Output() public onSelect = new EventEmitter();\n\n  // contentChildren are set\n  public ngAfterContentInit() {\n    // get all active tabs\n    const activeTabs = this.tabs.filter((tab: TabComponent) => tab.active);\n\n    // if there is no active tab set, activate the first\n    if (activeTabs.length === 0) {\n      this.selectTab(this.tabs.first);\n    }\n  }\n\n  public selectTab(tabToSelect: TabComponent): void {\n    if (tabToSelect.disabled === true || tabToSelect.active === true) {\n      return;\n    }\n\n    // deactivate all tabs\n    this.tabs.toArray().forEach((tab: TabComponent) => tab.active = false);\n\n    // activate the tab the user has clicked on.\n    tabToSelect.active = true;\n    this.onSelect.emit(this.tabs.toArray().indexOf(tabToSelect));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { TabsetComponent } from '../components/tab-set';\nimport { TabComponent } from '../components/tab';\n\n@NgModule({\n  declarations: [\n    TabComponent,\n    TabsetComponent,\n  ],\n  exports: [\n    TabComponent,\n    TabsetComponent,\n  ],\n  imports: [CommonModule]\n})\nexport class TabsModule {\n\n  /**\n   * Use in AppModule: new instance of NgxTabset.\n   */\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TabsModule,\n      providers: []\n    };\n  }\n\n  /**\n   * Use in features modules with lazy loading: new instance of NgxTabset.\n   */\n  public static forChild(): ModuleWithProviders {\n    return {\n      ngModule: TabsModule,\n      providers: []\n    };\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;sBAoB2B,KAAK;wBACH,KAAK;yBACJ,KAAK;+BACS,EAAE;;;;YArB7C,SAAS,SAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,QAAQ,EAAE;;;;;;;;;;;GAWT;aACF;;;;;yBAEE,KAAK;4BACL,KAAK;uBACL,KAAK;yBACL,KAAK;0BACL,KAAK;gCACL,KAAK;yBACL,YAAY,SAAC,WAAW;;;;;;;ACxB3B;;4BA6BiC,KAAK;8BACK,EAAE;+BACD,EAAE;wBAEhB,IAAI,YAAY,EAAE;;;;;IAGvC,kBAAkB;;QAEvB,uBAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAiB,KAAK,GAAG,CAAC,MAAM,CAAC,CAAC;;QAGvE,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACjC;;;;;;IAGI,SAAS,CAAC,WAAyB;QACxC,IAAI,WAAW,CAAC,QAAQ,KAAK,IAAI,IAAI,WAAW,CAAC,MAAM,KAAK,IAAI,EAAE;YAChE,OAAO;SACR;;QAGD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC,GAAiB,KAAK,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;;QAGvE,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;;;;YApDhE,SAAS,SAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,QAAQ,EAAE;;;;;;;;;;;;;;;;;GAiBT;aACF;;;;;qBAGE,eAAe,SAAC,YAAY;6BAE5B,KAAK;+BACL,KAAK;gCACL,KAAK;yBAEL,MAAM;;;;;;;ACjCT;;;;;IAsBS,OAAO,OAAO;QACnB,OAAO;YACL,QAAQ,EAAE,UAAU;YACpB,SAAS,EAAE,EAAE;SACd,CAAC;;;;;;IAMG,OAAO,QAAQ;QACpB,OAAO;YACL,QAAQ,EAAE,UAAU;YACpB,SAAS,EAAE,EAAE;SACd,CAAC;;;;YA9BL,QAAQ,SAAC;gBACR,YAAY,EAAE;oBACZ,YAAY;oBACZ,eAAe;iBAChB;gBACD,OAAO,EAAE;oBACP,YAAY;oBACZ,eAAe;iBAChB;gBACD,OAAO,EAAE,CAAC,YAAY,CAAC;aACxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}