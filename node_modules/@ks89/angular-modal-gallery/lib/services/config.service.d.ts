import { SlideConfig } from '../model/slide-config.interface';
import { PlayConfig } from '../model/play-config.interface';
import { PreviewConfig } from '../model/preview-config.interface';
import { Size } from '../model/size.interface';
import { LineLayout, PlainGalleryConfig } from '../model/plain-gallery-config.interface';
import { CurrentImageConfig } from '../model/current-image-config.interface';
import { LoadingConfig } from '../model/loading-config.interface';
import { Description, DescriptionStyle } from '../model/description.interface';
import { CarouselConfig } from '../model/carousel-config.interface';
import { CarouselImageConfig } from '../model/carousel-image-config.interface';
import { BreakpointsConfig, CarouselPreviewConfig } from '../model/carousel-preview-config.interface';
import { KeyboardServiceConfig } from '../model/keyboard-service-config.interface';
import { LibConfig } from '../model/lib-config.interface';
import * as i0 from "@angular/core";
export declare const DEFAULT_PREVIEW_SIZE: Size;
export declare const DEFAULT_LAYOUT: LineLayout;
export declare const DEFAULT_PLAIN_CONFIG: PlainGalleryConfig;
export declare const DEFAULT_LOADING: LoadingConfig;
export declare const DEFAULT_DESCRIPTION_STYLE: DescriptionStyle;
export declare const DEFAULT_DESCRIPTION: Description;
export declare const DEFAULT_CAROUSEL_DESCRIPTION: Description;
export declare const DEFAULT_CURRENT_IMAGE_CONFIG: CurrentImageConfig;
export declare const DEFAULT_CAROUSEL_IMAGE_CONFIG: CarouselImageConfig;
export declare const DEFAULT_CURRENT_CAROUSEL_CONFIG: CarouselConfig;
export declare const DEFAULT_CURRENT_CAROUSEL_PLAY: PlayConfig;
export declare const DEFAULT_CAROUSEL_BREAKPOINTS: BreakpointsConfig;
export declare const DEFAULT_CAROUSEL_PREVIEWS_CONFIG: CarouselPreviewConfig;
export declare const DEFAULT_KEYBOARD_SERVICE_CONFIG: KeyboardServiceConfig;
export declare const DEFAULT_SLIDE_CONFIG: SlideConfig;
export declare const DEFAULT_PREVIEW_CONFIG: PreviewConfig;
/**
 * Service to handle library configuration in a unique place
 */
export declare class ConfigService {
    configMap: Map<number, LibConfig>;
    getConfig(id: number): LibConfig | undefined;
    setConfig(id: number, obj: LibConfig | undefined): void;
    private initIfNotExists;
    static ɵfac: i0.ɵɵFactoryDeclaration<ConfigService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ConfigService>;
}
